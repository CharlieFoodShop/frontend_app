{"version":3,"sources":["config/CUSTOMER_API_URL.js","pages/customer_pages/components/Footer.js","config/KEY.js","pages/customer_pages/CustomerLogIn.js","pages/customer_pages/CustomerRegister.js","pages/customer_pages/CustomerResetPassword.js","pages/customer_pages/CustomerResetPasswordToken.js","pages/customer_pages/components/Home.js","pages/customer_pages/components/FoodShop.js","context/ShopContext.js","pages/customer_pages/components/FoodItem.js","pages/customer_pages/components/Paypal.js","pages/customer_pages/components/Cart.js","pages/customer_pages/CustomerIndex.js","config/MANAGER_API_URL.js","pages/manager_pages/components/Footer.js","pages/manager_pages/ManagerLogIn.js","pages/manager_pages/ManagerRegister.js","pages/manager_pages/ManagerResetPassword.js","pages/manager_pages/ManagerResetPasswordToken.js","pages/manager_pages/components/FoodShopList.js","pages/manager_pages/components/AddFoodShop.js","pages/manager_pages/components/FoodShopDetail.js","pages/manager_pages/components/FoodItemDetail.js","pages/manager_pages/components/AddFoodItem.js","pages/manager_pages/components/AddFoodItemCategory.js","pages/manager_pages/components/EditFoodShop.js","pages/manager_pages/components/EditFoodItem.js","pages/manager_pages/components/SettingAccount.js","pages/manager_pages/components/EditProfile.js","pages/manager_pages/ManagerIndex.js","context/reducer.js","context/GlobalState.js","App.js","index.js"],"names":["IP_URL","IP_URL_FOOD_SHOP","IP_URL_FOOD_ITEM","IP_URL_ORDER","CUSTOMER_SERVICE_PATH","DEFAULT_URL","REGISTER_URL","LOGIN_URL","LOGOUT_URL","RESET_PASSWORD","GET_CUSTOMER_DETAIL","UPDATE_CUSTOMER_PROFILE","CUSTOMER_UPLOAD_AVATAR","RANDOM_FOOD_SHOP_POP_UP","GET_FAVOURITE_FOOD_SHOPS","GET_FOOD_SHOP_DETAIL","GET_FOOD_CATEGORIES","UPDATE_FAVOURITE_FOOD_SHOP","GET_FOOD_ITEMS_BY_SHOP_ID","GET_FOOD_ITEMS_BY_CATEGORY_ID","GET_FOOD_ITEM_DETAIL_BY_ID","GET_ALL_DRIVER_DETAIL","IP_URL_DELIVER_DRIVER","CREATE_ORDER","ADD_ORDER_TO_DATABASE","Footer","className","to","pathname","target","Date","getFullYear","KEY","reCAPTCHA_site_key","BingMap_key","CustomerLogIn","props","useState","loading","setLoading","emailAddress","useRef","password","rememberMe","recaptcha","useEffect","localStorage","getItem","history","push","handleLogin","captcha","data","email_address","current","state","value","axios","method","url","withCredentials","then","res","success","checked","setItem","customerSessionId","message","error","catch","e","response","tip","spinning","title","style","width","bordered","id","size","type","prefix","UserOutlined","color","placeholder","autoFocus","defaultValue","ref","required","Password","KeyOutlined","block","htmlType","onClick","preventDefault","execute","action","span","textAlign","sitekey","onResolved","console","log","CustomerRegister","firstName","lastName","phoneNumber","confirmPassword","handleRegister","first_name","last_name","phone","Title","level","marginLeft","pattern","Text","CustomerResetPassword","handleResetPassword","MailOutlined","CustomerResetPasswordToken","handleResetPasswordFinal","match","params","token","Home","foodShopList","setFoodShopList","a","getRandomFoodShops","result","results","map","item","index","float","margin","food_shop_id","hoverable","cover","height","alt","src","image_url","Meta","food_shop_name","description","working_address","food_shop_category_name","on_favourite","StarOutlined","FoodShop","foodShopId","setFoodShopId","foodShopName","setFoodShopName","foodShopCategoryName","setFoodShopCategoryName","foodShopDescription","setFoodShopDescription","foodShopRating","setFoodShopRating","imageUrl","setImageUrl","active","setActive","onFavourite","setOnFavourite","openTime","setOpenTime","workingAddress","setWorkingAddress","foodCategoryList","setFoodCategoryList","foodItemList","setFoodItemList","getFoodShopDetail","food_shop_detail","food_shop_description","food_shop_rating","open_time","getFoodCategories","food_category_list","getFoodItemByShopId","food_item_list","getFoodItemByCategoryId","food_category_id","handleFoodItemListChange","handleEditMyFavourite","pre","overflow","marginTop","disabled","Group","onChange","Button","food_category_name","food_item_id","food_name","food_price","food_average_rating","React","createContext","cart","addProductToCart","product","addProductToCartByOne","deleteProductFromCartByOne","removeProductFromCart","clearCart","FoodItem","context","useContext","ShopContext","foodItemId","setFoodItemId","foodAverageRating","setFoodAverageRating","foodCategoryName","setFoodCategoryName","foodDescription","setFoodDescription","foodName","setFoodName","foodPrice","setFoodPrice","quantity","setQuantity","getFoodItemDetail","food_item_detail","food_description","marginRight","shape","icon","MinusOutlined","PlusOutlined","Paypal","paypal","window","Buttons","createOrder","item_list","address","driver_id","driverId","lat","lon","note","onApprove","actions","order","capture","render","Cart","driverList","setDriverList","possibleAddressList","setPossibleAddressList","setAddress","setLat","setLon","selectDriver","setSelectDriver","setNote","foodTotal","setFoodTotal","driverTotal","setDriverTotal","checkout","setCheckout","getDriverList","getFoodTotal","getPossibleAddressList","text","length","_text","replace","_results","resourceSets","resources","i","name","key","total","updateCoord","_address","point","coordinates","danger","options","onSearch","onSelect","avatar","avatar_url","cost","speed","Option","TextArea","rows","deliver_driver_id","Math","floor","CustomerIndex","helloTitle","setHelloTitle","avatarUrl","setAvatarUrl","getCustomerDetail","customerDetail","timeTitle","getTimeTitle","hour","getHours","menu","removeItem","Item","borderBottom","justify","xs","sm","md","lg","xl","Search","allowClear","enterButton","cursor","count","ShoppingCartOutlined","overlay","placement","Content","padding","minHeight","path","exact","component","MANAGER_SERVICE_PATH","GET_MANAGER_DETAIL","UPDATE_MANAGER_ACCOUNT","UPDATE_MANAGER_PROFILE","MANAGER_UPLOAD_AVATAR","ADD_FOOD_SHOP_URL","ADD_FOOD_CATEGORY","GET_FOOD_SHOP_LIST","GET_FOOD_SHOP_CATEGORY_LIST","GET_ALL_MATCH_FOOD_CATEGORY","UPDATE_FOOD_SHOP_ACTIVE","UPDATE_FOOD_SHOP","UPLOAD_FOOD_SHOP_IMAGE","ADD_FOOD_ITEM_URL","GET_FOOD_ITEM_LIST","GET_FOOD_ITEM_CATEGORY_LIST","GET_FOOD_ITEM_DETAIL","UPDATE_FOOD_ITEM","UPLOAD_FOOD_ITEM_IMAGE","ManagerLogIn","sessionId","ManagerRegister","ManagerResetPassword","ManagerResetPasswordToken","FoodShopList","managerId","setManagerId","getManagerDetail","managetDetail","manager_id","getFoodShopList","list_result","AddFoodShop","shopCategory","setShopCategory","shopCategoryId","setShopCategoryId","imageFile","setImageFile","closeTime","setCloseTime","getShopCategory","category_list","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","updateAddressByCoord","handleSubmit","resizableTextArea","food_shop_category_id","close_time","axios_1","headers","accept","file","files","formdata","FormData","append","time","timeString","FoodShopDetail","itemDataList","setItemDataList","createdAt","setCreatedAt","updatedAt","setUpdatedAt","foodShopCategory","setFoodShopCategory","getFoodCategoryList","listResult","created_at","updated_at","handleFoodItemTableChange","_result","handleOnActiveChange","defaultChecked","columns","dataIndex","handleFoodItemDetail","dataSource","FoodItemDetail","AddFoodItem","itemCategoryList","setItemCategoryList","foodCategoryId","setFoodCategoryId","getItemCategoryList","resultList","AddFoodItemCategory","categoryList","setCategoryList","setText","getCategoryList","food_category_example_name","handleAdd","EditFoodShop","setDescription","getOldData","handleImageUpload","moment","EditFoodItem","getOldDate","SettingAccount","clientId","setClientId","clientSecret","setClientSecret","client_id","client_secret","EditProfile","setFirstName","setLastName","oldEmailAddress","setOldEmailAddress","newEmailAddress","setNewEmailAddress","oldPhone","setOldPhone","newPhone","setNewPhone","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","managerDetail","handleChangeAvatar","old_email_address","new_email_address","old_phone","new_phone","ManagerIndex","Sider","collapsible","mode","theme","CoffeeOutlined","BellOutlined","CalendarOutlined","SettingOutlined","SubMenu","ADD_PRODUCT","REMOVE_PRODUCT","ADD_PRODUCT_BY_ONE","DELETE_PRODUCT_BY_ONE","CLEAR_CART","shopReducer","updatedCart","updatedItemIndex","findIndex","updatedItem","splice","GlobalState","useReducer","cartState","dispatch","Provider","children","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.df9cb749.chunk.js","sourcesContent":["const IP_URL = \"http://144.34.175.242/api/customer_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/customer_food_shop_api/\";\r\nconst IP_URL_FOOD_ITEM = \"http://144.34.175.242/api/customer_food_item_api/\";\r\nconst IP_URL_DELIVER_DRIVER = \"http://144.34.175.242/api/deliver_driver_api/\";\r\nconst IP_URL_ORDER = \"http://144.34.175.242/api/customer_order_api/\";\r\n\r\n// const IP_URL = \"http://localhost:7000/customer_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/customer_food_shop_api/\";\r\n// const IP_URL_FOOD_ITEM = \"http://localhost:7000/customer_food_item_api/\";\r\n// const IP_URL_DELIVER_DRIVER = \"http://localhost:7000/deliver_driver_api/\";\r\n// const IP_URL_ORDER = \"http://localhost:7000/customer_order_api/\";\r\n\r\nconst CUSTOMER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    REGISTER_URL: IP_URL + \"customer_register/\",\r\n    LOGIN_URL: IP_URL + \"customer_login/\",\r\n    LOGOUT_URL: IP_URL + \"customer_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"customer_password_reset/\",\r\n    GET_CUSTOMER_DETAIL: IP_URL + \"customer_detail\",\r\n    UPDATE_CUSTOMER_PROFILE: IP_URL + \"customer_update_profile\",\r\n    CUSTOMER_UPLOAD_AVATAR: IP_URL + \"customer_upload_avatar\",\r\n\r\n    RANDOM_FOOD_SHOP_POP_UP: IP_URL_FOOD_SHOP + \"get_random_food_shops\",\r\n    GET_FAVOURITE_FOOD_SHOPS: IP_URL_FOOD_SHOP + \"get_favourite_food_shops\",\r\n    GET_FOOD_SHOP_DETAIL: IP_URL_FOOD_SHOP + \"get_food_shop_detail\",\r\n    GET_FOOD_CATEGORIES: IP_URL_FOOD_SHOP + \"get_food_category_by_food_shop_id\",\r\n    UPDATE_FAVOURITE_FOOD_SHOP: IP_URL_FOOD_SHOP + \"update_favourite_food_shop\",\r\n\r\n    GET_FOOD_ITEMS_BY_SHOP_ID: IP_URL_FOOD_ITEM + \"get_food_items_by_shop_id\",\r\n    GET_FOOD_ITEMS_BY_CATEGORY_ID: IP_URL_FOOD_ITEM + \"get_food_items_by_category_id\",\r\n    GET_FOOD_ITEM_DETAIL_BY_ID: IP_URL_FOOD_ITEM + \"get_food_item_by_id\",\r\n\r\n    GET_ALL_DRIVER_DETAIL: IP_URL_DELIVER_DRIVER + \"get_all_driver_detail\",\r\n\r\n    CREATE_ORDER: IP_URL_ORDER + \"create_order\",\r\n    ADD_ORDER_TO_DATABASE: IP_URL_ORDER + \"add_order_to_database\"\r\n};\r\n\r\nexport default CUSTOMER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/customer_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: CUSTOMER_SERVICE_PATH.DEFAULT_URL }} target=\"_blank\">\r\n                Charlie's Food Shop\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","const KEY = {\r\n    reCAPTCHA_site_key: '6LcaKtIZAAAAAK6RCXm1AoJfpgWNWo7wUzwzUZA-',\r\n    BingMap_key: 'AiJHkuJR5r6HBFPmJ7tu1mxwEGVWLymQ1CmIVRwXBTdpvx5ImKJMOVDr2_qRfgro'\r\n}\r\n\r\nexport default KEY;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('customerSessionId')) {\r\n            return props.history.push('/customer');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('customerSessionId', res.data.customerSessionId);\r\n                    localStorage.setItem('customerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/customer');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/customer/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/customer/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerLogIn;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Customer Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/customer/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/customer/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPassword;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Card } from 'antd';\r\nimport { StarOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Home = () => {\r\n\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getRandomFoodShops(localStorage.getItem('customerEmail'));\r\n            setFoodShopList(result);\r\n        } catch (e) {\r\n            return message.error('Sorry, could not get food shops!');\r\n        }\r\n    }, []);\r\n\r\n    const getRandomFoodShops = async (email_address) => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.RANDOM_FOOD_SHOP_POP_UP + \"?email_address=\" + email_address });\r\n        return results.data.data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/customer/food_shop/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={\r\n                                    <div>\r\n                                        <p>{item.working_address}</p>\r\n                                        <p>{item.food_shop_category_name}\r\n                                            {\r\n                                                item.on_favourite ?\r\n                                                    <span style={{ float: 'right' }}><StarOutlined /></span> :\r\n                                                    <></>\r\n                                            }\r\n                                        </p>\r\n\r\n                                    </div>\r\n                                } />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider, Rate, Radio } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\n\r\nconst FoodShop = (props) => {\r\n\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [foodShopCategoryName, setFoodShopCategoryName] = useState('');\r\n    const [foodShopDescription, setFoodShopDescription] = useState('');\r\n    const [foodShopRating, setFoodShopRating] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [active, setActive] = useState(false);\r\n    const [onFavourite, setOnFavourite] = useState(false);\r\n    const [openTime, setOpenTime] = useState('');\r\n    const [workingAddress, setWorkingAddress] = useState('');\r\n\r\n    const [foodCategoryList, setFoodCategoryList] = useState([]);\r\n    const [foodItemList, setFoodItemList] = useState([]);\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let food_shop_detail = await getFoodShopDetail(localStorage.getItem('customerEmail'), props.match.params.food_shop_id);\r\n            setFoodShopId(food_shop_detail.food_shop_id);\r\n            setFoodShopName(food_shop_detail.food_shop_name);\r\n            setFoodShopCategoryName(food_shop_detail.food_shop_category_name);\r\n            setFoodShopDescription(food_shop_detail.food_shop_description);\r\n            setFoodShopRating(food_shop_detail.food_shop_rating);\r\n            setImageUrl(food_shop_detail.image_url);\r\n            setActive(food_shop_detail.active);\r\n            setOnFavourite(food_shop_detail.on_favourite);\r\n            setOpenTime(food_shop_detail.open_time);\r\n            setWorkingAddress(food_shop_detail.working_address);\r\n\r\n            let food_category_list = await getFoodCategories(props.match.params.food_shop_id);\r\n            setFoodCategoryList(food_category_list);\r\n\r\n            let food_item_list = await getFoodItemByShopId(props.match.params.food_shop_id);\r\n            setFoodItemList(food_item_list);\r\n\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food shop detail!');\r\n        }\r\n    }, []);\r\n\r\n    const getFoodShopDetail = async (email_address, food_shop_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?email_address=\" + email_address + \"&&food_shop_id=\" + food_shop_id\r\n        });\r\n        return result.data.data;\r\n    }\r\n\r\n    const getFoodCategories = async (food_shop_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_CATEGORIES + \"?food_shop_id=\" + food_shop_id\r\n        });\r\n        return results.data.data;\r\n    }\r\n\r\n    const getFoodItemByShopId = async (food_shop_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEMS_BY_SHOP_ID + \"?food_shop_id=\" + food_shop_id\r\n        });\r\n        return results.data.data;\r\n    }\r\n\r\n    const getFoodItemByCategoryId = async (food_category_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEMS_BY_CATEGORY_ID + \"?food_category_id=\" + food_category_id\r\n        });\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleFoodItemListChange = async (food_category_id) => {\r\n        try {\r\n            let food_item_list = await getFoodItemByCategoryId(food_category_id);\r\n            setFoodItemList(food_item_list);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food list');\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/customer/');\r\n    }\r\n\r\n    const handleEditMyFavourite = async () => {\r\n        try {\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.UPDATE_FAVOURITE_FOOD_SHOP,\r\n                data: {\r\n                    email_address: localStorage.getItem('customerEmail'),\r\n                    food_shop_id: foodShopId,\r\n                    on_favourite: onFavourite\r\n                }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                setOnFavourite(pre => !pre);\r\n            } else {\r\n                return message.error('Error occured, please try again');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Error occured, please try again');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                <img alt=\"shop-image\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n            </div>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'left' }} type=\"primary\" onClick={handleGoBack}>Go Back</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'right' }} type=\"primary\" onClick={handleEditMyFavourite}>\r\n                        {\r\n                            onFavourite ?\r\n                                'Remove from My Favoruite' :\r\n                                'Add to My Favoruite'\r\n                        }\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Typography.Title level={2}>{foodShopName}</Typography.Title>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Type: {foodShopCategoryName}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Rating:\r\n                        {foodShopRating ?\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodShopRating}\r\n                            /> :\r\n                            '   Not Available'}\r\n\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>Address: {workingAddress}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Typography.Text>Description: {foodShopDescription}</Typography.Text>\r\n            <br /><br />\r\n            <Typography.Title level={5}>\r\n                Status:\r\n                {\r\n                    active ?\r\n                        <span style={{ color: 'green' }}>   Opening</span> :\r\n                        <span>\r\n                            <span style={{ color: 'red' }}>    Closed</span>\r\n                            (Will be open at {openTime})\r\n                        </span>\r\n                }\r\n            </Typography.Title>\r\n            <Divider />\r\n            <div>\r\n                <Typography.Text>Category: </Typography.Text>\r\n                <Radio.Group\r\n                    onChange={e => handleFoodItemListChange(e.target.value)}\r\n                >\r\n                    {\r\n                        foodCategoryList.map((item, index) => (\r\n                            <Radio.Button\r\n                                value={item.food_category_id}\r\n                                key={index}\r\n                            >\r\n                                {item.food_category_name}\r\n                            </Radio.Button>\r\n                        ))\r\n                    }\r\n                </Radio.Group>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                {\r\n                    foodItemList.map((item, index) => (\r\n                        <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                            <Link to={\"/customer/food_item/\" + item.food_item_id} >\r\n                                <Card\r\n                                    hoverable\r\n                                    cover={<img style={{ height: 200 }} alt=\"food_item\" src={item.image_url} />}\r\n                                    bordered={false}>\r\n                                    <Card.Meta title={item.food_name} description={\r\n                                        <div>\r\n                                            <p>{item.food_category_name}</p>\r\n                                            <p>$ {item.food_price}</p>\r\n                                            {\r\n                                                item.food_average_rating ?\r\n                                                    <Rate disabled defaultValue={item.food_average_rating} /> :\r\n                                                    <></>\r\n                                            }\r\n                                        </div>\r\n                                    } />\r\n                                </Card>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShop;\r\n","import React from \"react\";\r\n\r\nexport default React.createContext({\r\n    cart: [],\r\n    addProductToCart: product => { },\r\n    addProductToCartByOne: product => { },\r\n    deleteProductFromCartByOne: product => { },\r\n    removeProductFromCart: product => { },\r\n    clearCart: () => { }\r\n});\r\n\r\n/*\r\n\r\n\r\n*/","import React, { useState, useEffect, useContext } from 'react';\r\nimport { message, Row, Col, Typography, Button, Divider, Rate } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nimport ShopContext from '../../../context/ShopContext';\r\n\r\nconst FoodItem = (props) => {\r\n\r\n    const context = useContext(ShopContext);\r\n\r\n    const [foodItemId, setFoodItemId] = useState(0);\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [active, setActive] = useState(false);\r\n    const [foodAverageRating, setFoodAverageRating] = useState(null);\r\n    const [foodCategoryName, setFoodCategoryName] = useState('');\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const [quantity, setQuantity] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let food_item_detail = await getFoodItemDetail(props.match.params.food_item_id);\r\n            setFoodItemId(food_item_detail.food_item_id);\r\n            setFoodShopId(food_item_detail.food_shop_id);\r\n            setActive(food_item_detail.active);\r\n            setFoodAverageRating(food_item_detail.food_average_rating);\r\n            setFoodCategoryName(food_item_detail.food_category_name);\r\n            setFoodDescription(food_item_detail.food_description);\r\n            setFoodName(food_item_detail.food_name);\r\n            setFoodPrice(food_item_detail.food_price);\r\n            setImageUrl(food_item_detail.image_url);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food item detail!');\r\n        }\r\n\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL_BY_ID + \"?food_item_id=\" + food_item_id\r\n        });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/customer/food_shop/' + foodShopId);\r\n    }\r\n\r\n    const handleAddItemToCart = () => {\r\n        if (quantity <= 0) {\r\n            return message.error('Sorry, quantity can not be zero!');\r\n        }\r\n\r\n        context.addProductToCart({\r\n            food_item_id: foodItemId,\r\n            food_name: foodName,\r\n            food_price: foodPrice,\r\n            quantity: quantity\r\n        });\r\n\r\n        return props.history.push('/customer/food_shop/' + foodShopId);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button style={{ float: 'left' }} type=\"primary\" onClick={handleGoBack}>Go Back</Button>\r\n            <br />\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <img\r\n                        alt=\"food_item\"\r\n                        src={imageUrl}\r\n                        style={{ width: '80%' }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={2}>{foodName}</Typography.Title>\r\n                    <Typography.Text>Description: {foodDescription}</Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>Price: ${foodPrice}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>Category: {foodCategoryName}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Rating:\r\n                        {foodAverageRating ?\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodAverageRating}\r\n                            /> :\r\n                            '   Not Available'}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title\r\n                        level={5}\r\n                        style={{ marginTop: '2%', marginRight: '2%', float: 'left' }}>\r\n                        Quantity:\r\n                    </Typography.Title>\r\n                    <Button\r\n                        shape=\"circle\"\r\n                        size=\"small\"\r\n                        icon={<MinusOutlined />}\r\n                        style={{ margin: '2%' }}\r\n                        disabled={active ? false : true}\r\n                        onClick={() => {\r\n                            if (quantity >= 1) {\r\n                                setQuantity(pre => pre - 1);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Typography.Text>{quantity}</Typography.Text>\r\n                    <Button\r\n                        shape=\"circle\"\r\n                        size=\"small\"\r\n                        icon={<PlusOutlined />}\r\n                        style={{ margin: '2%' }}\r\n                        disabled={active ? false : true}\r\n                        onClick={() => {\r\n                            setQuantity(pre => pre + 1);\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{ width: '80%', float: 'right' }}\r\n                        disabled={active ? false : true}\r\n                        onClick={handleAddItemToCart}\r\n                    >\r\n                        Add to Cart\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItem;\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport { message } from 'antd';\r\nimport ShopContext from '../../../context/ShopContext';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Paypal = (props) => {\r\n\r\n    const context = useContext(ShopContext);\r\n    const paypal = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        window.paypal.Buttons({\r\n            createOrder: () => {\r\n                return axios({\r\n                    method: 'post',\r\n                    url: CUSTOMER_SERVICE_PATH.CREATE_ORDER,\r\n                    data: {\r\n                        email_address: localStorage.getItem('customerEmail'),\r\n                        item_list: context.cart,\r\n                        address: props.address,\r\n                        driver_id: props.driverId,\r\n                        lat: props.lat,\r\n                        lon: props.lon,\r\n                        note: props.note\r\n                    }\r\n                }).then((res) => {\r\n                    if (res.data.success) {\r\n                        return res.data.id\r\n                    } else {\r\n                        return message.error(res.data.message);\r\n                    }\r\n                }).catch(e => {\r\n                    return message.error(e.message);\r\n                });\r\n            },\r\n            onApprove: function (data, actions) {\r\n                return actions.order.capture().then(() => {\r\n\r\n                    axios({\r\n                        method: 'post',\r\n                        url: CUSTOMER_SERVICE_PATH.ADD_ORDER_TO_DATABASE,\r\n                        data: {\r\n                            email_address: localStorage.getItem('customerEmail'),\r\n                            item_list: context.cart,\r\n                            address: props.address,\r\n                            driver_id: props.driverId,\r\n                            lat: props.lat,\r\n                            lon: props.lon,\r\n                            note: props.note\r\n                        }\r\n                    }).then((res) => {\r\n                        if (res.data.success) {\r\n                            context.clearCart();\r\n                            return message.success('Purchase Complete');\r\n                        } else {\r\n                            return message.error(res.data.message);\r\n                        }\r\n                    }).catch(e => {\r\n                        return message.error(e.message);\r\n                    });\r\n\r\n                })\r\n            }\r\n        }).render(paypal.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { message, Input, Row, Col, Divider, Button, Select, Typography, AutoComplete, Card, Avatar } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\nimport Paypal from './Paypal';\r\n\r\nimport ShopContext from '../../../context/ShopContext';\r\n\r\nconst Cart = () => {\r\n\r\n    const context = useContext(ShopContext);\r\n\r\n    const [driverList, setDriverList] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n    const [address, setAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n\r\n    const [selectDriver, setSelectDriver] = useState(-1);\r\n    const [note, setNote] = useState('');\r\n\r\n    const [foodTotal, setFoodTotal] = useState(0);\r\n    const [driverTotal, setDriverTotal] = useState(0);\r\n\r\n    const [checkout, setCheckout] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        let data = await getDriverList();\r\n        setDriverList(data);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setFoodTotal(getFoodTotal());\r\n    }, [context.cart]);\r\n\r\n    const getDriverList = async () => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_ALL_DRIVER_DETAIL });\r\n        return results.data.data;\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getFoodTotal = () => {\r\n        let total = 0;\r\n        for (let i = 0; i < context.cart.length; i++) {\r\n            total += context.cart[i].food_price * context.cart[i].quantity;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleItemDecrement = (product) => {\r\n        context.deleteProductFromCartByOne(product);\r\n    }\r\n\r\n    const handleItemIncrement = (product) => {\r\n        context.addProductToCartByOne(product);\r\n    }\r\n\r\n    const handleRemoveItem = (product) => {\r\n        context.removeProductFromCart(product);\r\n    }\r\n\r\n    const handleSwitchDriver = (index) => {\r\n        setSelectDriver(index);\r\n        setDriverTotal(driverList[index].cost);\r\n    }\r\n\r\n    const handlePurchase = () => {\r\n        if (!address)\r\n            return message.error(\"Please provide the address for receiving order\");\r\n\r\n        if (selectDriver === -1)\r\n            return message.error(\"Please select the delivering driver for order\");\r\n\r\n        setCheckout(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                context.cart.length === 0 ?\r\n                    <Typography.Title level={3}>Nothing in the cart</Typography.Title> :\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Quantity</Typography.Title>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Name</Typography.Title>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Price</Typography.Title>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Sub Total</Typography.Title>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Typography.Title level={4}>Action</Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        {\r\n                            context.cart.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <Row>\r\n                                        <Col span={5}>\r\n                                            <Button\r\n                                                shape=\"circle\"\r\n                                                size=\"small\"\r\n                                                icon={<MinusOutlined />}\r\n                                                style={{ margin: '2%' }}\r\n                                                onClick={() => handleItemDecrement(item)}\r\n                                            />\r\n                                            <Typography.Text>{item.quantity}</Typography.Text>\r\n                                            <Button\r\n                                                shape=\"circle\"\r\n                                                size=\"small\"\r\n                                                icon={<PlusOutlined />}\r\n                                                style={{ margin: '2%' }}\r\n                                                onClick={() => handleItemIncrement(item)}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={5}>\r\n                                            <Typography.Text>{item.food_name}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={5}>\r\n                                            <Typography.Text>${item.food_price}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={5}>\r\n                                            <Typography.Text>${item.food_price * item.quantity}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={4}>\r\n                                            <Button\r\n                                                danger\r\n                                                onClick={() => handleRemoveItem(item)}\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <Divider />\r\n                        <Typography.Title level={5} >\r\n                            Please Provide Your Address\r\n                        </Typography.Title>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                {\r\n                                    lat && lon &&\r\n                                    <img\r\n                                        style={{ width: '90%' }}\r\n                                        src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                        alt=\"map\"\r\n                                    />\r\n                                }\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <AutoComplete\r\n                                    size=\"large\"\r\n                                    style={{ width: '80%' }}\r\n                                    id=\"addressText\"\r\n                                    options={possibleAddressList}\r\n                                    onSearch={getPossibleAddressList}\r\n                                    onSelect={updateCoord}\r\n                                />\r\n                                <br /><br />\r\n                                <Typography.Title level={5} style={{ marginLeft: '20px' }}>Delivery Address: {address ? address : ''}</Typography.Title>\r\n                                <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                                <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Typography.Title level={5} >\r\n                            Please Select Delivery Driver\r\n                        </Typography.Title>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                {\r\n                                    selectDriver === -1 ?\r\n                                        <></> :\r\n                                        <Card\r\n                                            style={{ width: '80%' }}\r\n                                        >\r\n                                            <Card.Meta\r\n                                                avatar={<Avatar src={driverList[selectDriver].avatar_url} />}\r\n                                                title={driverList[selectDriver].first_name + \" \" + driverList[selectDriver].last_name}\r\n                                                description={\r\n                                                    <div>\r\n                                                        <p>Cost: ${driverList[selectDriver].cost}</p>\r\n                                                        <p>Speed: {driverList[selectDriver].speed} km/h</p>\r\n                                                    </div>\r\n                                                }\r\n                                            />\r\n                                        </Card>\r\n                                }\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    style={{ width: '80%' }}\r\n                                    placeholder=\"Please select the delivery driver\"\r\n                                    onChange={handleSwitchDriver}\r\n                                >\r\n                                    {\r\n                                        driverList.map((item, index) => (\r\n                                            <Select.Option key={index} value={index}>\r\n                                                {item.first_name + \" \" + item.last_name}\r\n                                            </Select.Option>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Typography.Title level={5} >\r\n                            Please add note for your order\r\n                        </Typography.Title>\r\n                        <br />\r\n                        <Input.TextArea\r\n                            rows={5}\r\n                            value={note}\r\n                            onChange={e => setNote(e.target.value)}\r\n                            placeholder=\"eg. please add ketchup\"\r\n                        />\r\n                        <Divider />\r\n                        <div>\r\n                            {\r\n                                checkout ?\r\n                                    <Paypal\r\n                                        address={address}\r\n                                        lat={lat}\r\n                                        lon={lon}\r\n                                        note={note}\r\n                                        driverId={driverList[selectDriver].deliver_driver_id}\r\n                                    /> :\r\n                                    <></>\r\n                            }\r\n                        </div>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5}\r\n                                    style={{ float: 'left' }}\r\n                                >\r\n                                    Total: ${\r\n                                        Math.floor((foodTotal + driverTotal) * 100) / 100\r\n                                    }\r\n                                </Typography.Title>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Button\r\n                                    onClick={handlePurchase}\r\n                                    type=\"primary\"\r\n                                    style={{ float: 'right' }}\r\n                                >\r\n                                    Purchase\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Layout, message, Spin, Input, Avatar, Row, Col, Divider, Menu, Dropdown, Badge } from 'antd';\r\nimport { ShoppingCartOutlined, UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport '../../static/css/customer_css/header.css';\r\nimport '../../static/css/customer_css/content.css';\r\n\r\nimport Footer from './components/Footer';\r\nimport Home from './components/Home';\r\nimport FoodShop from './components/FoodShop';\r\nimport FoodItem from './components/FoodItem';\r\nimport Cart from './components/Cart';\r\n\r\nimport ShopContext from '../../context/ShopContext';\r\n\r\nconst CustomerIndex = (props) => {\r\n\r\n    const context = useContext(ShopContext);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            if (!(localStorage.getItem('customerSessionId') &&\r\n                localStorage.getItem('customerEmail'))) {\r\n                return props.history.push('/customer/login');\r\n            }\r\n\r\n            let customerDetail = await getCustomerDetail(localStorage.getItem('customerEmail'));\r\n            setAvatarUrl(customerDetail.avatar_url);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + customerDetail.first_name + \" \" + customerDetail.last_name);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getCustomerDetail = async (email_address) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_CUSTOMER_DETAIL + \"?email_address=\" + email_address });\r\n        return result.data.data;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('customerSessionId');\r\n                localStorage.removeItem('customerEmail');\r\n                message.success(res.data.message);\r\n\r\n                context.clearCart();\r\n                return props.history.push('/customer/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleSearch = (text) => {\r\n        console.log(text);\r\n    }\r\n\r\n    const handleCartOnclick = () => {\r\n        return props.history.push('/customer/cart');\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={handleMenuClick}>\r\n            <Menu.Item key=\"1\" style={{ borderBottom: '1px solid black' }}>Current Order</Menu.Item>\r\n            <Menu.Item key=\"2\">Order History</Menu.Item>\r\n            <Menu.Item key=\"3\">Profile</Menu.Item>\r\n            <Menu.Item key=\"4\">My Favourite</Menu.Item>\r\n            <Menu.Item key=\"5\">Message</Menu.Item>\r\n            <Menu.Item key=\"6\">Help</Menu.Item>\r\n            <Menu.Item key=\"7\">Log Out</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <div className=\"header\">\r\n                    <Row type=\"flex\" justify=\"center\">\r\n                        <Col xs={24} sm={24} md={8} lg={12} xl={12}>\r\n                            <Link to=\"/customer/\">\r\n                                <span className=\"header-logo\">{helloTitle}</span>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={16} lg={10} xl={8}>\r\n                            <Input.Search\r\n                                allowClear\r\n                                enterButton\r\n                                style={{ width: '60%', margin: '1% auto' }}\r\n                                placeholder=\"Search what you want\"\r\n                                onSearch={handleSearch}\r\n                            />\r\n                            <span\r\n                                onClick={handleCartOnclick}\r\n                                style={{ cursor: 'pointer', margin: '3%' }}\r\n                            >\r\n                                <Badge count={context.cart.length}>\r\n                                    <Avatar\r\n                                        size=\"large\"\r\n                                        icon={<ShoppingCartOutlined />}\r\n                                    />\r\n                                </Badge>\r\n                            </span>\r\n                            <span\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                                <Dropdown\r\n                                    overlay={menu}\r\n                                    placement=\"bottomCenter\"\r\n                                >\r\n                                    {\r\n                                        avatarUrl ?\r\n                                            <Avatar size=\"large\" src={avatarUrl} /> :\r\n                                            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n                                    }\r\n                                </Dropdown>\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Layout className=\"comm-main\">\r\n                    <Layout.Content style={{ margin: '10px 5%' }}>\r\n                        <div style={{ padding: 24, minHeight: 360 }}>\r\n                            <Route path=\"/customer/\" exact component={Home} />\r\n                            <Route path=\"/customer/food_shop/:food_shop_id\" exact component={FoodShop} />\r\n                            <Route path=\"/customer/food_item/:food_item_id\" exact component={FoodItem} />\r\n                            <Route path=\"/customer/cart\" exact component={Cart} />\r\n                        </div>\r\n                    </Layout.Content>\r\n                </Layout>\r\n                <Divider />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerIndex;\r\n\r\n/*\r\n\r\n</span>\r\n\r\n\r\n\r\n*/\r\n","const IP_URL = \"http://144.34.175.242/api/manager_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/manager_food_shop_api/\";\r\nconst IP_URL_FOOD_ITEM = \"http://144.34.175.242/api/manager_food_item_api/\";\r\n\r\n// const IP_URL = \"http://localhost:7000/manager_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/manager_food_shop_api/\";\r\n// const IP_URL_FOOD_ITEM = \"http://localhost:7000/manager_food_item_api/\";\r\n\r\nconst MANAGER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    REGISTER_URL: IP_URL + \"manager_register/\",\r\n    LOGIN_URL: IP_URL + \"manager_login/\",\r\n    LOGOUT_URL: IP_URL + \"manager_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"manager_password_reset/\",\r\n    GET_MANAGER_DETAIL: IP_URL + \"manager_detail\",\r\n    UPDATE_MANAGER_ACCOUNT: IP_URL + \"manager_update_account\",\r\n    UPDATE_MANAGER_PROFILE: IP_URL + \"manager_update_profile\",\r\n    MANAGER_UPLOAD_AVATAR: IP_URL + \"manager_upload_avatar\",\r\n\r\n    ADD_FOOD_SHOP_URL: IP_URL_FOOD_SHOP + \"add_food_shop\",\r\n    ADD_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"add_food_category\",\r\n    GET_FOOD_SHOP_LIST: IP_URL_FOOD_SHOP + \"get_food_shops_by_manager\",\r\n    GET_FOOD_SHOP_DETAIL: IP_URL_FOOD_SHOP + \"get_food_shops_by_food_shop\",\r\n    GET_FOOD_SHOP_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_all_food_shop_category\",\r\n    GET_ALL_MATCH_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"get_match_food_category\",\r\n    UPDATE_FOOD_SHOP_ACTIVE: IP_URL_FOOD_SHOP + \"update_food_shop_active\",\r\n    UPDATE_FOOD_SHOP: IP_URL_FOOD_SHOP + \"update_food_shop\",\r\n    UPLOAD_FOOD_SHOP_IMAGE: IP_URL_FOOD_SHOP + \"upload_food_shop_image\",\r\n\r\n    ADD_FOOD_ITEM_URL: IP_URL_FOOD_ITEM + \"add_food_item\",\r\n    GET_FOOD_ITEM_LIST: IP_URL_FOOD_ITEM + \"get_all_food_item_by_category\",\r\n    GET_FOOD_ITEM_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_food_category_by_food_shop\",\r\n    GET_FOOD_ITEM_DETAIL: IP_URL_FOOD_ITEM + \"get_food_item_by_food_item_id\",\r\n    UPDATE_FOOD_ITEM: IP_URL_FOOD_ITEM + \"update_food_item\",\r\n    UPLOAD_FOOD_ITEM_IMAGE: IP_URL_FOOD_ITEM + \"upload_food_item_image\"\r\n}\r\n\r\nexport default MANAGER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/manager_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: MANAGER_SERVICE_PATH.DEFAULT_URL }} target=\"_blank\">\r\n                Charlie's Food Shop for Managers\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('sessionId')) {\r\n            return props.history.push('/manager');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('sessionId', res.data.sessionId);\r\n                    localStorage.setItem('managerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/manager');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop for Managers\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/manager/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/manager/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerLogIn;","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Manager Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/manager/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/manager/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPassword;","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopList = (props) => {\r\n\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            let first_name = managetDetail.data.data.first_name;\r\n            let last_name = managetDetail.data.data.last_name\r\n            let manager_id = managetDetail.data.data.manager_id;\r\n            setManagerId(manager_id);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + first_name + \" \" + last_name);\r\n\r\n            let list_result = await getFoodShopList(manager_id);\r\n            setFoodShopList(list_result.data.data);\r\n\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    const handleAddFoodShop = () => {\r\n        if (managerId) {\r\n            return props.history.push('/manager/add_food_shop/' + managerId);\r\n        } else {\r\n            return message.error('Manager ID not exist.');\r\n        }\r\n    }\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result;\r\n    }\r\n\r\n    const getFoodShopList = async (manager_id) => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_LIST + \"?manager_id=\" + manager_id });\r\n        return results;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        {helloTitle}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'right' }} type=\"primary\" onClick={handleAddFoodShop}>ADD NEW FOOD SHOP</Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            {\r\n\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/manager/food_shop_detail/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={item.food_shop_description} />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst AddFoodShop = (props) => {\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const foodShopName = useRef();\r\n    const description = useRef();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            getLocation();\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            try {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    setLat(position.coords.latitude);\r\n                    setLon(position.coords.longitude);\r\n                    updateAddressByCoord(position.coords.latitude, position.coords.longitude);\r\n                }, e => {\r\n                    return message.error(e.message);\r\n                });\r\n            } catch (e) {\r\n                return message.error('Sorry, something wrong happened when getting location.');\r\n            }\r\n        } else {\r\n            return message.error('Sorry, your location can not be get.');\r\n        }\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateAddressByCoord = async (lat, lon) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: `http://dev.virtualearth.net/REST/v1/Locations/${lat},${lon}?key=${KEY.BingMap_key}` });\r\n            let _results = results.data.resourceSets[0].resources;\r\n            if (_results.length === 1) {\r\n                setWorkingAddress(_results[0].name);\r\n            } else {\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodShopName.current.state.value &&\r\n                description.current.resizableTextArea.props.value &&\r\n                shopCategoryId &&\r\n                imageFile &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime) {\r\n\r\n                let data = {\r\n                    manager_id: props.match.params.manager_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName.current.state.value,\r\n                    food_shop_description: description.current.resizableTextArea.props.value,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_SHOP_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + axios_1.data.food_shop_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Shop Successful!');\r\n                    return props.history.push('/manager/');\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Please Add New Food Shop Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            ref={foodShopName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            defaultValue={1}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        ref={description}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodShop;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Switch, Radio, Table, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopDetail = (props) => {\r\n\r\n    const [foodCategoryList, setFoodCategoryList] = useState([]);\r\n    const [itemDataList, setItemDataList] = useState([]);\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [closeTime, setCloseTime] = useState('');\r\n    const [openTime, setOpenTime] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodShopCategory, setFoodShopCategory] = useState('');\r\n    const [foodShopDescription, setFoodShopDescription] = useState('');\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [foodShopRating, setFoodShopRating] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [workingAddress, setWorkingAddress] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodShopDetail(props.match.params.food_shop_id);\r\n            let listResult = await getFoodCategoryList(props.match.params.food_shop_id)\r\n\r\n            setImageUrl(result.image_url);\r\n            setActive(result.active);\r\n            setCloseTime(result.close_time);\r\n            setOpenTime(result.open_time);\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodShopCategory(result.food_shop_category_name);\r\n            setFoodShopDescription(result.food_shop_description);\r\n            setFoodShopName(result.food_shop_name);\r\n            setFoodShopRating(result.food_shop_rating);\r\n            setWorkingAddress(result.working_address);\r\n            setFoodCategoryList(listResult);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodShopDetail = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getFoodCategoryList = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleFoodItemTableChange = async (food_category_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_LIST + \"?food_category_id=\" + food_category_id });\r\n        let _result = result.data.data;\r\n\r\n        let data = [];\r\n        for (let i = 0; i < _result.length; i++) {\r\n            data.push({\r\n                key: i,\r\n                food_name: _result[i].food_name,\r\n                food_description: _result[i].food_description,\r\n                food_item_id: _result[i].food_item_id,\r\n                image_url: _result[i].image_url\r\n            });\r\n        }\r\n        return setItemDataList(data);\r\n    }\r\n\r\n    const handleOnActiveChange = async (checked) => {\r\n        try {\r\n            await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP_ACTIVE,\r\n                data: {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    active: checked\r\n                }\r\n            });\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to update active status');\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    const handleAddItemCategory = () => {\r\n        return props.history.push('/manager/add_food_item_category/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAddFoodItem = () => {\r\n        return props.history.push('/manager/add_food_item/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleFoodItemDetail = (food_item_id) => {\r\n        return props.history.push('/manager/food_item_detail/' + food_item_id);\r\n    }\r\n\r\n    const handleEditFoodShop = () => {\r\n        return props.history.push('/manager/edit_food_shop/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                <img alt=\"shop-image\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n            </div>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={3} >{foodShopName}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={4} >{workingAddress}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider />\r\n            <Typography.Text>\r\n                Description: {foodShopDescription}\r\n            </Typography.Text>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Open At: {openTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Close At: {closeTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        On Active:\r\n                        <Switch key={foodShopName} style={{ marginLeft: '5%' }} defaultChecked={active} onChange={handleOnActiveChange} />\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Created At: {createdAt}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Updated At: {updatedAt ? updatedAt : 'No Updation Record'}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Rating: {foodShopRating ? foodShopRating : 'Not Available'}</Typography.Title>\r\n                    <Rate\r\n                        disabled\r\n                        defaultValue={foodShopRating ? foodShopRating : 0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} >Shop Category: {foodShopCategory}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodShop}>Edit Food Shop Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\" onClick={handleAddItemCategory}>Add Item Category</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleAddFoodItem}>Add New Food Item</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <div>\r\n                <Typography.Text>Food Item Category: </Typography.Text>\r\n                <Radio.Group\r\n                    onChange={e => handleFoodItemTableChange(e.target.value)}\r\n                >\r\n                    {\r\n                        foodCategoryList.map((item, index) => (\r\n                            <Radio.Button\r\n                                value={item.food_category_id}\r\n                                key={index}\r\n                            >\r\n                                {item.food_category_name}\r\n                            </Radio.Button>\r\n                        ))\r\n                    }\r\n                </Radio.Group>\r\n                <br />\r\n                <Table\r\n                    bordered\r\n                    columns={[\r\n                        {\r\n                            title: 'Food Name',\r\n                            dataIndex: 'food_name'\r\n                        },\r\n                        {\r\n                            title: 'Food Description',\r\n                            dataIndex: 'food_description'\r\n                        },\r\n                        {\r\n                            title: 'Food Image',\r\n                            dataIndex: 'image_url',\r\n                            render: image_url => <img alt=\"food_img\" src={image_url} style={{ width: '100px' }} />\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            dataIndex: 'food_item_id',\r\n                            render: food_item_id => <Button type=\"primary\" onClick={() => handleFoodItemDetail(food_item_id)}>Detail</Button>\r\n                        }\r\n                    ]}\r\n                    dataSource={itemDataList}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodItemDetail = (props) => {\r\n\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodAverageRating, setFoodAverageRating] = useState(0);\r\n    const [foodCategoryName, setFoodCategoryName] = useState('');\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodItemDetail(props.match.params.food_item_id);\r\n\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodAverageRating(result.food_average_rating);\r\n            setFoodCategoryName(result.food_category_name);\r\n            setFoodDescription(result.food_description);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodShopId(result.food_shop_id);\r\n            setImageUrl(result.image_url);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + foodShopId);\r\n    }\r\n\r\n    const handleEditFoodItem = () => {\r\n        return props.history.push('/manager/edit_food_item/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>{foodName}</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <img\r\n                        alt=\"food_image\"\r\n                        src={imageUrl}\r\n                        style={{ width: '80%' }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Text>\r\n                        Description: {foodDescription}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Food Category: {foodCategoryName}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Created At: {createdAt}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Last Updated At: {updatedAt ? updatedAt : 'Not Available'}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        Price: ${foodPrice}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div\r\n                        style={{ float: 'right' }}\r\n                    >\r\n                        <Typography.Title level={5}>\r\n                            Rating: {foodAverageRating ? foodAverageRating : 'Not Available'}\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodAverageRating ? foodAverageRating : 0}\r\n                            />\r\n                        </Typography.Title>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\">See Comments</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodItem}>Edit Food Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItemDetail;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        let resultList = await getItemCategoryList(props.match.params.food_shop_id);\r\n        setItemCategoryList(resultList);\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageFile\r\n            ) {\r\n                let data = {\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_ITEM_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + axios_1.data.food_item_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Item Successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Add New Food Item</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Add New Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItem;\r\n","import React, { useState } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItemCategory = (props) => {\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const getCategoryList = async (text) => {\r\n        try {\r\n            if (text) {\r\n                let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_ALL_MATCH_FOOD_CATEGORY + \"?content=\" + text });\r\n                let _results = results.data.data;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].food_category_example_name, key: i });\r\n                }\r\n                setCategoryList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAdd = async () => {\r\n        console.log(text);\r\n        try {\r\n            if (text) {\r\n                let result = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.ADD_FOOD_CATEGORY,\r\n                    data: {\r\n                        food_shop_id: props.match.params.food_shop_id,\r\n                        food_category_name: text\r\n                    }\r\n                });\r\n\r\n                if (result.data.success) {\r\n                    message.success('Add food category successful!');\r\n                    return props.history.push(\"/manager/food_shop_detail/\" + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Fail to add item category, please try again');\r\n                }\r\n            } else {\r\n                return message.error('Please complete the information');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Fail to add item category, please try again');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>Add New Food Category</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <AutoComplete\r\n                        style={{ width: '80%' }}\r\n                        id=\"categoryText\"\r\n                        options={categoryList}\r\n                        onSearch={getCategoryList}\r\n                        onChange={(text) => setText(text)}\r\n                        onSelect={(text) => setText(text)}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button\r\n                        style={{ width: '50%' }}\r\n                        type=\"primary\"\r\n                        onClick={handleAdd}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItemCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst EditFoodShop = (props) => {\r\n\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldData(props.match.params.food_shop_id);\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            setShopCategoryId(result.food_shop_category_id);\r\n            setImageUrl(result.image_url);\r\n            setOpenTime(result.open_time);\r\n            setCloseTime(result.close_time);\r\n            setWorkingAddress(result.working_address);\r\n            setLat(result.lat);\r\n            setLon(result.lon);\r\n            setFoodShopName(result.food_shop_name);\r\n            setDescription(result.food_shop_description);\r\n\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getOldData = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + props.match.params.food_shop_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                shopCategoryId &&\r\n                foodShopName &&\r\n                description &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName,\r\n                    food_shop_description: description,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food shop successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Edit Food Shop</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            value={foodShopName}\r\n                            onChange={e => setFoodShopName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            value={shopCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img alt=\"img\" src={imageUrl} style={{ width: '60%' }} />\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            value={moment(openTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            value={moment(closeTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodShop;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldDate(props.match.params.food_item_id);\r\n\r\n            setFoodCategoryId(result.food_category_id);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodDescription(result.food_description);\r\n            setImageUrl(result.image_url);\r\n\r\n            let listResult = await getItemCategoryList(result.food_shop_id);\r\n            setItemCategoryList(listResult);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const getOldDate = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + props.match.params.food_item_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_item_id: props.match.params.food_item_id,\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_ITEM, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food item successful!');\r\n                    return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Edit Food Item Profile</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            value={foodName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            value={foodPrice}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            value={foodCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    value={foodDescription}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img src={imageUrl} alt=\"img\" style={{ width: '60%' }} />\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Edit Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Input, Button, Typography, Form, Divider, message } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst SettingAccount = () => {\r\n\r\n    const [clientId, setClientId] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(null);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            setClientId(managetDetail.client_id);\r\n            setClientSecret(managetDetail.client_secret);\r\n            setManagerId(managetDetail.manager_id);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            if (\r\n                clientId &&\r\n                clientSecret &&\r\n                managerId\r\n            ) {\r\n\r\n                let data = {\r\n                    client_id: clientId,\r\n                    client_secret: clientSecret,\r\n                    manager_id: managerId\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_ACCOUNT, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update account successful!');\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Paypal Detail Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client ID\r\n                </Typography.Title>\r\n                <Input\r\n                    size=\"large\"\r\n                    style={{ width: '80%' }}\r\n                    id=\"clientId\"\r\n                    value={clientId}\r\n                    onChange={e => setClientId(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client Secret\r\n                </Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"clientSecret\"\r\n                    rows={5}\r\n                    value={clientSecret}\r\n                    onChange={e => setClientSecret(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingAccount;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditProfile = () => {\r\n\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n\r\n    const [oldEmailAddress, setOldEmailAddress] = useState(null);\r\n    const [newEmailAddress, setNewEmailAddress] = useState(null);\r\n\r\n    const [oldPhone, setOldPhone] = useState(null);\r\n    const [newPhone, setNewPhone] = useState(null);\r\n\r\n    const [newPassword, setNewPassword] = useState(null);\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(null);\r\n\r\n    const [managerId, setManagerId] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managerDetail = await getManagerDetail();\r\n\r\n            setFirstName(managerDetail.first_name);\r\n            setLastName(managerDetail.last_name);\r\n\r\n            setOldEmailAddress(managerDetail.email_address);\r\n            setNewEmailAddress(managerDetail.email_address);\r\n\r\n            setOldPhone(managerDetail.phone);\r\n            setNewPhone(managerDetail.phone);\r\n\r\n            setManagerId(managerDetail.manager_id);\r\n            setAvatarUrl(managerDetail.avatar_url);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleChangeAvatar = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.MANAGER_UPLOAD_AVATAR + \"?id=\" + managerId,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Avatar Successful');\r\n                return setAvatarUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Avatar fail, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                firstName &&\r\n                lastName &&\r\n                oldEmailAddress &&\r\n                newEmailAddress &&\r\n                oldPhone &&\r\n                newPhone &&\r\n                newPassword &&\r\n                confirmNewPassword &&\r\n                managerId\r\n            ) {\r\n                if (newPassword !== confirmNewPassword) {\r\n                    return message.error(\"Confirm password is not same as the new password you set. Please try again!\");\r\n                } else {\r\n\r\n                    let data = {\r\n                        first_name: firstName,\r\n                        last_name: lastName,\r\n                        old_email_address: oldEmailAddress,\r\n                        new_email_address: newEmailAddress,\r\n                        old_phone: oldPhone,\r\n                        new_phone: newPhone,\r\n                        password: newPassword,\r\n                        manager_id: managerId,\r\n                        avatar_url: avatarUrl\r\n                    }\r\n\r\n                    let result = await axios({\r\n                        method: 'post',\r\n                        url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_PROFILE,\r\n                        data: data\r\n                    });\r\n                    if (result.data.success) {\r\n                        return message.success('Update profile successful!');\r\n                    } else {\r\n                        return message.error('Update fail, pleaes try again!');\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.response.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Profile Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5}>Set Avatar</Typography.Title>\r\n                <div style={{ textAlign: 'center' }}>\r\n\r\n                    {\r\n                        avatarUrl ?\r\n                            <Avatar size={128} src={avatarUrl} /> :\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                    }\r\n                    <br /><br />\r\n                    <Input\r\n                        required\r\n                        size=\"large\"\r\n                        style={{ width: '90%' }}\r\n                        type=\"file\"\r\n                        accept=\"image/jpeg,image/jpg,image/png\"\r\n                        id=\"imageFile\"\r\n                        onChange={handleChangeAvatar}\r\n                    />\r\n\r\n                </div>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>First Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                            value={firstName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Last Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                            value={lastName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Email Address</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            placeholder=\"abc@abc.com\"\r\n                            id=\"emailAddress\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewEmailAddress(e.target.value)}\r\n                            value={newEmailAddress}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Phone Number</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"tel\"\r\n                            pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                            placeholder=\"(111) 111-1111\"\r\n                            id=\"phone\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewPhone(e.target.value)}\r\n                            value={newPhone}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            New Password\r\n                        </Typography.Title>\r\n                        <Input.Password\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"newPassword\"\r\n                            placeholder=\"New Password\"\r\n                            value={newPassword}\r\n                            onChange={e => setNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Confirm Your Password\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"password\"\r\n                            id=\"confirmNewPassword\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            value={confirmNewPassword}\r\n                            onChange={e => setConfirmNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, message, Spin } from 'antd';\r\nimport {\r\n    UserOutlined, CoffeeOutlined,\r\n    MailOutlined, BellOutlined, CalendarOutlined, SettingOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport Footer from './components/Footer';\r\nimport FoodShopList from './components/FoodShopList';\r\nimport AddFoodShop from './components/AddFoodShop';\r\nimport FoodShopDetail from './components/FoodShopDetail';\r\nimport FoodItemDetail from './components/FoodItemDetail';\r\nimport AddFoodItem from './components/AddFoodItem';\r\nimport AddFoodItemCategory from './components/AddFoodItemCategory';\r\nimport EditFoodShop from './components/EditFoodShop';\r\nimport EditFoodItem from './components/EditFoodItem';\r\nimport SettingAccount from './components/SettingAccount';\r\nimport EditProfile from './components/EditProfile';\r\n\r\nconst ManagerIndex = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!(localStorage.getItem('sessionId') &&\r\n            localStorage.getItem('managerEmail'))) {\r\n            props.history.push('/manager/login');\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('sessionId');\r\n                localStorage.removeItem('managerEmail');\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '1':\r\n                props.history.push('/manager/');\r\n                break;\r\n            case '5':\r\n                props.history.push('/manager/setting_account');\r\n                break;\r\n            case '6':\r\n                props.history.push('/manager/edit_profile');\r\n                break;\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <Layout.Sider collapsible>\r\n                        <Menu mode=\"inline\" theme=\"dark\" onClick={handleMenuClick}>\r\n                            <Menu.Item key=\"1\" icon={<CoffeeOutlined />}>Food Shops</Menu.Item>\r\n                            <Menu.Item key=\"2\" icon={<MailOutlined />}>Message</Menu.Item>\r\n                            <Menu.Item key=\"3\" icon={<BellOutlined />}>Current Order</Menu.Item>\r\n                            <Menu.Item key=\"4\" icon={<CalendarOutlined />}>Order History</Menu.Item>\r\n                            <Menu.Item key=\"5\" icon={<SettingOutlined />}>Setting Account</Menu.Item>\r\n                            <Menu.SubMenu title=\"Account\" key=\"sub1\" icon={<UserOutlined />}>\r\n                                <Menu.Item key=\"6\">Edit Profile</Menu.Item>\r\n                                <Menu.Item key=\"7\">Logout</Menu.Item>\r\n                            </Menu.SubMenu>\r\n                        </Menu>\r\n                    </Layout.Sider>\r\n                    <Layout className=\"site-layout\">\r\n                        <Layout.Content style={{ margin: '0 16px' }}>\r\n                            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                                <Route path=\"/manager/\" exact component={FoodShopList} />\r\n                                <Route path=\"/manager/add_food_shop/:manager_id\" exact component={AddFoodShop} />\r\n                                <Route path=\"/manager/food_shop_detail/:food_shop_id\" exact component={FoodShopDetail} />\r\n                                <Route path=\"/manager/food_item_detail/:food_item_id\" exact component={FoodItemDetail} />\r\n                                <Route path=\"/manager/add_food_item/:food_shop_id\" exact component={AddFoodItem} />\r\n                                <Route path=\"/manager/add_food_item_category/:food_shop_id\" exact component={AddFoodItemCategory} />\r\n                                <Route path=\"/manager/edit_food_shop/:food_shop_id\" exact component={EditFoodShop} />\r\n                                <Route path=\"/manager/edit_food_item/:food_item_id\" exact component={EditFoodItem} />\r\n                                <Route path=\"/manager/setting_account\" exact component={SettingAccount} />\r\n                                <Route path=\"/manager/edit_profile\" exact component={EditProfile} />\r\n                            </div>\r\n                        </Layout.Content>\r\n                        <Footer />\r\n                    </Layout>\r\n                </Layout>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerIndex;\r\n\r\n//<Redirect to=\"/manager/\" />","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const ADD_PRODUCT_BY_ONE = \"ADD_PRODUCT_BY_ONE\";\r\nexport const DELETE_PRODUCT_BY_ONE = \"DELETE_PRODUCT_BY_ONE\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\nconst addProductToCart = (product, state) => {\r\n    console.log(\"adding product\", product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex < 0) {\r\n        updatedCart.push(product);\r\n    } else {\r\n        const updatedItem = updatedCart[updatedItemIndex];\r\n        updatedItem.quantity += product.quantity;\r\n        updatedCart[updatedItemIndex] = updatedItem;\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst addProductToCartByOne = (product, state) => {\r\n    console.log(\"adding product by one\", product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex >= 0) {\r\n        const updatedItem = updatedCart[updatedItemIndex];\r\n        updatedItem.quantity++;\r\n        updatedCart[updatedItemIndex] = updatedItem;\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst deleteProductFromCartByOne = (product, state) => {\r\n    console.log(\"deleting product by one\", product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex >= 0) {\r\n        const updatedItem = updatedCart[updatedItemIndex];\r\n        updatedItem.quantity--;\r\n        if (updatedItem.quantity === 0) {\r\n            updatedCart.splice(updatedItemIndex, 1);\r\n        } else {\r\n            updatedCart[updatedItemIndex] = updatedItem;\r\n        }\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst removeProductFromCart = (product, state) => {\r\n    console.log(\"remove product: \" + product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex >= 0) {\r\n        updatedCart.splice(updatedItemIndex, 1);\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst clearCart = (state) => {\r\n    console.log('clear cart');\r\n\r\n    const updatedCart = [];\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nexport const shopReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_PRODUCT:\r\n            return addProductToCart(action.product, state);\r\n\r\n        case ADD_PRODUCT_BY_ONE:\r\n            return addProductToCartByOne(action.product, state);\r\n\r\n        case DELETE_PRODUCT_BY_ONE:\r\n            return deleteProductFromCartByOne(action.product, state);\r\n\r\n        case REMOVE_PRODUCT:\r\n            return removeProductFromCart(action.product, state);\r\n\r\n        case CLEAR_CART:\r\n            return clearCart(state);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React, { useReducer } from \"react\";\r\nimport ShopContext from \"./ShopContext\";\r\nimport { shopReducer, ADD_PRODUCT, ADD_PRODUCT_BY_ONE, DELETE_PRODUCT_BY_ONE, REMOVE_PRODUCT, CLEAR_CART } from \"./reducer\";\r\n\r\nconst GlobalState = (props) => {\r\n    const [cartState, dispatch] = useReducer(shopReducer, { cart: [] });\r\n\r\n    const addProductToCart = product => {\r\n        dispatch({ type: ADD_PRODUCT, product: product });\r\n    }\r\n\r\n    const addProductToCartByOne = product => {\r\n        dispatch({ type: ADD_PRODUCT_BY_ONE, product: product });\r\n    }\r\n\r\n    const deleteProductFromCartByOne = product => {\r\n        dispatch({ type: DELETE_PRODUCT_BY_ONE, product: product });\r\n    }\r\n\r\n    const removeProductFromCart = product => {\r\n        dispatch({ type: REMOVE_PRODUCT, product: product });\r\n    }\r\n\r\n    const clearCart = () => {\r\n        dispatch({ type: CLEAR_CART });\r\n    }\r\n\r\n    return (\r\n        <ShopContext.Provider\r\n            value={{\r\n                cart: cartState.cart,\r\n                addProductToCart: addProductToCart,\r\n                removeProductFromCart: removeProductFromCart,\r\n                addProductToCartByOne: addProductToCartByOne,\r\n                deleteProductFromCartByOne: deleteProductFromCartByOne,\r\n                clearCart: clearCart\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n}\r\n\r\nexport default GlobalState;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport CustomerLogIn from './pages/customer_pages/CustomerLogIn';\nimport CustomerRegister from './pages/customer_pages/CustomerRegister';\nimport CustomerResetPassword from './pages/customer_pages/CustomerResetPassword';\nimport CustomerResetPasswordToken from './pages/customer_pages/CustomerResetPasswordToken';\nimport CustomerIndex from './pages/customer_pages/CustomerIndex';\n\nimport ManagerLogIn from './pages/manager_pages/ManagerLogIn'\nimport ManagerRegister from './pages/manager_pages/ManagerRegister';\nimport ManagerResetPassword from './pages/manager_pages/ManagerResetPassword';\nimport ManagerResetPasswordToken from './pages/manager_pages/ManagerResetPasswordToken';\nimport ManagerIndex from './pages/manager_pages/ManagerIndex';\n\nimport GlobalState from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <Router>\n        <Switch>\n          <Route path=\"/customer/login\" exact component={CustomerLogIn} />\n          <Route path=\"/customer/register\" exact component={CustomerRegister} />\n          <Route path=\"/customer/reset-password/\" exact component={CustomerResetPassword} />\n          <Route path=\"/customer/reset-password/:token\" exact component={CustomerResetPasswordToken} />\n          <Route path=\"/customer/\" component={CustomerIndex} />\n\n          <Route path=\"/manager/login\" exact component={ManagerLogIn} />\n          <Route path=\"/manager/register\" exact component={ManagerRegister} />\n          <Route path=\"/manager/reset-password/\" exact component={ManagerResetPassword} />\n          <Route path=\"/manager/reset-password/:token\" exact component={ManagerResetPasswordToken} />\n          <Route path=\"/manager/\" component={ManagerIndex} />\n          <Redirect to=\"/manager/login\" />\n        </Switch>\n      </Router>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}