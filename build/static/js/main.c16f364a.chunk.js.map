{"version":3,"sources":["config/CUSTOMER_API_URL.js","pages/customer_pages/components/Footer.js","config/KEY.js","pages/customer_pages/CustomerLogIn.js","pages/customer_pages/CustomerRegister.js","pages/customer_pages/CustomerResetPassword.js","pages/customer_pages/CustomerResetPasswordToken.js","pages/customer_pages/CustomerIndex.js","config/MANAGER_API_URL.js","pages/manager_pages/components/Footer.js","pages/manager_pages/ManagerLogIn.js","pages/manager_pages/ManagerRegister.js","pages/manager_pages/ManagerResetPassword.js","pages/manager_pages/ManagerResetPasswordToken.js","pages/manager_pages/components/FoodShopList.js","pages/manager_pages/components/AddFoodShop.js","pages/manager_pages/components/FoodShopDetail.js","pages/manager_pages/components/FoodItemDetail.js","pages/manager_pages/components/AddFoodItem.js","pages/manager_pages/components/AddFoodItemCategory.js","pages/manager_pages/components/EditFoodShop.js","pages/manager_pages/components/EditFoodItem.js","pages/manager_pages/components/SettingAccount.js","pages/manager_pages/components/EditProfile.js","pages/manager_pages/ManagerIndex.js","App.js","index.js"],"names":["IP_URL","CUSTOMER_SERVICE_PATH","DEFAULT_URL","REGISTER_URL","LOGIN_URL","LOGOUT_URL","RESET_PASSWORD","GET_CUSTOMER_DETAIL","UPDATE_CUSTOMER_PROFILE","CUSTOMER_UPLOAD_AVATAR","Footer","className","to","pathname","target","Date","getFullYear","KEY","reCAPTCHA_site_key","BingMap_key","CustomerLogIn","props","useState","loading","setLoading","emailAddress","useRef","password","rememberMe","recaptcha","useEffect","localStorage","getItem","history","push","handleLogin","captcha","data","email_address","current","state","value","axios","method","url","withCredentials","then","res","success","checked","setItem","customerSessionId","message","error","catch","e","response","tip","spinning","title","style","width","bordered","id","size","type","prefix","UserOutlined","color","placeholder","autoFocus","defaultValue","ref","required","Password","KeyOutlined","block","htmlType","onClick","preventDefault","execute","action","span","textAlign","sitekey","onResolved","console","log","CustomerRegister","firstName","lastName","phoneNumber","confirmPassword","handleRegister","first_name","last_name","phone","Title","level","marginLeft","pattern","Text","CustomerResetPassword","handleResetPassword","MailOutlined","CustomerResetPasswordToken","handleResetPasswordFinal","match","params","token","CustomerIndex","setCustomerId","setFirstName","setLastName","setEmailAddress","setPhone","avatarUrl","setAvatarUrl","setCreatedAt","setUpdatedAt","a","getCustomerDetail","customerDetail","customer_id","avatar_url","created_at","updated_at","result","menu","key","Item","borderBottom","justify","xs","sm","md","lg","xl","Search","allowClear","enterButton","margin","onSearch","text","cursor","icon","ShoppingCartOutlined","overlay","placement","src","Content","padding","minHeight","IP_URL_FOOD_SHOP","IP_URL_FOOD_ITEM","MANAGER_SERVICE_PATH","GET_MANAGER_DETAIL","UPDATE_MANAGER_ACCOUNT","UPDATE_MANAGER_PROFILE","MANAGER_UPLOAD_AVATAR","ADD_FOOD_SHOP_URL","ADD_FOOD_CATEGORY","GET_FOOD_SHOP_LIST","GET_FOOD_SHOP_DETAIL","GET_FOOD_SHOP_CATEGORY_LIST","GET_ALL_MATCH_FOOD_CATEGORY","UPDATE_FOOD_SHOP_ACTIVE","UPDATE_FOOD_SHOP","UPLOAD_FOOD_SHOP_IMAGE","ADD_FOOD_ITEM_URL","GET_FOOD_ITEM_LIST","GET_FOOD_ITEM_CATEGORY_LIST","GET_FOOD_ITEM_DETAIL","UPDATE_FOOD_ITEM","UPLOAD_FOOD_ITEM_IMAGE","ManagerLogIn","sessionId","ManagerRegister","ManagerResetPassword","ManagerResetPasswordToken","FoodShopList","helloTitle","setHelloTitle","foodShopList","setFoodShopList","managerId","setManagerId","getManagerDetail","managetDetail","manager_id","timeTitle","getTimeTitle","getFoodShopList","list_result","results","hour","getHours","float","map","item","index","food_shop_id","hoverable","cover","height","alt","image_url","Meta","food_shop_name","description","food_shop_description","AddFoodShop","shopCategory","setShopCategory","possibleAddressList","setPossibleAddressList","shopCategoryId","setShopCategoryId","imageFile","setImageFile","openTime","setOpenTime","closeTime","setCloseTime","workingAddress","setWorkingAddress","lat","setLat","lon","setLon","foodShopName","getShopCategory","category_list","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","updateAddressByCoord","getPossibleAddressList","length","_text","replace","_results","resourceSets","resources","i","name","updateCoord","address","_address","point","coordinates","handleSubmit","resizableTextArea","food_shop_category_id","working_address","open_time","close_time","axios_1","headers","onChange","Option","food_shop_category_name","options","onSelect","TextArea","rows","accept","file","files","formdata","FormData","append","time","timeString","FoodShopDetail","foodCategoryList","setFoodCategoryList","itemDataList","setItemDataList","active","setActive","createdAt","updatedAt","foodShopCategory","setFoodShopCategory","foodShopDescription","setFoodShopDescription","setFoodShopName","foodShopRating","setFoodShopRating","imageUrl","setImageUrl","getFoodShopDetail","getFoodCategoryList","listResult","food_shop_rating","handleFoodItemTableChange","food_category_id","_result","food_name","food_description","food_item_id","handleOnActiveChange","overflow","marginTop","defaultChecked","disabled","Group","Button","food_category_name","columns","dataIndex","render","handleFoodItemDetail","dataSource","FoodItemDetail","foodAverageRating","setFoodAverageRating","foodCategoryName","setFoodCategoryName","foodDescription","setFoodDescription","foodName","setFoodName","foodPrice","setFoodPrice","foodShopId","setFoodShopId","getFoodItemDetail","food_average_rating","food_price","AddFoodItem","itemCategoryList","setItemCategoryList","foodCategoryId","setFoodCategoryId","getItemCategoryList","resultList","AddFoodItemCategory","categoryList","setCategoryList","setText","getCategoryList","food_category_example_name","handleAdd","EditFoodShop","setDescription","getOldData","handleImageUpload","moment","EditFoodItem","getOldDate","SettingAccount","clientId","setClientId","clientSecret","setClientSecret","client_id","client_secret","EditProfile","oldEmailAddress","setOldEmailAddress","newEmailAddress","setNewEmailAddress","oldPhone","setOldPhone","newPhone","setNewPhone","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","managerDetail","handleChangeAvatar","old_email_address","new_email_address","old_phone","new_phone","ManagerIndex","Sider","collapsible","mode","theme","removeItem","CoffeeOutlined","BellOutlined","CalendarOutlined","SettingOutlined","SubMenu","path","exact","component","App","ReactDOM","document","getElementById"],"mappings":"ugBAAMA,G,oBAAS,2CAeAC,EAXe,CAC1BC,YAAaF,EACbG,aAAcH,EAAS,qBACvBI,UAAWJ,EAAS,kBACpBK,WAAYL,EAAS,mBACrBM,eAAgBN,EAAS,2BACzBO,oBAAqBP,EAAS,kBAC9BQ,wBAAyBR,EAAS,0BAClCS,uBAAwBT,EAAS,0B,OCKtBU,EAZA,WACX,OACI,sBAAKC,UAAU,aAAf,UACK,kBACD,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAUZ,EAAsBC,aAAeY,OAAO,SAAlE,iCAGA,+BAAM,IAAIC,MAAOC,oBCPdC,EALH,CACRC,mBAAoB,2CACpBC,YAAa,oECsIFC,EA3HO,SAACC,GAEnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAeC,mBACfC,EAAWD,mBACXE,EAAaF,mBAEfR,EAAqBD,EAAIC,mBACzBW,EAAY,KAEhBC,qBAAU,WACN,GAAIC,aAAaC,QAAQ,qBACrB,OAAOX,EAAMY,QAAQC,KAAK,eAE/B,IAEH,IAgBMC,EAAc,SAACC,GAEjBZ,GAAW,GACX,IAAIa,EAAO,CACPC,cAAeb,EAAac,QAAQC,MAAMC,MAC1Cd,SAAUA,EAASY,QAAQC,MAAMC,MACjCL,QAASA,GAGbM,IAAM,CACFC,OAAQ,OACRC,IAAK3C,EAAsBG,UAC3BiC,KAAMA,EACNQ,iBAAiB,IAEhBC,MAAK,SAAAC,GAEF,OADAvB,GAAW,GACPuB,EAAIV,KAAKW,SACLpB,EAAWW,QAAQC,MAAMS,UACzBlB,aAAamB,QAAQ,gBAAiBzB,EAAac,QAAQC,MAAMC,OACjEV,aAAamB,QAAQ,eAAgBvB,EAASY,QAAQC,MAAMC,QAEhEV,aAAamB,QAAQ,oBAAqBH,EAAIV,KAAKc,mBACnDpB,aAAamB,QAAQ,gBAAiBzB,EAAac,QAAQC,MAAMC,OACjEW,IAAQJ,QAAQD,EAAIV,KAAKe,SAElB/B,EAAMY,QAAQC,KAAK,cAEnBkB,IAAQC,MAAMN,EAAIV,KAAKe,YAGrCE,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAIjD,OACI,qBAAKzC,UAAU,YAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,iCAAiCC,MAAO,CAAEC,MAAO,KAAOC,UAAU,EAA9E,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,GAAG,eACHC,KAAK,QACLC,KAAK,QACLC,OAAQ,cAACC,EAAA,EAAD,CAAcP,MAAO,CAAEQ,MAAO,qBACtCC,YAAY,2BACZC,WAAS,EACTC,aAAcxC,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,KAC9FwC,IAAK/C,EACLgD,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAMC,SAAP,CACIX,GAAG,WACHC,KAAK,QACLK,YAAY,sBACZI,UAAQ,EACRF,aAAcxC,aAAaC,QAAQ,gBAAkBD,aAAaC,QAAQ,gBAAkB,KAC5FwC,IAAK7C,EACLuC,OAAQ,cAACS,EAAA,EAAD,CAAaf,MAAO,CAAEQ,MAAO,uBAEzC,uBAAM,uBACN,cAAC,IAAD,CAAUI,IAAK5C,EAAf,yBACA,uBAAM,uBACN,cAAC,IAAD,CAAQqC,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QAlF3D,SAACvB,GAGlB,GAFAA,EAAEwB,kBAEEtD,EAAac,QAAQC,MAAMC,QAASd,EAASY,QAAQC,MAAMC,MAS3D,OAAOW,IAAQC,MAAM,wCAPjBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,UAC3CnC,MAAK,SAACV,GACHD,EAAYC,OA0EZ,oBACA,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAK8C,KAAM,GAAX,SACI,cAAC,IAAD,CAAMtE,GAAG,qBAAT,oCAEJ,cAAC,IAAD,CAAKsE,KAAM,GAAItB,MAAO,CAAEuB,UAAW,SAAnC,SACI,cAAC,IAAD,CAAMvE,GAAG,2BAAT,wCAKhB,uBAAM,uBACN,cAAC,IAAD,CACI4D,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,U,SCwEDC,G,OA9LU,SAACnE,GAEtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMiE,EAAY/D,mBACZgE,EAAWhE,mBACXD,EAAeC,mBACfiE,EAAcjE,mBACdC,EAAWD,mBACXkE,EAAkBlE,mBAEpBR,EAAqBD,EAAIC,mBACzBW,EAAY,KAwBVgE,EAAiB,SAACzD,GACpBZ,GAAW,GACX,IAAIa,EAAO,CACPyD,WAAYL,EAAUlD,QAAQC,MAAMC,MACpCsD,UAAWL,EAASnD,QAAQC,MAAMC,MAClCH,cAAeb,EAAac,QAAQC,MAAMC,MAC1CuD,MAAOL,EAAYpD,QAAQC,MAAMC,MACjCd,SAAUA,EAASY,QAAQC,MAAMC,MACjCL,QAASA,GAGbM,IAAM,CACFC,OAAQ,OACRC,IAAK3C,EAAsBE,aAC3BkC,KAAMA,IAELS,MAAK,SAAAC,GAEF,OADAvB,GAAW,GACPuB,EAAIV,KAAKW,SACTI,IAAQJ,QAAQD,EAAIV,KAAKe,SAClB/B,EAAMY,QAAQC,KAAK,oBAEnBkB,IAAQC,MAAMN,EAAIV,KAAKe,YAGrCE,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAIjD,OACI,qBAAKzC,UAAU,eAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,mCAAmCC,MAAO,CAAEC,MAAO,KAAOC,UAAU,EAAhF,SACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKoB,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACLF,GAAG,YACHM,YAAY,OACZG,IAAKiB,EACLhB,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACLF,GAAG,WACHM,YAAY,aACZG,IAAKkB,EACLjB,UAAQ,UAIpB,uBACA,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,2BAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,QACLF,GAAG,eACHM,YAAY,cACZG,IAAK/C,EACLgD,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,0BAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,MACLmC,QAAQ,mCACRrC,GAAG,QACHM,YAAY,iBACZG,IAAKmB,EACLlB,UAAQ,UAIpB,uBACA,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,sBAGA,cAAC,IAAMzB,SAAP,CACIV,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,WACHM,YAAY,WACZG,IAAK7C,EACL8C,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,mCAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,WACLF,GAAG,kBACHM,YAAY,mBACZG,IAAKoB,EACLnB,UAAQ,UAIpB,uBACA,cAAC,IAAW4B,KAAZ,CAAiBpC,KAAK,SAAtB,mHAGA,uBAAM,uBACN,cAAC,IAAD,CAAQA,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QA3J3D,SAACvB,GAGlB,OAFAA,EAAEwB,iBAEEU,EAAUlD,QAAQC,MAAMC,OAASiD,EAASnD,QAAQC,MAAMC,OACxDhB,EAAac,QAAQC,MAAMC,OAASkD,EAAYpD,QAAQC,MAAMC,OAC9Dd,EAASY,QAAQC,MAAMC,OAASmD,EAAgBrD,QAAQC,MAAMC,MAE1Dd,EAASY,QAAQC,MAAMC,QAAUmD,EAAgBrD,QAAQC,MAAMC,MACxDW,IAAQC,MAAM,gFAGrBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,aAC3CnC,MAAK,SAACV,GACHyD,EAAezD,OAIpBgB,IAAQC,MAAM,yCAyIT,oBAGA,uBAAM,uBACN,qBAAK6B,KAAM,GAAItB,MAAO,CAAEuB,UAAW,SAAnC,SACI,cAAC,IAAD,CAAMvE,GAAG,kBAAT,0CAIZ,uBAAM,uBACN,cAAC,IAAD,CACI4D,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,W,SCvGDe,G,OAhFe,SAACjF,GAE3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAeC,mBACjBR,EAAqBD,EAAIC,mBACzBW,EAAY,KAgBV0E,EAAsB,SAACnE,GAEzBZ,GAAW,GACX,IAAIa,EAAO,CACPC,cAAeb,EAAac,QAAQC,MAAMC,MAC1CL,QAASA,GAGbM,IAAM,CACFC,OAAQ,OACRC,IAAK3C,EAAsBK,eAC3B+B,KAAMA,IAELS,MAAK,SAAAC,GAIF,OAHAvB,GAAW,GACX4B,IAAQJ,QAAQD,EAAIV,KAAKe,SAElB/B,EAAMY,QAAQC,KAAK,sBAE7BoB,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAIjD,OACI,qBAAKzC,UAAU,qBAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,4CACRC,MAAO,CAAEC,MAAO,KAChBC,UAAU,EAFd,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,GAAG,eACHC,KAAK,QACLC,KAAK,QACLC,OAAQ,cAACsC,EAAA,EAAD,CAAc5C,MAAO,CAAEQ,MAAO,qBACtCC,YAAY,qBACZG,IAAK/C,EACLgD,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CAAQR,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QAxD3D,SAACvB,GAElB,GADAA,EAAEwB,kBACEtD,EAAac,QAAQC,MAAMC,MAQ3B,OAAOW,IAAQC,MAAM,wCAPjBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,mBAC3CnC,MAAK,SAACV,GACHmE,EAAoBnE,OAkDpB,oBACA,uBAAM,uBACN,cAAC,IAAD,CAAMxB,GAAG,kBAAT,0BAGR,uBAAM,uBACN,cAAC,IAAD,CACI4D,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,WCkBDkB,EA9FoB,SAACpF,GAEhC,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMG,EAAWD,mBACXkE,EAAkBlE,mBAEpBR,EAAqBD,EAAIC,mBACzBW,EAAY,KAqBV6E,EAA2B,SAACtE,GAC9BZ,GAAW,GACX,IAAIa,EAAO,CACPV,SAAUA,EAASY,QAAQC,MAAMC,MACjCL,QAASA,GAEbM,IAAM,CACFC,OAAQ,OACRC,IAAK3C,EAAsBK,eAAiBe,EAAMsF,MAAMC,OAAOC,MAC/DxE,KAAMA,IAELS,MAAK,SAAAC,GAGF,OAFAvB,GAAW,GACX4B,IAAQJ,QAAQD,EAAIV,KAAKe,SAClB/B,EAAMY,QAAQC,KAAK,sBAE7BoB,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACqB,4BAA5B+B,EAAEC,SAASnB,KAAKe,SAChBA,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,SACvB/B,EAAMY,QAAQC,KAAK,oBAEnBkB,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAKrD,OACI,qBAAKzC,UAAU,qBAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,sBAAsBC,MAAO,CAAEC,MAAO,KAAOC,UAAU,EAAnE,SACI,eAAC,IAAD,WACI,cAAC,IAAMY,SAAP,CACIX,GAAG,gBACHC,KAAK,QACLK,YAAY,oBACZG,IAAK7C,EACL8C,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CACIV,GAAG,uBACHC,KAAK,QACLC,KAAK,WACLI,YAAY,mBACZG,IAAKoB,EACLnB,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CAAQR,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QApE3D,SAACvB,GAGlB,OAFAA,EAAEwB,iBAEEpD,EAASY,QAAQC,MAAMC,OAASmD,EAAgBrD,QAAQC,MAAMC,MAC1Dd,EAASY,QAAQC,MAAMC,QAAUmD,EAAgBrD,QAAQC,MAAMC,MAQxDW,IAAQC,MAAM,kFAPjBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,yBAC3CnC,MAAK,SAACV,GACHsE,EAAyBtE,OAOlCgB,IAAQC,MAAM,yCAqDT,yBAGR,uBAAM,uBACN,uBAAM,uBACN,cAAC,IAAD,CACImB,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,U,8EC6DDuB,G,cAnJO,SAACzF,GAEnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAEA,GAFA,KAEoCD,mBAAS,OAA7C,mBAAmByF,GAAnB,WACA,EAAkCzF,mBAAS,MAA3C,mBAAkB0F,GAAlB,WACA,EAAgC1F,mBAAS,MAAzC,mBAAiB2F,GAAjB,WACA,EAAwC3F,mBAAS,MAAjD,mBAAqB4F,GAArB,WACA,EAA0B5F,mBAAS,MAAnC,mBAAc6F,GAAd,WACA,EAAkC7F,mBAAS,MAA3C,mBAAO8F,EAAP,KAAkBC,EAAlB,KACA,EAAkC/F,mBAAS,MAA3C,mBAAkBgG,GAAlB,WACA,EAAkChG,mBAAS,MAA3C,mBAAkBiG,GAAlB,WAGAzF,oBAAS,sBAAC,4BAAA0F,EAAA,sEAEIzF,aAAaC,QAAQ,sBACvBD,aAAaC,QAAQ,kBACrBX,EAAMY,QAAQC,KAAK,mBAJrB,SAOyBuF,EAAkB1F,aAAaC,QAAQ,kBAPhE,OAOE0F,EAPF,OAQFX,EAAcW,EAAeC,aAC7BX,EAAaU,EAAe5B,YAC5BmB,EAAYS,EAAe3B,WAC3BmB,EAAgBQ,EAAepF,eAC/B6E,EAASO,EAAe1B,OACxBqB,EAAaK,EAAeE,YAC5BN,EAAaI,EAAeG,YAC5BN,EAAaG,EAAeI,YAf1B,2EAkBK1E,IAAQC,MAAM,KAAED,UAlBrB,0DAoBP,IAEH,IAAMqE,EAAiB,uCAAG,WAAOnF,GAAP,eAAAkF,EAAA,sEACH9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK3C,EAAsBM,oBAAsB,kBAAoB+B,IADzF,cAClByF,EADkB,yBAEfA,EAAO1F,KAAKA,MAFG,2CAAH,sDAyCjB2F,EACF,eAAC,IAAD,CAAMlD,QALc,SAACvB,GACrB+B,QAAQC,IAAIhC,EAAE0E,MAId,UACI,cAAC,IAAKC,KAAN,CAAmBtE,MAAO,CAAEuE,aAAc,mBAA1C,0BAAe,KACf,cAAC,IAAKD,KAAN,2BAAe,KACf,cAAC,IAAKA,KAAN,qBAAe,KACf,cAAC,IAAKA,KAAN,0BAAe,KACf,cAAC,IAAKA,KAAN,qBAAe,KACf,cAAC,IAAKA,KAAN,kBAAe,QAIvB,OACI,8BACI,eAAC,IAAD,CAAMzE,IAAI,aAAaC,SAAUnC,EAAjC,UACI,qBAAKZ,UAAU,SAAf,SACI,eAAC,IAAD,CAAKsD,KAAK,OAAOmE,QAAQ,SAAzB,UACI,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAxC,SACI,cAAC,IAAD,CAAM7H,GAAG,aAAT,SACI,sBAAMD,UAAU,cAAhB,6CAGR,eAAC,IAAD,CAAK0H,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAvC,UACI,cAAC,IAAMC,OAAP,CACIC,YAAU,EACVC,aAAW,EACXhF,MAAO,CAAEC,MAAO,MAAOgF,OAAQ,WAC/BxE,YAAY,uBACZyE,SAtCP,SAACC,GAClBzD,QAAQC,IAAIwD,MAuCQ,sBACIjE,QArCF,WACtBQ,QAAQC,IAAI,iBAqCY3B,MAAO,CAAEoF,OAAQ,UAAWH,OAAQ,MAFxC,SAII,cAAC,IAAD,CACI7E,KAAK,QACLiF,KAAM,cAACC,EAAA,EAAD,QAId,sBACItF,MAAO,CAAEoF,OAAQ,WADrB,SAGI,cAAC,IAAD,CACIG,QAASnB,EACToB,UAAU,eAFd,SAKQhC,EACI,cAAC,IAAD,CAAQpD,KAAK,QAAQqF,IAAKjC,IAC1B,cAAC,IAAD,CAAQpD,KAAK,QAAQiF,KAAM,cAAC9E,EAAA,EAAD,kBAOvD,cAAC,IAAD,CAAQxD,UAAU,YAAlB,SACI,cAAC,IAAO2I,QAAR,CAAgB1F,MAAO,CAAEiF,OAAQ,WAAjC,SACI,qBAAKjF,MAAO,CAAE2F,QAAS,GAAIC,UAAW,KAAtC,sBAKR,cAAC,IAAD,IACA,cAAC,EAAD,WC1JVxJ,G,cAAS,0CACTyJ,EAAmB,mDACnBC,EAAmB,mDAkCVC,EA7Bc,CACzBzJ,YAAaF,EACbG,aAAcH,EAAS,oBACvBI,UAAWJ,EAAS,iBACpBK,WAAYL,EAAS,kBACrBM,eAAgBN,EAAS,0BACzB4J,mBAAoB5J,EAAS,iBAC7B6J,uBAAwB7J,EAAS,yBACjC8J,uBAAwB9J,EAAS,yBACjC+J,sBAAuB/J,EAAS,wBAEhCgK,kBAAmBP,EAAmB,gBACtCQ,kBAAmBR,EAAmB,oBACtCS,mBAAoBT,EAAmB,4BACvCU,qBAAsBV,EAAmB,8BACzCW,4BAA6BX,EAAmB,6BAChDY,4BAA6BZ,EAAmB,0BAChDa,wBAAyBb,EAAmB,0BAC5Cc,iBAAkBd,EAAmB,mBACrCe,uBAAwBf,EAAmB,yBAE3CgB,kBAAmBf,EAAmB,gBACtCgB,mBAAoBhB,EAAmB,gCACvCiB,4BAA6BlB,EAAmB,iCAChDmB,qBAAsBlB,EAAmB,gCACzCmB,iBAAkBnB,EAAmB,mBACrCoB,uBAAwBpB,EAAmB,0BChBhChJ,EAZA,WACX,OACI,sBAAKC,UAAU,aAAf,UACK,kBACD,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAU8I,EAAqBzJ,aAAeY,OAAO,SAAjE,8CAGA,+BAAM,IAAIC,MAAOC,oBC4Hd+J,EA3HM,SAAC1J,GAElB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAeC,mBACfC,EAAWD,mBACXE,EAAaF,mBAEfR,EAAqBD,EAAIC,mBACzBW,EAAY,KAEhBC,qBAAU,WACN,GAAIC,aAAaC,QAAQ,aACrB,OAAOX,EAAMY,QAAQC,KAAK,cAE/B,IAEH,IAgBMC,EAAc,SAACC,GAEjBZ,GAAW,GACX,IAAIa,EAAO,CACPC,cAAeb,EAAac,QAAQC,MAAMC,MAC1Cd,SAAUA,EAASY,QAAQC,MAAMC,MACjCL,QAASA,GAGbM,IAAM,CACFC,OAAQ,OACRC,IAAK+G,EAAqBvJ,UAC1BiC,KAAMA,EACNQ,iBAAiB,IAEhBC,MAAK,SAAAC,GAEF,OADAvB,GAAW,GACPuB,EAAIV,KAAKW,SACLpB,EAAWW,QAAQC,MAAMS,UACzBlB,aAAamB,QAAQ,gBAAiBzB,EAAac,QAAQC,MAAMC,OACjEV,aAAamB,QAAQ,eAAgBvB,EAASY,QAAQC,MAAMC,QAEhEV,aAAamB,QAAQ,YAAaH,EAAIV,KAAK2I,WAC3CjJ,aAAamB,QAAQ,eAAgBzB,EAAac,QAAQC,MAAMC,OAChEW,IAAQJ,QAAQD,EAAIV,KAAKe,SAElB/B,EAAMY,QAAQC,KAAK,aAEnBkB,IAAQC,MAAMN,EAAIV,KAAKe,YAGrCE,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAIjD,OACI,qBAAKzC,UAAU,YAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,8CAA8CC,MAAO,CAAEC,MAAO,KAAOC,UAAU,EAA3F,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,GAAG,eACHC,KAAK,QACLC,KAAK,QACLC,OAAQ,cAACC,EAAA,EAAD,CAAcP,MAAO,CAAEQ,MAAO,qBACtCC,YAAY,2BACZC,WAAS,EACTC,aAAcxC,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,KAC9FwC,IAAK/C,EACLgD,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAMC,SAAP,CACIX,GAAG,WACHC,KAAK,QACLK,YAAY,sBACZI,UAAQ,EACRF,aAAcxC,aAAaC,QAAQ,gBAAkBD,aAAaC,QAAQ,gBAAkB,KAC5FwC,IAAK7C,EACLuC,OAAQ,cAACS,EAAA,EAAD,CAAaf,MAAO,CAAEQ,MAAO,uBAEzC,uBAAM,uBACN,cAAC,IAAD,CAAUI,IAAK5C,EAAf,yBACA,uBAAM,uBACN,cAAC,IAAD,CAAQqC,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QAlF3D,SAACvB,GAGlB,GAFAA,EAAEwB,kBAEEtD,EAAac,QAAQC,MAAMC,QAASd,EAASY,QAAQC,MAAMC,MAS3D,OAAOW,IAAQC,MAAM,wCAPjBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,UAC3CnC,MAAK,SAACV,GACHD,EAAYC,OA0EZ,oBACA,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAK8C,KAAM,GAAX,SACI,cAAC,IAAD,CAAMtE,GAAG,oBAAT,oCAEJ,cAAC,IAAD,CAAKsE,KAAM,GAAItB,MAAO,CAAEuB,UAAW,SAAnC,SACI,cAAC,IAAD,CAAMvE,GAAG,0BAAT,wCAKhB,uBAAM,uBACN,cAAC,IAAD,CACI4D,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,UCwED0F,G,OA9LS,SAAC5J,GAErB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMiE,EAAY/D,mBACZgE,EAAWhE,mBACXD,EAAeC,mBACfiE,EAAcjE,mBACdC,EAAWD,mBACXkE,EAAkBlE,mBAEpBR,EAAqBD,EAAIC,mBACzBW,EAAY,KAwBVgE,EAAiB,SAACzD,GACpBZ,GAAW,GACX,IAAIa,EAAO,CACPyD,WAAYL,EAAUlD,QAAQC,MAAMC,MACpCsD,UAAWL,EAASnD,QAAQC,MAAMC,MAClCH,cAAeb,EAAac,QAAQC,MAAMC,MAC1CuD,MAAOL,EAAYpD,QAAQC,MAAMC,MACjCd,SAAUA,EAASY,QAAQC,MAAMC,MACjCL,QAASA,GAGbM,IAAM,CACFC,OAAQ,OACRC,IAAK+G,EAAqBxJ,aAC1BkC,KAAMA,IAELS,MAAK,SAAAC,GAEF,OADAvB,GAAW,GACPuB,EAAIV,KAAKW,SACTI,IAAQJ,QAAQD,EAAIV,KAAKe,SAClB/B,EAAMY,QAAQC,KAAK,mBAEnBkB,IAAQC,MAAMN,EAAIV,KAAKe,YAGrCE,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAIjD,OACI,qBAAKzC,UAAU,eAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,kCAAkCC,MAAO,CAAEC,MAAO,KAAOC,UAAU,EAA/E,SACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKoB,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACLF,GAAG,YACHM,YAAY,OACZG,IAAKiB,EACLhB,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACLF,GAAG,WACHM,YAAY,aACZG,IAAKkB,EACLjB,UAAQ,UAIpB,uBACA,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,2BAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,QACLF,GAAG,eACHM,YAAY,cACZG,IAAK/C,EACLgD,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,0BAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,MACLmC,QAAQ,mCACRrC,GAAG,QACHM,YAAY,iBACZG,IAAKmB,EACLlB,UAAQ,UAIpB,uBACA,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,sBAGA,cAAC,IAAMzB,SAAP,CACIV,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,WACHM,YAAY,WACZG,IAAK7C,EACL8C,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,mCAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,WACLF,GAAG,kBACHM,YAAY,mBACZG,IAAKoB,EACLnB,UAAQ,UAIpB,uBACA,cAAC,IAAW4B,KAAZ,CAAiBpC,KAAK,SAAtB,mHAGA,uBAAM,uBACN,cAAC,IAAD,CAAQA,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QA3J3D,SAACvB,GAGlB,OAFAA,EAAEwB,iBAEEU,EAAUlD,QAAQC,MAAMC,OAASiD,EAASnD,QAAQC,MAAMC,OACxDhB,EAAac,QAAQC,MAAMC,OAASkD,EAAYpD,QAAQC,MAAMC,OAC9Dd,EAASY,QAAQC,MAAMC,OAASmD,EAAgBrD,QAAQC,MAAMC,MAE1Dd,EAASY,QAAQC,MAAMC,QAAUmD,EAAgBrD,QAAQC,MAAMC,MACxDW,IAAQC,MAAM,gFAGrBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,aAC3CnC,MAAK,SAACV,GACHyD,EAAezD,OAIpBgB,IAAQC,MAAM,yCAyIT,oBAGA,uBAAM,uBACN,qBAAK6B,KAAM,GAAItB,MAAO,CAAEuB,UAAW,SAAnC,SACI,cAAC,IAAD,CAAMvE,GAAG,iBAAT,0CAIZ,uBAAM,uBACN,cAAC,IAAD,CACI4D,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,WCvGD2F,G,OAhFc,SAAC7J,GAE1B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAeC,mBACjBR,EAAqBD,EAAIC,mBACzBW,EAAY,KAgBV0E,EAAsB,SAACnE,GAEzBZ,GAAW,GACX,IAAIa,EAAO,CACPC,cAAeb,EAAac,QAAQC,MAAMC,MAC1CL,QAASA,GAGbM,IAAM,CACFC,OAAQ,OACRC,IAAK+G,EAAqBrJ,eAC1B+B,KAAMA,IAELS,MAAK,SAAAC,GAIF,OAHAvB,GAAW,GACX4B,IAAQJ,QAAQD,EAAIV,KAAKe,SAElB/B,EAAMY,QAAQC,KAAK,qBAE7BoB,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAIjD,OACI,qBAAKzC,UAAU,qBAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,4CACRC,MAAO,CAAEC,MAAO,KAChBC,UAAU,EAFd,SAGI,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,GAAG,eACHC,KAAK,QACLC,KAAK,QACLC,OAAQ,cAACsC,EAAA,EAAD,CAAc5C,MAAO,CAAEQ,MAAO,qBACtCC,YAAY,qBACZG,IAAK/C,EACLgD,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CAAQR,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QAxD3D,SAACvB,GAElB,GADAA,EAAEwB,kBACEtD,EAAac,QAAQC,MAAMC,MAQ3B,OAAOW,IAAQC,MAAM,wCAPjBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,mBAC3CnC,MAAK,SAACV,GACHmE,EAAoBnE,OAkDpB,oBACA,uBAAM,uBACN,cAAC,IAAD,CAAMxB,GAAG,iBAAT,0BAGR,uBAAM,uBACN,cAAC,IAAD,CACI4D,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,WCkBD4F,EA9FmB,SAAC9J,GAE/B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMG,EAAWD,mBACXkE,EAAkBlE,mBAEpBR,EAAqBD,EAAIC,mBACzBW,EAAY,KAqBV6E,EAA2B,SAACtE,GAC9BZ,GAAW,GACX,IAAIa,EAAO,CACPV,SAAUA,EAASY,QAAQC,MAAMC,MACjCL,QAASA,GAEbM,IAAM,CACFC,OAAQ,OACRC,IAAK+G,EAAqBrJ,eAAiBe,EAAMsF,MAAMC,OAAOC,MAC9DxE,KAAMA,IAELS,MAAK,SAAAC,GAGF,OAFAvB,GAAW,GACX4B,IAAQJ,QAAQD,EAAIV,KAAKe,SAClB/B,EAAMY,QAAQC,KAAK,qBAE7BoB,OAAM,SAAAC,GAEH,OADA/B,GAAW,GACqB,4BAA5B+B,EAAEC,SAASnB,KAAKe,SAChBA,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,SACvB/B,EAAMY,QAAQC,KAAK,mBAEnBkB,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,aAKrD,OACI,qBAAKzC,UAAU,qBAAf,SACI,eAAC,IAAD,CAAM8C,IAAI,aAAaC,SAAUnC,EAAjC,UACI,cAAC,IAAD,CAAMoC,MAAM,sBAAsBC,MAAO,CAAEC,MAAO,KAAOC,UAAU,EAAnE,SACI,eAAC,IAAD,WACI,cAAC,IAAMY,SAAP,CACIX,GAAG,gBACHC,KAAK,QACLK,YAAY,oBACZG,IAAK7C,EACL8C,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CACIV,GAAG,uBACHC,KAAK,QACLC,KAAK,WACLI,YAAY,mBACZG,IAAKoB,EACLnB,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CAAQR,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QApE3D,SAACvB,GAGlB,OAFAA,EAAEwB,iBAEEpD,EAASY,QAAQC,MAAMC,OAASmD,EAAgBrD,QAAQC,MAAMC,MAC1Dd,EAASY,QAAQC,MAAMC,QAAUmD,EAAgBrD,QAAQC,MAAMC,MAQxDW,IAAQC,MAAM,kFAPjBxB,GACAA,EAAUmD,QAAQ9D,EAAoB,CAAE+D,OAAQ,yBAC3CnC,MAAK,SAACV,GACHsE,EAAyBtE,OAOlCgB,IAAQC,MAAM,yCAqDT,yBAGR,uBAAM,uBACN,uBAAM,uBACN,cAAC,IAAD,CACImB,IAAK,SAAAA,GAAG,OAAI3C,EAAY2C,GACxBY,QAASlE,EACTmE,WAAY,kBAAMC,QAAQC,IAAI,sBAElC,cAAC,EAAD,U,wCCHD6F,GA1FM,SAAC/J,GAElB,MAAoCC,mBAAS,IAA7C,mBAAO+J,EAAP,KAAmBC,EAAnB,KACA,EAAwChK,mBAAS,IAAjD,mBAAOiK,EAAP,KAAqBC,EAArB,KACA,EAAkClK,mBAAS,MAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KAEA5J,oBAAS,sBAAC,sCAAA0F,EAAA,+EAEwBmE,IAFxB,cAEEC,EAFF,OAIE9F,EAAa8F,EAAcvJ,KAAKA,KAAKyD,WACrCC,EAAY6F,EAAcvJ,KAAKA,KAAK0D,UACpC8F,EAAaD,EAAcvJ,KAAKA,KAAKwJ,WACzCH,EAAaG,GAETC,EAAYC,IAChBT,EAAcQ,EAAY,KAAOhG,EAAa,IAAMC,GAVlD,UAYsBiG,EAAgBH,GAZtC,QAYEI,EAZF,OAaFT,EAAgBS,EAAY5J,KAAKA,MAb/B,sIAkBP,IAEH,IAQMsJ,EAAgB,uCAAG,4BAAAnE,EAAA,sEACF9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBC,mBAAqB,kBAAoB7H,aAAaC,QAAQ,kBAD7G,cACjB+F,EADiB,yBAEdA,GAFc,2CAAH,qDAKhBiE,EAAe,uCAAG,WAAOH,GAAP,eAAArE,EAAA,sEACA9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBO,mBAAqB,eAAiB2B,IADvF,cAChBK,EADgB,yBAEbA,GAFa,2CAAH,sDAKfH,EAAe,WACjB,IAAII,GAAQ,IAAIpL,MAAQqL,WAExB,OAAID,GAAQ,GAAKA,GAAQ,GACd,eACAA,EAAO,IAAMA,GAAQ,GACrB,iBAEA,cAIf,OACI,gCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKjH,KAAM,GAAX,SACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,SACKmF,MAGT,cAAC,IAAD,CAAKnG,KAAM,GAAX,SACI,cAAC,IAAD,CAAQtB,MAAO,CAAEyI,MAAO,SAAWpI,KAAK,UAAUa,QAvCxC,WACtB,OAAI2G,EACOpK,EAAMY,QAAQC,KAAK,0BAA4BuJ,GAE/CrI,IAAQC,MAAM,0BAmCb,oCAGR,cAAC,IAAD,IAGIkI,EAAae,KAAI,SAACC,EAAMC,GAAP,OACb,qBAAK5I,MAAO,CAAEC,MAAO,IAAKwI,MAAO,OAAQxD,OAAQ,MAAjD,SACI,cAAC,IAAD,CAAMjI,GAAI,6BAA+B2L,EAAKE,aAA9C,SACI,cAAC,IAAD,CACIC,WAAS,EACTC,MAAO,qBAAK/I,MAAO,CAAEgJ,OAAQ,KAAOC,IAAI,YAAYxD,IAAKkD,EAAKO,YAC9DhJ,UAAU,EAHd,SAII,cAAC,IAAKiJ,KAAN,CAAWpJ,MAAO4I,EAAKS,eAAgBC,YAAaV,EAAKW,6BANPV,U,6BC8OnEW,GAtTK,SAAC9L,GAEjB,MAAwCC,mBAAS,IAAjD,mBAAO8L,EAAP,KAAqBC,EAArB,KACA,EAAsD/L,mBAAS,IAA/D,mBAAOgM,EAAP,KAA4BC,EAA5B,KAGA,EAA4CjM,mBAAS,GAArD,mBAAOkM,EAAP,KAAuBC,EAAvB,KACA,EAAkCnM,mBAAS,MAA3C,mBAAOoM,EAAP,KAAkBC,EAAlB,KACA,EAAgCrM,mBAAS,MAAzC,mBAAOsM,EAAP,KAAiBC,EAAjB,KACA,EAAkCvM,mBAAS,MAA3C,mBAAOwM,EAAP,KAAkBC,EAAlB,KACA,EAA4CzM,mBAAS,MAArD,mBAAO0M,EAAP,KAAuBC,EAAvB,KACA,EAAsB3M,mBAAS,MAA/B,mBAAO4M,EAAP,KAAYC,EAAZ,KACA,EAAsB7M,mBAAS,MAA/B,mBAAO8M,EAAP,KAAYC,EAAZ,KACMC,EAAe5M,mBACfuL,GAAcvL,mBAEpBI,oBAAS,sBAAC,4BAAA0F,EAAA,+EAEwB+G,KAFxB,OAEEC,EAFF,OAGFnB,EAAgBmB,EAAcnM,KAAKA,MAEnCoM,KALE,yEAOKrL,IAAQC,MAAM,KAAED,UAPrB,yDASP,IAEH,IAAMqL,GAAc,WAChB,IAAIC,UAAUC,YAaV,OAAOvL,IAAQC,MAAM,wCAZrB,IACIqL,UAAUC,YAAYC,oBAAmB,SAAAC,GACrCV,EAAOU,EAASC,OAAOC,UACvBV,EAAOQ,EAASC,OAAOE,WACvBC,GAAqBJ,EAASC,OAAOC,SAAUF,EAASC,OAAOE,cAChE,SAAAzL,GACC,OAAOH,IAAQC,MAAME,EAAEH,YAE7B,MAAOG,GACL,OAAOH,IAAQC,MAAM,4DAO3B6L,GAAsB,uCAAG,WAAOnG,GAAP,uBAAAvB,EAAA,kEAGO,MAA1BuB,EAAKA,EAAKoG,OAAS,IAAuB,KAATpG,EAHd,wDAMfqG,EAAQrG,EAAKsG,QAAQ,IAAK,OANX,SAOC3M,IAAM,CAAEC,OAAQ,MAAOC,IAAK,iDAAmDwM,EAAQ,QAAUnO,EAAIE,cAPtG,OAWnB,IAJI+K,EAPe,OAQfoD,EAAWpD,EAAQ7J,KAAKkN,aAAa,GAAGC,UAExCnN,EAAO,GACFoN,EAAI,EAAGA,EAAIH,EAASH,OAAQM,IACjCpN,EAAKH,KAAK,CAAEO,MAAO6M,EAASG,GAAGC,KAAMzH,IAAKwH,IAE9ClC,EAAuBlL,GAdJ,8IAAH,sDAqBtBkM,GAAe,uCAAG,4BAAA/G,EAAA,sEACA9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBS,8BADjD,cAChB8B,EADgB,yBAEbA,GAFa,2CAAH,qDAKf+C,GAAoB,uCAAG,WAAOf,EAAKE,GAAZ,iBAAA5G,EAAA,+EAED9E,IAAM,CAAEC,OAAQ,MAAOC,IAAI,iDAAD,OAAmDsL,EAAnD,YAA0DE,EAA1D,gBAAqEnN,EAAIE,eAFlG,UAEjB+K,EAFiB,OAIG,KADpBoD,EAAWpD,EAAQ7J,KAAKkN,aAAa,GAAGC,WAC/BL,OAJQ,gBAKjBlB,EAAkBqB,EAAS,GAAGI,MALb,+LAAH,wDAcpBC,GAAW,uCAAG,WAAOC,GAAP,mBAAApI,EAAA,kEAEwB,MAAhCoI,EAAQA,EAAQT,OAAS,IAA0B,KAAZS,EAF/B,wDAKJC,EAAWD,EAAQP,QAAQ,IAAK,OAL5B,SAMY3M,IAAM,CAAEC,OAAQ,MAAOC,IAAK,iDAAmDiN,EAAW,QAAU5O,EAAIE,cANpH,UAMJ+K,EANI,OASgB,KAFpBoD,EAAWpD,EAAQ7J,KAAKkN,aAAa,GAAGC,WAE/BL,OATL,iBAUJlB,EAAkB2B,GAClBzB,EAAOmB,EAAS,GAAGQ,MAAMC,YAAY,IACrC1B,EAAOiB,EAAS,GAAGQ,MAAMC,YAAY,IAZjC,gMAAH,sDAuBXC,GAAY,uCAAG,WAAOzM,GAAP,iBAAAiE,EAAA,yDACjBjE,EAAEwB,iBADe,WAITuJ,EAAa/L,QAAQC,MAAMC,OAC3BwK,GAAY1K,QAAQ0N,kBAAkB5O,MAAMoB,OAC5C+K,GACAE,GACAM,GACAE,GACAE,GACAR,GACAE,GAZS,wBAcLzL,EAAO,CACPwJ,WAAYxK,EAAMsF,MAAMC,OAAOiF,WAC/BqE,sBAAuB1C,EACvBR,eAAgBsB,EAAa/L,QAAQC,MAAMC,MAC3CyK,sBAAuBD,GAAY1K,QAAQ0N,kBAAkB5O,MAAMoB,MACnE0N,gBAAiBnC,EACjBE,IAAKA,EACLE,IAAKA,EACLgC,UAAWxC,EACXyC,WAAYvC,GAvBP,SA0BWpL,IAAM,CAAEC,OAAQ,OAAQC,IAAK+G,EAAqBK,kBAAmB3H,KAAMA,IA1BtF,cA0BLiO,EA1BK,gBA2BW5N,IAAM,CACtBC,OAAQ,OACRC,IAAK+G,EAAqBa,uBAAyB,OAAS8F,EAAQjO,KAAKoK,aACzEpK,KAAMqL,EACN6C,QAAS,CAAE,eAAgB,uCA/BtB,kBAkCGlO,KAAKW,QAlCR,wBAmCLI,IAAQJ,QAAQ,6BAnCX,kBAoCE3B,EAAMY,QAAQC,KAAK,cApCrB,iCAsCEkB,IAAQC,MAAM,gDAtChB,yDAyCFD,IAAQC,MAAM,yCAzCZ,mFA4CND,IAAQC,MAAM,gDA5CR,0DAAH,sDA2DlB,OACI,gCACI,8BACI,cAAC,IAAD,CAAQY,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QAPxC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,cAMlB,uBAEJ,uBAAM,uBACN,cAAC,IAAW+D,MAAZ,CAAkBC,MAAO,EAAzB,2CACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKhB,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,4BAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,eACHS,IAAK8J,EACL7J,UAAQ,OAGhB,cAAC,IAAD,CAAKS,KAAM,IACX,eAAC,IAAD,CAAKA,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,gCAGA,cAAC,KAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,iBACHyM,SAAU,SAAA/N,GAAK,OAAIgL,EAAkBhL,IACrC8B,aAAc,EACdE,UAAQ,EANZ,SASQ2I,EAAad,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,KAAOiE,OAAR,CAAehO,MAAO8J,EAAK2D,sBAA3B,SACK3D,EAAKmE,yBAD6ClE,cAQ3E,uBAAM,uBACN,cAAC,IAAWvG,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,gDAGA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKjB,KAAM,GAAX,SAEQgJ,GAAOE,GACP,qBACIxK,MAAO,CAAEC,MAAO,OAChBwF,IAAG,gEAA2D6E,EAA3D,YAAkEE,EAAlE,kDAA+GF,EAA/G,YAAsHE,EAAtH,oBAAqInN,EAAIE,aAC5I0L,IAAI,UAIhB,eAAC,IAAD,CAAK3H,KAAM,GAAX,UACI,cAAC,KAAD,CACIlB,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,qBACH4M,QAASrD,EACTxE,SAAUoG,GACV0B,SAAUjB,GACVlL,UAAQ,IAEZ,uBAAM,uBACN,eAAC,IAAWwB,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,QAAjD,8BAA6E6H,GAAkC,MAC/G,eAAC,IAAW/H,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,QAAjD,uBAAsE+H,GAAY,MAClF,eAAC,IAAWjI,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,QAAjD,wBAAuEiI,GAAY,YAG3F,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAWnI,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,mCAGA,cAAC,IAAM0K,SAAP,CACI9M,GAAG,cACH+M,KAAM,EACNtM,IAAKyI,GACLxI,UAAQ,OAGhB,uBAAM,uBACN,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,6BAGA,cAAC,IAAD,CACI1B,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACL8M,OAAO,iCACPhN,GAAG,YACHyM,SAhHE,SAACjN,GACvB,IAAIyN,EAAOzN,EAAEzC,OAAOmQ,MAAM,GACtBC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASJ,GACzBrD,EAAauD,SA+GD,eAAC,IAAD,CAAKhM,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBAGA,cAAC,KAAD,CACI1B,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,WACHyM,SAAU,SAACa,EAAMC,GAAP,OAAsBzD,EAAYyD,SAGpD,eAAC,IAAD,CAAKpM,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBAGA,cAAC,KAAD,CACI1B,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,YACHyM,SAAU,SAACa,EAAMC,GAAP,OAAsBvD,EAAauD,YAIzD,uBAAM,uBACN,cAAC,IAAD,CACIrN,KAAK,UACLD,KAAK,QACLY,OAAK,EACLC,SAAS,SACTC,QAASkL,GALb,2B,wCCzEDuB,GAjOQ,SAAClQ,GAEpB,MAAgDC,mBAAS,IAAzD,mBAAOkQ,EAAP,KAAyBC,EAAzB,KACA,EAAwCnQ,mBAAS,IAAjD,mBAAOoQ,EAAP,KAAqBC,EAArB,KAEA,EAA4BrQ,oBAAS,GAArC,mBAAOsQ,EAAP,KAAeC,EAAf,KACA,EAAkCvQ,mBAAS,IAA3C,mBAAOwM,EAAP,KAAkBC,EAAlB,KACA,EAAgCzM,mBAAS,IAAzC,mBAAOsM,EAAP,KAAiBC,EAAjB,KACA,EAAkCvM,mBAAS,IAA3C,mBAAOwQ,EAAP,KAAkBxK,EAAlB,KACA,EAAkChG,mBAAS,IAA3C,mBAAOyQ,EAAP,KAAkBxK,EAAlB,KACA,EAAgDjG,mBAAS,IAAzD,mBAAO0Q,EAAP,KAAyBC,EAAzB,KACA,EAAsD3Q,mBAAS,IAA/D,mBAAO4Q,EAAP,KAA4BC,EAA5B,KACA,EAAwC7Q,mBAAS,IAAjD,mBAAOgN,EAAP,KAAqB8D,EAArB,KACA,GAA4C9Q,mBAAS,MAArD,qBAAO+Q,GAAP,MAAuBC,GAAvB,MACA,GAAgChR,mBAAS,IAAzC,qBAAOiR,GAAP,MAAiBC,GAAjB,MACA,GAA4ClR,mBAAS,IAArD,qBAAO0M,GAAP,MAAuBC,GAAvB,MAEAnM,oBAAS,sBAAC,8BAAA0F,EAAA,+EAEiBiL,GAAkBpR,EAAMsF,MAAMC,OAAO6F,cAFtD,cAEE1E,EAFF,gBAGqB2K,GAAoBrR,EAAMsF,MAAMC,OAAO6F,cAH5D,OAGEkG,EAHF,OAKFH,GAAYzK,EAAO+E,WACnB+E,EAAU9J,EAAO6J,QACjB7D,EAAahG,EAAOsI,YACpBxC,EAAY9F,EAAOqI,WACnB9I,EAAaS,EAAOF,YACpBN,EAAaQ,EAAOD,YACpBmK,EAAoBlK,EAAO2I,yBAC3ByB,EAAuBpK,EAAOmF,uBAC9BkF,EAAgBrK,EAAOiF,gBACvBsF,GAAkBvK,EAAO6K,kBACzB3E,GAAkBlG,EAAOoI,iBACzBsB,EAAoBkB,GAhBlB,2EAmBKvP,IAAQC,MAAM,KAAED,UAnBrB,0DAqBP,IAEH,IAAMqP,GAAiB,uCAAG,WAAOhG,GAAP,eAAAjF,EAAA,sEACH9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBQ,qBAAuB,iBAAmBsC,IADxF,cAClB1E,EADkB,yBAEfA,EAAO1F,KAAKA,MAFG,2CAAH,sDAKjBqQ,GAAmB,uCAAG,WAAOjG,GAAP,eAAAjF,EAAA,sEACL9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBgB,4BAA8B,iBAAmB8B,IAD7F,cACpB1E,EADoB,yBAEjBA,EAAO1F,KAAKA,MAFK,2CAAH,sDAKnBwQ,GAAyB,uCAAG,WAAOC,GAAP,qBAAAtL,EAAA,sEACX9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBe,mBAAqB,qBAAuBoI,IADlF,OAK9B,IAJI/K,EAD0B,OAE1BgL,EAAUhL,EAAO1F,KAAKA,KAEtBA,EAAO,GACFoN,EAAI,EAAGA,EAAIsD,EAAQ5D,OAAQM,IAChCpN,EAAKH,KAAK,CACN+F,IAAKwH,EACLuD,UAAWD,EAAQtD,GAAGuD,UACtBC,iBAAkBF,EAAQtD,GAAGwD,iBAC7BC,aAAcH,EAAQtD,GAAGyD,aACzBpG,UAAWiG,EAAQtD,GAAG3C,YAXA,yBAcvB6E,EAAgBtP,IAdO,2CAAH,sDAiBzB8Q,GAAoB,uCAAG,WAAOlQ,GAAP,SAAAuE,EAAA,+EAEf9E,IAAM,CACRC,OAAQ,OACRC,IAAK+G,EAAqBW,wBAC1BjI,KAAM,CACFoK,aAAcpL,EAAMsF,MAAMC,OAAO6F,aACjCmF,OAAQ3O,KAPK,+EAWdG,IAAQC,MAAM,wCAXA,wDAAH,sDAmC1B,OACI,gCACI,8BACI,cAAC,IAAD,CAAQY,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QAvBxC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,cAsBlB,uBAEJ,uBAAM,uBACN,qBAAK0B,MAAO,CAAEC,MAAO,OAAQ+I,OAAQ,QAASwG,SAAU,UAAxD,SACI,qBAAKvG,IAAI,aAAaxD,IAAKkJ,GAAU3O,MAAO,CAAEC,MAAO,OAAQwP,UAAW,YAE5E,uBACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKnO,KAAM,GAAX,SACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,SAA8BoI,MAElC,cAAC,IAAD,CAAKpJ,KAAM,GAAX,SACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,SAA8B8H,UAItC,cAAC,IAAD,IACA,eAAC,IAAW3H,KAAZ,2BACkB6L,KAElB,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAKhN,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,sBAAuC0H,OAE3C,cAAC,IAAD,CAAK1I,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,uBAAwC4H,OAE5C,cAAC,IAAD,CAAK5I,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,uBAEI,cAAC,KAAD,CAA2BtC,MAAO,CAAEuC,WAAY,MAAQmN,eAAgB1B,EAAQpB,SAAU2C,IAA7E7E,WAIzB,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAKpJ,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,yBAA0C4L,OAE9C,cAAC,IAAD,CAAK5M,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,yBAA0C6L,GAAwB,0BAEtE,eAAC,IAAD,CAAK7M,KAAM,EAAX,UACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,qBAAsCmM,IAAkC,mBACxE,cAAC,KAAD,CACIkB,UAAQ,EACRhP,aAAc8N,IAAkC,UAI5D,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAKnN,KAAM,GAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,4BAA6C8L,OAEjD,cAAC,IAAD,CAAK9M,KAAM,GAAX,SACI,qBAAKtB,MAAO,CAAEyI,MAAO,SAArB,SACI,cAAC,IAAD,CAAQpI,KAAK,UAAUa,QAjEhB,WACvB,OAAOzD,EAAMY,QAAQC,KAAK,2BAA6Bb,EAAMsF,MAAMC,OAAO6F,eAgE1D,2CAIZ,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKvH,KAAM,GAAX,SACI,cAAC,IAAD,CAAQjB,KAAK,UAAUa,QApFT,WAC1B,OAAOzD,EAAMY,QAAQC,KAAK,mCAAqCb,EAAMsF,MAAMC,OAAO6F,eAmFtE,iCAEJ,cAAC,IAAD,CAAKvH,KAAM,GAAX,SACI,qBAAKtB,MAAO,CAAEyI,MAAO,SAArB,SACI,cAAC,IAAD,CAAQpI,KAAK,UAAUa,QApFjB,WACtB,OAAOzD,EAAMY,QAAQC,KAAK,0BAA4Bb,EAAMsF,MAAMC,OAAO6F,eAmFzD,sCAIZ,uBAAM,uBACN,gCACI,cAAC,IAAWpG,KAAZ,mCACA,cAAC,KAAMmN,MAAP,CACIhD,SAAU,SAAAjN,GAAC,OAAIsP,GAA0BtP,EAAEzC,OAAO2B,QADtD,SAIQ+O,EAAiBlF,KAAI,SAACC,EAAMC,GAAP,OACjB,cAAC,KAAMiH,OAAP,CACIhR,MAAO8J,EAAKuG,iBADhB,SAIKvG,EAAKmH,oBAFDlH,QAOrB,uBACA,cAAC,KAAD,CACI1I,UAAQ,EACR6P,QAAS,CACL,CACIhQ,MAAO,YACPiQ,UAAW,aAEf,CACIjQ,MAAO,mBACPiQ,UAAW,oBAEf,CACIjQ,MAAO,aACPiQ,UAAW,YACXC,OAAQ,SAAA/G,GAAS,OAAI,qBAAKD,IAAI,WAAWxD,IAAKyD,EAAWlJ,MAAO,CAAEC,MAAO,aAE7E,CACIF,MAAO,SACPiQ,UAAW,eACXC,OAAQ,SAAAX,GAAY,OAAI,cAAC,IAAD,CAAQjP,KAAK,UAAUa,QAAS,kBAzHnD,SAACoO,GAC1B,OAAO7R,EAAMY,QAAQC,KAAK,6BAA+BgR,GAwHyBY,CAAqBZ,IAA3D,uBAGhCa,WAAYrC,WCnGjBsC,GAvHQ,SAAC3S,GAEpB,MAAkCC,mBAAS,IAA3C,mBAAOwQ,EAAP,KAAkBxK,EAAlB,KACA,EAAkChG,mBAAS,IAA3C,mBAAOyQ,EAAP,KAAkBxK,EAAlB,KACA,EAAkDjG,mBAAS,GAA3D,mBAAO2S,EAAP,KAA0BC,EAA1B,KACA,EAAgD5S,mBAAS,IAAzD,mBAAO6S,EAAP,KAAyBC,EAAzB,KACA,EAA8C9S,mBAAS,IAAvD,mBAAO+S,EAAP,KAAwBC,EAAxB,KACA,EAAgChT,mBAAS,IAAzC,mBAAOiT,EAAP,KAAiBC,EAAjB,KACA,EAAkClT,mBAAS,GAA3C,mBAAOmT,EAAP,KAAkBC,EAAlB,KACA,EAAoCpT,mBAAS,GAA7C,mBAAOqT,EAAP,KAAmBC,EAAnB,KACA,EAAgCtT,mBAAS,IAAzC,mBAAOiR,EAAP,KAAiBC,EAAjB,KAEA1Q,oBAAS,sBAAC,4BAAA0F,EAAA,+EAEiBqN,EAAkBxT,EAAMsF,MAAMC,OAAOsM,cAFtD,OAEEnL,EAFF,OAIFT,EAAaS,EAAOF,YACpBN,EAAaQ,EAAOD,YACpBoM,EAAqBnM,EAAO+M,qBAC5BV,EAAoBrM,EAAO2L,oBAC3BY,EAAmBvM,EAAOkL,kBAC1BuB,EAAYzM,EAAOiL,WACnB0B,EAAa3M,EAAOgN,YACpBH,EAAc7M,EAAO0E,cACrB+F,EAAYzK,EAAO+E,WAZjB,2EAcK1J,IAAQC,MAAM,KAAED,UAdrB,0DAgBP,IAEH,IAAMyR,EAAiB,uCAAG,WAAO3B,GAAP,eAAA1L,EAAA,sEACH9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBiB,qBAAuB,iBAAmBsI,IADxF,cAClBnL,EADkB,yBAEfA,EAAO1F,KAAKA,MAFG,2CAAH,sDAavB,OACI,gCACI,8BACI,cAAC,IAAD,CAAQ4B,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QAXxC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,6BAA+ByS,IAUjD,uBAEJ,uBAAM,uBACN,cAAC,IAAW1O,MAAZ,CAAkBC,MAAO,EAAzB,SAA6BqO,IAC7B,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKrP,KAAM,GAAX,SACI,qBACI2H,IAAI,aACJxD,IAAKkJ,EACL3O,MAAO,CAAEC,MAAO,WAGxB,cAAC,IAAD,CAAKqB,KAAM,GAAX,SACI,eAAC,IAAWmB,KAAZ,2BACkBgO,UAI1B,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAKnP,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,4BACoBiO,OAGxB,cAAC,IAAD,CAAKjP,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,yBACiB4L,OAGrB,cAAC,IAAD,CAAK5M,KAAM,EAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,8BACsB6L,GAAwB,wBAItD,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAK7M,KAAM,GAAX,SACI,eAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,qBACauO,OAGjB,cAAC,IAAD,CAAKvP,KAAM,GAAX,SACI,qBACItB,MAAO,CAAEyI,MAAO,SADpB,SAGI,eAAC,IAAWpG,MAAZ,CAAkBC,MAAO,EAAzB,qBACa+N,GAAwC,gBACjD,cAAC,KAAD,CACIV,UAAQ,EACRhP,aAAc0P,GAAwC,cAM1E,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAD,CAAK/O,KAAM,GAAX,SACI,cAAC,IAAD,CAAQjB,KAAK,UAAb,4BAEJ,cAAC,IAAD,CAAKiB,KAAM,GAAX,SACI,qBAAKtB,MAAO,CAAEyI,MAAO,SAArB,SACI,cAAC,IAAD,CAAQpI,KAAK,UAAUa,QAxEhB,WACvB,OAAOzD,EAAMY,QAAQC,KAAK,2BAA6Bb,EAAMsF,MAAMC,OAAOsM,eAuE1D,0CCsDT8B,GArKK,SAAC3T,GAEjB,MAAgDC,mBAAS,IAAzD,mBAAO2T,EAAP,KAAyBC,EAAzB,KAEA,EAA4C5T,mBAAS,MAArD,mBAAO6T,EAAP,KAAuBC,EAAvB,KACA,EAAgC9T,mBAAS,IAAzC,mBAAOiT,EAAP,KAAiBC,EAAjB,KACA,EAAkClT,mBAAS,GAA3C,mBAAOmT,EAAP,KAAkBC,EAAlB,KACA,EAA8CpT,mBAAS,IAAvD,mBAAO+S,EAAP,KAAwBC,EAAxB,KACA,EAAkChT,mBAAS,MAA3C,mBAAOoM,EAAP,KAAkBC,EAAlB,KAEA7L,oBAAS,sBAAC,4BAAA0F,EAAA,sEACiB6N,EAAoBhU,EAAMsF,MAAMC,OAAO6F,cADxD,OACF6I,EADE,OAENJ,EAAoBI,GAFd,2CAGP,IAEH,IAAMD,EAAmB,uCAAG,WAAO5I,GAAP,eAAAjF,EAAA,+EAEA9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBgB,4BAA8B,iBAAmB8B,IAFlG,cAEhBP,EAFgB,yBAGbA,EAAQ7J,KAAKA,MAHA,yDAKb,IALa,yDAAH,sDAoBnB2N,EAAY,uCAAG,WAAOzM,GAAP,iBAAAiE,EAAA,yDACjBjE,EAAEwB,iBADe,WAKToQ,GACAZ,GACAE,GACAJ,GACA3G,GATS,wBAWLrL,EAAO,CACPyQ,iBAAkBqC,EAClBnC,UAAWuB,EACXQ,WAAYN,EACZxB,iBAAkBoB,GAfb,SAkBW3R,IAAM,CAAEC,OAAQ,OAAQC,IAAK+G,EAAqBc,kBAAmBpI,KAAMA,IAlBtF,cAkBLiO,EAlBK,gBAmBW5N,IAAM,CACtBC,OAAQ,OACRC,IAAK+G,EAAqBmB,uBAAyB,OAASwF,EAAQjO,KAAK6Q,aACzE7Q,KAAMqL,EACN6C,QAAS,CAAE,eAAgB,uCAvBtB,kBA0BGlO,KAAKW,QA1BR,wBA2BLI,IAAQJ,QAAQ,6BA3BX,kBA4BE3B,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAO6F,eA5BvE,iCA8BErJ,IAAQC,MAAM,gDA9BhB,yDAiCFD,IAAQC,MAAM,yCAjCZ,mFAoCND,IAAQC,MAAM,gDApCR,0DAAH,sDAwClB,OACI,gCACI,8BACI,cAAC,IAAD,CAAQY,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QA/CxC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAO6F,eA8CpE,uBAEJ,uBAAM,uBACN,cAAC,IAAWxG,MAAZ,CAAkBC,MAAO,EAAzB,+BACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKhB,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBACA,cAAC,IAAD,CACInC,KAAK,QACLC,KAAK,OACLF,GAAG,WACHH,MAAO,CAAEC,MAAO,OAChB2M,SAAU,SAAAjN,GAAC,OAAIiR,EAAYjR,EAAEzC,OAAO2B,QACpCgC,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBACA,cAAC,IAAD,CACInC,KAAK,QACLE,OAAO,IACPD,KAAK,SACLF,GAAG,YACHH,MAAO,CAAEC,MAAO,MAAOsB,UAAW,SAClCqL,SAAU,SAAAjN,GAAC,OAAImR,EAAanR,EAAEzC,OAAO2B,QACrCgC,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,sBACA,cAAC,KAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,iBACHyM,SAAU,SAAA/N,GAAK,OAAI2S,EAAkB3S,IACrCgC,UAAQ,EALZ,SAQQwQ,EAAiB3I,KAAI,SAACC,EAAMC,GAAP,OACjB,cAAC,KAAOiE,OAAR,CAAehO,MAAO8J,EAAKuG,iBAA3B,SACKvG,EAAKmH,oBADwClH,cAQtE,uBAAM,uBACN,cAAC,IAAWvG,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,8BACA,cAAC,IAAM0K,SAAP,CACI9M,GAAG,kBACH+M,KAAM,EACNN,SAAU,SAAAjN,GAAC,OAAI+Q,EAAmB/Q,EAAEzC,OAAO2B,QAC3CgC,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,UACI,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAzB,wBACA,cAAC,IAAD,CACIzB,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACL8M,OAAO,iCACPhN,GAAG,YACHyM,SA1HE,SAACjN,GACvB,IAAIyN,EAAOzN,EAAEzC,OAAOmQ,MAAM,GACtBC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASJ,GACzBrD,EAAauD,WA0HL,uBAAM,uBACN,cAAC,IAAD,CACIjN,KAAK,UACLD,KAAK,QACLY,OAAK,EACLC,SAAS,SACTC,QAASkL,EALb,sCCjEDuF,GAtFa,SAAClU,GAEzB,MAAwCC,mBAAS,IAAjD,mBAAOkU,EAAP,KAAqBC,EAArB,KACA,EAAwBnU,mBAAS,IAAjC,mBAAOyH,EAAP,KAAa2M,EAAb,KAEMC,EAAe,uCAAG,WAAO5M,GAAP,qBAAAvB,EAAA,mEAEZuB,EAFY,gCAGQrG,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBU,4BAA8B,YAActB,IAHrG,OAOZ,IAJImD,EAHQ,OAIRoD,EAAWpD,EAAQ7J,KAAKA,KAExBA,EAAO,GACFoN,EAAI,EAAGA,EAAIH,EAASH,OAAQM,IACjCpN,EAAKH,KAAK,CAAEO,MAAO6M,EAASG,GAAGmG,2BAA4B3N,IAAKwH,IAEpEgG,EAAgBpT,GAVJ,6IAAH,sDAqBfwT,EAAS,uCAAG,sBAAArO,EAAA,yDACdlC,QAAQC,IAAIwD,GADE,UAGNA,EAHM,iCAIarG,IAAM,CACrBC,OAAQ,OACRC,IAAK+G,EAAqBM,kBAC1B5H,KAAM,CACFoK,aAAcpL,EAAMsF,MAAMC,OAAO6F,aACjCiH,mBAAoB3K,KATtB,kBAaK1G,KAAKW,QAbV,wBAcFI,IAAQJ,QAAQ,iCAdd,kBAeK3B,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAO6F,eAf1E,iCAiBKrJ,IAAQC,MAAM,gDAjBnB,yDAoBCD,IAAQC,MAAM,oCApBf,mFAuBHD,IAAQC,MAAM,gDAvBX,0DAAH,qDA2Bf,OACI,gCACI,8BACI,cAAC,IAAD,CAAQY,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QAlCxC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAO6F,eAiCpE,uBAEJ,uBAAM,uBACN,cAAC,IAAWxG,MAAZ,CAAkBC,MAAO,EAAzB,mCACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKhB,KAAM,GAAX,SACI,cAAC,KAAD,CACItB,MAAO,CAAEC,MAAO,OAChBE,GAAG,eACH4M,QAAS6E,EACT1M,SAAU6M,EACVnF,SAAU,SAACzH,GAAD,OAAU2M,EAAQ3M,IAC5B6H,SAAU,SAAC7H,GAAD,OAAU2M,EAAQ3M,QAGpC,cAAC,IAAD,CAAK7D,KAAM,GAAX,SACI,cAAC,IAAD,CACItB,MAAO,CAAEC,MAAO,OAChBI,KAAK,UACLa,QAAS+Q,EAHb,0B,oBCmPLC,GA1TM,SAACzU,GAGlB,MAAwCC,mBAAS,IAAjD,mBAAO8L,EAAP,KAAqBC,EAArB,KACA,EAAsD/L,mBAAS,IAA/D,mBAAOgM,EAAP,KAA4BC,EAA5B,KAGA,EAA4CjM,mBAAS,GAArD,mBAAOkM,EAAP,KAAuBC,EAAvB,KACA,EAAgCnM,mBAAS,MAAzC,mBAAOsM,EAAP,KAAiBC,EAAjB,KACA,EAAkCvM,mBAAS,MAA3C,mBAAOwM,EAAP,KAAkBC,EAAlB,KACA,EAA4CzM,mBAAS,MAArD,mBAAO0M,EAAP,KAAuBC,EAAvB,KACA,EAAsB3M,mBAAS,MAA/B,mBAAO4M,EAAP,KAAYC,EAAZ,KACA,EAAsB7M,mBAAS,MAA/B,mBAAO8M,EAAP,KAAYC,EAAZ,KACA,EAAwC/M,mBAAS,IAAjD,mBAAOgN,EAAP,KAAqB8D,EAArB,KACA,EAAsC9Q,mBAAS,IAA/C,oBAAO2L,GAAP,MAAoB8I,GAApB,MACA,GAAgCzU,mBAAS,IAAzC,qBAAOiR,GAAP,MAAiBC,GAAjB,MAEA1Q,oBAAS,sBAAC,8BAAA0F,EAAA,+EAEiBwO,GAAW3U,EAAMsF,MAAMC,OAAO6F,cAF/C,cAEE1E,EAFF,gBAGwBwG,KAHxB,OAGEC,EAHF,OAIFnB,EAAgBmB,EAAcnM,KAAKA,MAEnCoL,EAAkB1F,EAAOmI,uBACzBsC,GAAYzK,EAAO+E,WACnBe,EAAY9F,EAAOqI,WACnBrC,EAAahG,EAAOsI,YACpBpC,EAAkBlG,EAAOoI,iBACzBhC,EAAOpG,EAAOmG,KACdG,EAAOtG,EAAOqG,KACdgE,EAAgBrK,EAAOiF,gBACvB+I,GAAehO,EAAOmF,uBAdpB,2EAkBK9J,IAAQC,MAAM,KAAED,UAlBrB,0DAoBP,IAEH,IAAM4S,GAAU,uCAAG,WAAOvJ,GAAP,eAAAjF,EAAA,sEACI9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBQ,qBAAuB,iBAAmBsC,IAD/F,cACX1E,EADW,yBAERA,EAAO1F,KAAKA,MAFJ,2CAAH,sDAKV6M,GAAsB,uCAAG,WAAOnG,GAAP,uBAAAvB,EAAA,kEAGO,MAA1BuB,EAAKA,EAAKoG,OAAS,IAAuB,KAATpG,EAHd,wDAMfqG,EAAQrG,EAAKsG,QAAQ,IAAK,OANX,SAOC3M,IAAM,CAAEC,OAAQ,MAAOC,IAAK,iDAAmDwM,EAAQ,QAAUnO,EAAIE,cAPtG,OAWnB,IAJI+K,EAPe,OAQfoD,EAAWpD,EAAQ7J,KAAKkN,aAAa,GAAGC,UAExCnN,EAAO,GACFoN,EAAI,EAAGA,EAAIH,EAASH,OAAQM,IACjCpN,EAAKH,KAAK,CAAEO,MAAO6M,EAASG,GAAGC,KAAMzH,IAAKwH,IAE9ClC,EAAuBlL,GAdJ,8IAAH,sDAqBtBkM,GAAe,uCAAG,4BAAA/G,EAAA,sEACA9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBS,8BADjD,cAChB8B,EADgB,yBAEbA,GAFa,2CAAH,qDAKfyD,GAAW,uCAAG,WAAOC,GAAP,mBAAApI,EAAA,kEAEwB,MAAhCoI,EAAQA,EAAQT,OAAS,IAA0B,KAAZS,EAF/B,wDAKJC,EAAWD,EAAQP,QAAQ,IAAK,OAL5B,SAMY3M,IAAM,CAAEC,OAAQ,MAAOC,IAAK,iDAAmDiN,EAAW,QAAU5O,EAAIE,cANpH,UAMJ+K,EANI,OASgB,KAFpBoD,EAAWpD,EAAQ7J,KAAKkN,aAAa,GAAGC,WAE/BL,OATL,iBAUJlB,EAAkB2B,GAClBzB,EAAOmB,EAAS,GAAGQ,MAAMC,YAAY,IACrC1B,EAAOiB,EAAS,GAAGQ,MAAMC,YAAY,IAZjC,gMAAH,sDA2BXkG,GAAiB,uCAAG,WAAO1S,GAAP,mBAAAiE,EAAA,sEAEdwJ,EAAOzN,EAAEzC,OAAOmQ,MAAM,IACtBC,EAAW,IAAIC,UACVC,OAAO,QAASJ,GAJP,SAMCtO,IAAM,CACrBC,OAAQ,OACRC,IAAK+G,EAAqBa,uBAAyB,OAASnJ,EAAMsF,MAAMC,OAAO6F,aAC/EpK,KAAM6O,EACNX,QAAS,CAAE,eAAgB,uCAVb,YAMdxI,EANc,QAaP1F,KAAKW,QAbE,wBAcdI,IAAQJ,QAAQ,2BAdF,kBAePwP,GAAYzK,EAAO1F,KAAKe,UAfjB,iCAiBPA,IAAQC,MAAM,yCAjBP,mFAoBXD,IAAQC,MAAM,KAAED,UApBL,0DAAH,sDAwBjB4M,GAAY,uCAAG,WAAOzM,GAAP,eAAAiE,EAAA,yDACjBjE,EAAEwB,iBADe,WAKTyI,GACAc,GACArB,IACAe,GACAE,GACAE,GACAR,GACAE,GACAyE,IAbS,wBAgBLlQ,EAAO,CACPoK,aAAcpL,EAAMsF,MAAMC,OAAO6F,aACjCyD,sBAAuB1C,EACvBR,eAAgBsB,EAChBpB,sBAAuBD,GACvBkD,gBAAiBnC,EACjBE,IAAKA,EACLE,IAAKA,EACLgC,UAAWxC,EACXyC,WAAYvC,EACZhB,UAAWyF,IA1BN,SA6BU7P,IAAM,CAAEC,OAAQ,OAAQC,IAAK+G,EAAqBY,iBAAkBlI,KAAMA,IA7BpF,kBA8BEA,KAAKW,QA9BP,wBA+BLI,IAAQJ,QAAQ,gCA/BX,kBAgCE3B,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAO6F,eAhCvE,iCAkCErJ,IAAQC,MAAM,mCAlChB,yDAsCFD,IAAQC,MAAM,iCAtCZ,mFAyCND,IAAQC,MAAM,gDAzCR,0DAAH,sDA6ClB,OACI,gCACI,8BACI,cAAC,IAAD,CAAQY,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QA5ExC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAO6F,eA2EpE,uBAEJ,uBAAM,uBACN,cAAC,IAAWxG,MAAZ,CAAkBC,MAAO,EAAzB,4BACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKhB,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,4BAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,eACHtB,MAAO6L,EACPkC,SAAU,SAAAjN,GAAC,OAAI6O,EAAgB7O,EAAEzC,OAAO2B,QACxCgC,UAAQ,OAGhB,cAAC,IAAD,CAAKS,KAAM,IACX,eAAC,IAAD,CAAKA,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,gCAGA,cAAC,KAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,iBACHyM,SAAU,SAAA/N,GAAK,OAAIgL,EAAkBhL,IACrCA,MAAO+K,EACP/I,UAAQ,EANZ,SASQ2I,EAAad,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,KAAOiE,OAAR,CAAehO,MAAO8J,EAAK2D,sBAA3B,SACK3D,EAAKmE,yBAD6ClE,cAQ3E,uBAAM,uBACN,cAAC,IAAWvG,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,gDAGA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKjB,KAAM,GAAX,SAEQgJ,GAAOE,GACP,qBACIxK,MAAO,CAAEC,MAAO,OAChBwF,IAAG,gEAA2D6E,EAA3D,YAAkEE,EAAlE,kDAA+GF,EAA/G,YAAsHE,EAAtH,oBAAqInN,EAAIE,aAC5I0L,IAAI,UAIhB,eAAC,IAAD,CAAK3H,KAAM,GAAX,UACI,cAAC,KAAD,CACIlB,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,qBACH4M,QAASrD,EACTxE,SAAUoG,GACV0B,SAAUjB,GACVlL,UAAQ,IAEZ,uBAAM,uBACN,eAAC,IAAWwB,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,QAAjD,8BAA6E6H,GAAkC,MAC/G,eAAC,IAAW/H,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,QAAjD,uBAAsE+H,GAAY,MAClF,eAAC,IAAWjI,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,QAAjD,wBAAuEiI,GAAY,YAG3F,uBAAM,uBACN,eAAC,IAAD,WACI,cAAC,IAAWnI,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,mCAGA,cAAC,IAAM0K,SAAP,CACI9M,GAAG,cACH+M,KAAM,EACNrO,MAAOwK,GACPuD,SAAU,SAAAjN,GAAC,OAAIwS,GAAexS,EAAEzC,OAAO2B,QACvCgC,UAAQ,OAGhB,uBAAM,uBACN,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,qBAAK2H,IAAI,MAAMxD,IAAKkJ,GAAU3O,MAAO,CAAEC,MAAO,SAC9C,cAAC,IAAWoC,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,6BAGA,cAAC,IAAD,CACI1B,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACL8M,OAAO,iCACPhN,GAAG,YACHyM,SAAUyF,QAGlB,eAAC,IAAD,CAAK/Q,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBAGA,cAAC,KAAD,CACI1B,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,WACHtB,MAAOyT,KAAOtI,EAAU,YACxB4C,SAAU,SAACa,EAAMC,GAAP,OAAsBzD,EAAYyD,SAGpD,eAAC,IAAD,CAAKpM,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBAGA,cAAC,KAAD,CACI1B,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,YACHtB,MAAOyT,KAAOpI,EAAW,YACzB0C,SAAU,SAACa,EAAMC,GAAP,OAAsBvD,EAAauD,YAIzD,uBAAM,uBACN,cAAC,IAAD,CACIrN,KAAK,UACLD,KAAK,QACLY,OAAK,EACLC,SAAS,SACTC,QAASkL,GALb,2BCvGDmG,GAxMM,SAAC9U,GAElB,MAAgDC,mBAAS,IAAzD,mBAAO2T,EAAP,KAAyBC,EAAzB,KAEA,EAA4C5T,mBAAS,MAArD,mBAAO6T,EAAP,KAAuBC,EAAvB,KACA,EAAgC9T,mBAAS,IAAzC,mBAAOiT,EAAP,KAAiBC,EAAjB,KACA,EAAkClT,mBAAS,GAA3C,mBAAOmT,EAAP,KAAkBC,EAAlB,KACA,EAA8CpT,mBAAS,IAAvD,mBAAO+S,EAAP,KAAwBC,EAAxB,KACA,EAAgChT,mBAAS,IAAzC,mBAAOiR,EAAP,KAAiBC,EAAjB,KAEA1Q,oBAAS,sBAAC,8BAAA0F,EAAA,+EAEiB4O,EAAW/U,EAAMsF,MAAMC,OAAOsM,cAF/C,cAEEnL,EAFF,OAIFqN,EAAkBrN,EAAO+K,kBACzB0B,EAAYzM,EAAOiL,WACnB0B,EAAa3M,EAAOgN,YACpBT,EAAmBvM,EAAOkL,kBAC1BT,EAAYzK,EAAO+E,WARjB,UAUqBuI,EAAoBtN,EAAO0E,cAVhD,QAUEkG,EAVF,OAWFuC,EAAoBvC,GAXlB,2EAaKvP,IAAQC,MAAM,KAAED,UAbrB,0DAeP,IAEH,IAAMiS,EAAmB,uCAAG,WAAO5I,GAAP,eAAAjF,EAAA,+EAEA9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBgB,4BAA8B,iBAAmB8B,IAFlG,cAEhBP,EAFgB,yBAGbA,EAAQ7J,KAAKA,MAHA,yDAKb,IALa,yDAAH,sDASnB+T,EAAU,uCAAG,WAAOlD,GAAP,eAAA1L,EAAA,sEACI9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBiB,qBAAuB,iBAAmBsI,IAD/F,cACXnL,EADW,yBAERA,EAAO1F,KAAKA,MAFJ,2CAAH,sDASV4T,EAAiB,uCAAG,WAAO1S,GAAP,mBAAAiE,EAAA,sEAEdwJ,EAAOzN,EAAEzC,OAAOmQ,MAAM,IACtBC,EAAW,IAAIC,UACVC,OAAO,QAASJ,GAJP,SAMCtO,IAAM,CACrBC,OAAQ,OACRC,IAAK+G,EAAqBmB,uBAAyB,OAASzJ,EAAMsF,MAAMC,OAAOsM,aAC/E7Q,KAAM6O,EACNX,QAAS,CAAE,eAAgB,uCAVb,YAMdxI,EANc,QAaP1F,KAAKW,QAbE,wBAcdI,IAAQJ,QAAQ,2BAdF,kBAePwP,EAAYzK,EAAO1F,KAAKe,UAfjB,iCAiBPA,IAAQC,MAAM,yCAjBP,mFAoBXD,IAAQC,MAAM,gDApBH,0DAAH,sDAwBjB2M,EAAY,uCAAG,WAAOzM,GAAP,eAAAiE,EAAA,yDACjBjE,EAAEwB,iBADe,WAIToQ,GACAZ,GACAE,GACAJ,GACA9B,GARS,wBAWLlQ,EAAO,CACP6Q,aAAc7R,EAAMsF,MAAMC,OAAOsM,aACjCJ,iBAAkBqC,EAClBnC,UAAWuB,EACXQ,WAAYN,EACZxB,iBAAkBoB,EAClBvH,UAAWyF,GAjBN,SAoBU7P,IAAM,CAAEC,OAAQ,OAAQC,IAAK+G,EAAqBkB,iBAAkBxI,KAAMA,IApBpF,kBAqBEA,KAAKW,QArBP,wBAsBLI,IAAQJ,QAAQ,gCAtBX,kBAuBE3B,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAOsM,eAvBvE,iCAyBE9P,IAAQC,MAAM,mCAzBhB,yDA6BFD,IAAQC,MAAM,iCA7BZ,mFAgCND,IAAQC,MAAM,gDAhCR,0DAAH,sDAoClB,OACI,gCACI,8BACI,cAAC,IAAD,CAAQY,KAAK,UAAUL,MAAO,CAAEyI,MAAO,QAAUvH,QAnExC,WACjB,OAAOzD,EAAMY,QAAQC,KAAK,6BAA+Bb,EAAMsF,MAAMC,OAAOsM,eAkEpE,uBAEJ,uBAAM,uBACN,cAAC,IAAWjN,MAAZ,CAAkBC,MAAO,EAAzB,oCACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAKhB,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBACA,cAAC,IAAD,CACInC,KAAK,QACLC,KAAK,OACLF,GAAG,WACHH,MAAO,CAAEC,MAAO,OAChB2M,SAAU,SAAAjN,GAAC,OAAIiR,EAAYjR,EAAEzC,OAAO2B,QACpCA,MAAO8R,EACP9P,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBACA,cAAC,IAAD,CACInC,KAAK,QACLE,OAAO,IACPD,KAAK,SACLF,GAAG,YACHH,MAAO,CAAEC,MAAO,MAAOsB,UAAW,SAClCqL,SAAU,SAAAjN,GAAC,OAAImR,EAAanR,EAAEzC,OAAO2B,QACrCA,MAAOgS,EACPhQ,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,sBACA,cAAC,KAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,iBACHyM,SAAU,SAAA/N,GAAK,OAAI2S,EAAkB3S,IACrCA,MAAO0S,EACP1Q,UAAQ,EANZ,SASQwQ,EAAiB3I,KAAI,SAACC,EAAMC,GAAP,OACjB,cAAC,KAAOiE,OAAR,CAAehO,MAAO8J,EAAKuG,iBAA3B,SACKvG,EAAKmH,oBADwClH,cAQtE,uBAAM,uBACN,cAAC,IAAWvG,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,8BACA,cAAC,IAAM0K,SAAP,CACI9M,GAAG,kBACH+M,KAAM,EACNN,SAAU,SAAAjN,GAAC,OAAI+Q,EAAmB/Q,EAAEzC,OAAO2B,QAC3CA,MAAO4R,EACP5P,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,UACI,eAAC,IAAD,CAAKS,KAAM,EAAX,UACI,qBAAKmE,IAAKkJ,EAAU1F,IAAI,MAAMjJ,MAAO,CAAEC,MAAO,SAC9C,cAAC,IAAWoC,MAAZ,CAAkBC,MAAO,EAAzB,wBACA,cAAC,IAAD,CACIzB,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACL8M,OAAO,iCACPhN,GAAG,YACHyM,SAAUyF,SAItB,uBAAM,uBACN,cAAC,IAAD,CACIhS,KAAK,UACLD,KAAK,QACLY,OAAK,EACLC,SAAS,SACTC,QAASkL,EALb,mCCxFDqG,GAlGQ,WAEnB,MAAgC/U,mBAAS,MAAzC,mBAAOgV,EAAP,KAAiBC,EAAjB,KACA,EAAwCjV,mBAAS,MAAjD,mBAAOkV,EAAP,KAAqBC,EAArB,KACA,EAAkCnV,mBAAS,MAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KAEA5J,oBAAS,sBAAC,4BAAA0F,EAAA,+EAEwBmE,IAFxB,OAEEC,EAFF,OAIF2K,EAAY3K,EAAc8K,WAC1BD,EAAgB7K,EAAc+K,eAC9BjL,EAAaE,EAAcC,YANzB,yEASKzI,IAAQC,MAAM,KAAED,UATrB,yDAWP,IAEH,IAAMuI,EAAgB,uCAAG,4BAAAnE,EAAA,sEACF9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBC,mBAAqB,kBAAoB7H,aAAaC,QAAQ,kBAD7G,cACjB+F,EADiB,yBAEdA,EAAO1F,KAAKA,MAFE,2CAAH,qDAKhB2N,EAAY,uCAAG,WAAOzM,GAAP,eAAAiE,EAAA,yDACjBjE,EAAEwB,iBADe,WAMTuR,GACAE,GACA/K,GARS,wBAWLpJ,EAAO,CACPqU,UAAWJ,EACXK,cAAeH,EACf3K,WAAYJ,GAdP,SAiBU/I,IAAM,CAAEC,OAAQ,OAAQC,IAAK+G,EAAqBE,uBAAwBxH,KAAMA,IAjB1F,kBAkBEA,KAAKW,QAlBP,iBAmBLI,IAAQJ,QAAQ,8BAnBX,iDAqBEI,IAAQC,MAAM,mCArBhB,yDAyBFD,IAAQC,MAAM,iCAzBZ,mFA6BND,IAAQC,MAAM,gDA7BR,0DAAH,sDAiClB,OACI,gCACI,cAAC,IAAW4C,MAAZ,CAAkBC,MAAO,EAAzB,0CACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAWD,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,WACHtB,MAAO6T,EACP9F,SAAU,SAAAjN,GAAC,OAAIgT,EAAYhT,EAAEzC,OAAO2B,QACpCgC,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAWwB,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,2BAGA,cAAC,IAAM0K,SAAP,CACI9M,GAAG,eACH+M,KAAM,EACNrO,MAAO+T,EACPhG,SAAU,SAAAjN,GAAC,OAAIkT,EAAgBlT,EAAEzC,OAAO2B,QACxCgC,UAAQ,IAEZ,uBAAM,uBACN,cAAC,IAAD,CACIR,KAAK,UACLD,KAAK,QACLY,OAAK,EACLC,SAAS,SACTC,QAASkL,EALb,2BC8JD4G,GAlPK,WAEhB,MAAkCtV,mBAAS,MAA3C,mBAAOmE,EAAP,KAAkBuB,EAAlB,KACA,EAAgC1F,mBAAS,MAAzC,mBAAOoE,EAAP,KAAiBuB,EAAjB,KAEA,EAA8C3F,mBAAS,MAAvD,mBAAOuV,EAAP,KAAwBC,EAAxB,KACA,EAA8CxV,mBAAS,MAAvD,mBAAOyV,EAAP,KAAwBC,EAAxB,KAEA,EAAgC1V,mBAAS,MAAzC,mBAAO2V,EAAP,KAAiBC,EAAjB,KACA,EAAgC5V,mBAAS,MAAzC,mBAAO6V,EAAP,KAAiBC,EAAjB,KAEA,EAAsC9V,mBAAS,MAA/C,mBAAO+V,EAAP,KAAoBC,EAApB,KACA,EAAoDhW,mBAAS,MAA7D,mBAAOiW,EAAP,KAA2BC,EAA3B,KAEA,EAAkClW,mBAAS,MAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KACA,EAAkCpK,mBAAS,MAA3C,oBAAO8F,GAAP,MAAkBC,GAAlB,MAEAvF,oBAAS,sBAAC,4BAAA0F,EAAA,+EAEwBmE,KAFxB,OAEE8L,EAFF,OAIFzQ,EAAayQ,EAAc3R,YAC3BmB,EAAYwQ,EAAc1R,WAE1B+Q,EAAmBW,EAAcnV,eACjC0U,EAAmBS,EAAcnV,eAEjC4U,EAAYO,EAAczR,OAC1BoR,EAAYK,EAAczR,OAE1B0F,EAAa+L,EAAc5L,YAC3BxE,GAAaoQ,EAAc7P,YAdzB,2EAiBKxE,IAAQC,MAAM,KAAED,UAjBrB,0DAmBP,IAEH,IAAMuI,GAAgB,uCAAG,4BAAAnE,EAAA,sEACF9E,IAAM,CAAEC,OAAQ,MAAOC,IAAK+G,EAAqBC,mBAAqB,kBAAoB7H,aAAaC,QAAQ,kBAD7G,cACjB+F,EADiB,yBAEdA,EAAO1F,KAAKA,MAFE,2CAAH,qDAKhBqV,GAAkB,uCAAG,WAAOnU,GAAP,mBAAAiE,EAAA,sEAEfwJ,EAAOzN,EAAEzC,OAAOmQ,MAAM,IACtBC,EAAW,IAAIC,UACVC,OAAO,QAASJ,GAJN,SAMAtO,IAAM,CACrBC,OAAQ,OACRC,IAAK+G,EAAqBI,sBAAwB,OAAS0B,EAC3DpJ,KAAM6O,EACNX,QAAS,CAAE,eAAgB,uCAVZ,YAMfxI,EANe,QAaR1F,KAAKW,QAbG,wBAcfI,IAAQJ,QAAQ,4BAdD,kBAeRqE,GAAaU,EAAO1F,KAAKe,UAfjB,iCAiBRA,IAAQC,MAAM,0CAjBN,mFAqBZD,IAAQC,MAAM,gDArBF,0DAAH,sDAyBlB2M,GAAY,uCAAG,WAAOzM,GAAP,eAAAiE,EAAA,yDACjBjE,EAAEwB,iBADe,WAKTU,GACAC,GACAmR,GACAE,GACAE,GACAE,GACAE,GACAE,GACA9L,GAbS,oBAeL4L,IAAgBE,EAfX,yCAgBEnU,IAAQC,MAAM,gFAhBhB,cAmBDhB,EAAO,CACPyD,WAAYL,EACZM,UAAWL,EACXiS,kBAAmBd,EACnBe,kBAAmBb,EACnBc,UAAWZ,EACXa,UAAWX,EACXxV,SAAU0V,EACVxL,WAAYJ,EACZ7D,WAAYR,IA5BX,UA+Bc1E,IAAM,CACrBC,OAAQ,OACRC,IAAK+G,EAAqBG,uBAC1BzH,KAAMA,IAlCL,mBAoCMA,KAAKW,QApCX,0CAqCMI,IAAQJ,QAAQ,+BArCtB,iCAuCMI,IAAQC,MAAM,mCAvCpB,yDA4CFD,IAAQC,MAAM,iCA5CZ,mFA+CND,IAAQC,MAAM,KAAEG,SAASnB,KAAKe,UA/CxB,0DAAH,sDAmDlB,OACI,gCACI,cAAC,IAAW6C,MAAZ,CAAkBC,MAAO,EAAzB,oCACA,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAWD,MAAZ,CAAkBC,MAAO,EAAzB,wBACA,sBAAKtC,MAAO,CAAEuB,UAAW,UAAzB,UAGQiC,GACI,cAAC,IAAD,CAAQpD,KAAM,IAAKqF,IAAKjC,KACxB,cAAC,IAAD,CAAQpD,KAAM,IAAKiF,KAAM,cAAC9E,EAAA,EAAD,MAEjC,uBAAM,uBACN,cAAC,IAAD,CACIM,UAAQ,EACRT,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,OACL8M,OAAO,iCACPhN,GAAG,YACHyM,SAAUkH,QAIlB,uBAAM,uBACN,eAAC,IAAD,WACI,eAAC,IAAD,CAAKxS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,wBACA,cAAC,IAAD,CACInC,KAAK,QACLC,KAAK,OACLF,GAAG,YACHH,MAAO,CAAEC,MAAO,OAChB2M,SAAU,SAAAjN,GAAC,OAAIyD,EAAazD,EAAEzC,OAAO2B,QACrCA,MAAOgD,EACPhB,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,uBACA,cAAC,IAAD,CACInC,KAAK,QACLC,KAAK,OACLF,GAAG,WACHH,MAAO,CAAEC,MAAO,OAChB2M,SAAU,SAAAjN,GAAC,OAAI0D,EAAY1D,EAAEzC,OAAO2B,QACpCA,MAAOiD,EACPjB,UAAQ,UAIpB,uBAAM,uBACN,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,2BACA,cAAC,IAAD,CACInC,KAAK,QACLC,KAAK,QACLI,YAAY,cACZN,GAAG,eACHH,MAAO,CAAEC,MAAO,OAChB2M,SAAU,SAAAjN,GAAC,OAAIyT,EAAmBzT,EAAEzC,OAAO2B,QAC3CA,MAAOsU,EACPtS,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,0BACA,cAAC,IAAD,CACInC,KAAK,QACLC,KAAK,MACLmC,QAAQ,mCACR/B,YAAY,iBACZN,GAAG,QACHH,MAAO,CAAEC,MAAO,OAChB2M,SAAU,SAAAjN,GAAC,OAAI6T,EAAY7T,EAAEzC,OAAO2B,QACpCA,MAAO0U,EACP1S,UAAQ,UAIpB,uBAAM,uBACN,eAAC,IAAD,WACI,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,0BAGA,cAAC,IAAMzB,SAAP,CACIV,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBE,GAAG,cACHM,YAAY,eACZ5B,MAAO4U,EACP7G,SAAU,SAAAjN,GAAC,OAAI+T,EAAe/T,EAAEzC,OAAO2B,QACvCgC,UAAQ,OAGhB,eAAC,IAAD,CAAKS,KAAM,GAAX,UACI,cAAC,IAAWe,MAAZ,CAAkBC,MAAO,EAAGtC,MAAO,CAAEuC,WAAY,OAAjD,mCAGA,cAAC,IAAD,CACInC,KAAK,QACLJ,MAAO,CAAEC,MAAO,OAChBI,KAAK,WACLF,GAAG,qBACHM,YAAY,uBACZ5B,MAAO8U,EACP/G,SAAU,SAAAjN,GAAC,OAAIiU,EAAsBjU,EAAEzC,OAAO2B,QAC9CgC,UAAQ,UAIpB,uBAAM,uBACN,cAAC,IAAD,CAAQR,KAAK,UAAUD,KAAK,QAAQY,OAAK,EAACC,SAAS,SAASC,QAASkL,GAArE,2BC9HD+H,GA5FM,SAAC1W,GAClB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAM,qBAAU,WACAC,aAAaC,QAAQ,cACvBD,aAAaC,QAAQ,iBACrBX,EAAMY,QAAQC,KAAK,oBAExB,IA4CH,OACI,8BACI,cAAC,IAAD,CAAMuB,IAAI,aAAaC,SAAUnC,EAAjC,SACI,eAAC,IAAD,CAAQqC,MAAO,CAAE4F,UAAW,SAA5B,UACI,cAAC,IAAOwO,MAAR,CAAcC,aAAW,EAAzB,SACI,eAAC,IAAD,CAAMC,KAAK,SAASC,MAAM,OAAOrT,QAtB7B,SAACvB,GACrB,OAAQA,EAAE0E,KACN,IAAK,IACD5G,EAAMY,QAAQC,KAAK,aACnB,MACJ,IAAK,IACDb,EAAMY,QAAQC,KAAK,4BACnB,MACJ,IAAK,IACDb,EAAMY,QAAQC,KAAK,yBACnB,MACJ,IAAK,IAnCTV,GAAW,GAEXkB,IAAM,CACFC,OAAQ,OACRC,IAAK+G,EAAqBtJ,WAC1BwC,iBAAiB,IAClBC,MAAK,SAAAC,GAEJ,OADAvB,GAAW,GACPuB,EAAIV,KAAKW,SACTjB,aAAaqW,WAAW,aACxBrW,aAAaqW,WAAW,gBACxBhV,IAAQJ,QAAQD,EAAIV,KAAKe,SAClB/B,EAAMY,QAAQC,KAAK,mBAEnBkB,IAAQC,MAAMN,EAAIV,KAAKe,YAGnCE,OAAM,SAAAC,GAEL,OADA/B,GAAW,GACJ4B,IAAQC,MAAME,EAAEC,SAASnB,KAAKe,cA2BzB,UACI,cAAC,IAAK8E,KAAN,CAAmBe,KAAM,cAACoP,GAAA,EAAD,IAAzB,uBAAe,KACf,cAAC,IAAKnQ,KAAN,CAAmBe,KAAM,cAACzC,EAAA,EAAD,IAAzB,oBAAe,KACf,cAAC,IAAK0B,KAAN,CAAmBe,KAAM,cAACqP,GAAA,EAAD,IAAzB,0BAAe,KACf,cAAC,IAAKpQ,KAAN,CAAmBe,KAAM,cAACsP,GAAA,EAAD,IAAzB,0BAAe,KACf,cAAC,IAAKrQ,KAAN,CAAmBe,KAAM,cAACuP,GAAA,EAAD,IAAzB,4BAAe,KACf,eAAC,IAAKC,QAAN,CAAc9U,MAAM,UAAqBsF,KAAM,cAAC9E,EAAA,EAAD,IAA/C,UACI,cAAC,IAAK+D,KAAN,0BAAe,KACf,cAAC,IAAKA,KAAN,oBAAe,OAFe,aAM1C,eAAC,IAAD,CAAQvH,UAAU,cAAlB,UACI,cAAC,IAAO2I,QAAR,CAAgB1F,MAAO,CAAEiF,OAAQ,UAAjC,SACI,sBAAKlI,UAAU,yBAAyBiD,MAAO,CAAE2F,QAAS,GAAIC,UAAW,KAAzE,UACI,cAAC,IAAD,CAAOkP,KAAK,YAAYC,OAAK,EAACC,UAAWxN,KACzC,cAAC,IAAD,CAAOsN,KAAK,qCAAqCC,OAAK,EAACC,UAAWzL,KAClE,cAAC,IAAD,CAAOuL,KAAK,0CAA0CC,OAAK,EAACC,UAAWrH,KACvE,cAAC,IAAD,CAAOmH,KAAK,0CAA0CC,OAAK,EAACC,UAAW5E,KACvE,cAAC,IAAD,CAAO0E,KAAK,uCAAuCC,OAAK,EAACC,UAAW5D,KACpE,cAAC,IAAD,CAAO0D,KAAK,gDAAgDC,OAAK,EAACC,UAAWrD,KAC7E,cAAC,IAAD,CAAOmD,KAAK,wCAAwCC,OAAK,EAACC,UAAW9C,KACrE,cAAC,IAAD,CAAO4C,KAAK,wCAAwCC,OAAK,EAACC,UAAWzC,KACrE,cAAC,IAAD,CAAOuC,KAAK,2BAA2BC,OAAK,EAACC,UAAWvC,KACxD,cAAC,IAAD,CAAOqC,KAAK,wBAAwBC,OAAK,EAACC,UAAWhC,UAG7D,cAAC,EAAD,eCtETiC,OArBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOH,KAAK,kBAAkBC,OAAK,EAACC,UAAWxX,IAC/C,cAAC,IAAD,CAAOsX,KAAK,qBAAqBC,OAAK,EAACC,UAAWpT,IAClD,cAAC,IAAD,CAAOkT,KAAK,4BAA4BC,OAAK,EAACC,UAAWtS,IACzD,cAAC,IAAD,CAAOoS,KAAK,kCAAkCC,OAAK,EAACC,UAAWnS,IAC/D,cAAC,IAAD,CAAOiS,KAAK,aAAaE,UAAW9R,IAEpC,cAAC,IAAD,CAAO4R,KAAK,iBAAiBC,OAAK,EAACC,UAAW7N,IAC9C,cAAC,IAAD,CAAO2N,KAAK,oBAAoBC,OAAK,EAACC,UAAW3N,IACjD,cAAC,IAAD,CAAOyN,KAAK,2BAA2BC,OAAK,EAACC,UAAW1N,IACxD,cAAC,IAAD,CAAOwN,KAAK,iCAAiCC,OAAK,EAACC,UAAWzN,IAC9D,cAAC,IAAD,CAAOuN,KAAK,YAAYE,UAAWb,KACnC,cAAC,IAAD,CAAUnX,GAAG,yBC1BrBkY,IAASjF,OAAO,cAAC,GAAD,IAASkF,SAASC,eAAe,W","file":"static/js/main.c16f364a.chunk.js","sourcesContent":["const IP_URL = \"http://144.34.175.242/api/customer_api/\";\r\n\r\n// const IP_URL = \"http://localhost:7000/customer_api/\";\r\n\r\nconst CUSTOMER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    REGISTER_URL: IP_URL + \"customer_register/\",\r\n    LOGIN_URL: IP_URL + \"customer_login/\",\r\n    LOGOUT_URL: IP_URL + \"customer_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"customer_password_reset/\",\r\n    GET_CUSTOMER_DETAIL: IP_URL + \"customer_detail\",\r\n    UPDATE_CUSTOMER_PROFILE: IP_URL + \"customer_update_profile\",\r\n    CUSTOMER_UPLOAD_AVATAR: IP_URL + \"customer_upload_avatar\"\r\n};\r\n\r\nexport default CUSTOMER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/customer_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: CUSTOMER_SERVICE_PATH.DEFAULT_URL }} target=\"_blank\">\r\n                Charlie's Food Shop\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","const KEY = {\r\n    reCAPTCHA_site_key: '6LcaKtIZAAAAAK6RCXm1AoJfpgWNWo7wUzwzUZA-',\r\n    BingMap_key: 'AiJHkuJR5r6HBFPmJ7tu1mxwEGVWLymQ1CmIVRwXBTdpvx5ImKJMOVDr2_qRfgro'\r\n}\r\n\r\nexport default KEY;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('customerSessionId')) {\r\n            return props.history.push('/customer');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('customerSessionId', res.data.customerSessionId);\r\n                    localStorage.setItem('customerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/customer');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/customer/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/customer/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerLogIn;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Customer Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/customer/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/customer/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPassword;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, message, Spin, Input, Avatar, Row, Col, Divider, Menu, Dropdown } from 'antd';\r\nimport { ShoppingCartOutlined, UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport '../../static/css/customer_css/header.css';\r\nimport '../../static/css/customer_css/content.css';\r\n\r\nimport Footer from './components/Footer';\r\n\r\nconst CustomerIndex = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [customerId, setCustomerId] = useState(null);\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [emailAddress, setEmailAddress] = useState(null);\r\n    const [phone, setPhone] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n    const [createdAt, setCreatedAt] = useState(null);\r\n    const [updatedAt, setUpdatedAt] = useState(null);\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            if (!(localStorage.getItem('customerSessionId') &&\r\n                localStorage.getItem('customerEmail'))) {\r\n                props.history.push('/customer/login');\r\n            }\r\n\r\n            let customerDetail = await getCustomerDetail(localStorage.getItem('customerEmail'));\r\n            setCustomerId(customerDetail.customer_id);\r\n            setFirstName(customerDetail.first_name);\r\n            setLastName(customerDetail.last_name);\r\n            setEmailAddress(customerDetail.email_address);\r\n            setPhone(customerDetail.phone);\r\n            setAvatarUrl(customerDetail.avatar_url);\r\n            setCreatedAt(customerDetail.created_at);\r\n            setUpdatedAt(customerDetail.updated_at);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getCustomerDetail = async (email_address) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_CUSTOMER_DETAIL + \"?email_address=\" + email_address });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('customerSessionId');\r\n                localStorage.removeItem('customerEmail');\r\n                message.success(res.data.message);\r\n                return props.history.push('/customer/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleSearch = (text) => {\r\n        console.log(text);\r\n    }\r\n\r\n    const handleCartOnclick = () => {\r\n        console.log('Cart clicked');\r\n    }\r\n    const handleMenuClick = (e) => {\r\n        console.log(e.key);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={handleMenuClick}>\r\n            <Menu.Item key=\"1\" style={{ borderBottom: '1px solid black' }}>Current Order</Menu.Item>\r\n            <Menu.Item key=\"2\">Order History</Menu.Item>\r\n            <Menu.Item key=\"3\">Profile</Menu.Item>\r\n            <Menu.Item key=\"4\">My Favourite</Menu.Item>\r\n            <Menu.Item key=\"5\">Message</Menu.Item>\r\n            <Menu.Item key=\"6\">Help</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <div className=\"header\">\r\n                    <Row type=\"flex\" justify=\"center\">\r\n                        <Col xs={24} sm={24} md={8} lg={12} xl={12}>\r\n                            <Link to=\"/customer/\">\r\n                                <span className=\"header-logo\">Welcome to Online Food Shop</span>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={16} lg={10} xl={8}>\r\n                            <Input.Search\r\n                                allowClear\r\n                                enterButton\r\n                                style={{ width: '60%', margin: '1% auto' }}\r\n                                placeholder=\"Search what you want\"\r\n                                onSearch={handleSearch}\r\n                            />\r\n                            <span\r\n                                onClick={handleCartOnclick}\r\n                                style={{ cursor: 'pointer', margin: '3%' }}\r\n                            >\r\n                                <Avatar\r\n                                    size=\"large\"\r\n                                    icon={<ShoppingCartOutlined />}\r\n\r\n                                />\r\n                            </span>\r\n                            <span\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                                <Dropdown\r\n                                    overlay={menu}\r\n                                    placement=\"bottomCenter\"\r\n                                >\r\n                                    {\r\n                                        avatarUrl ?\r\n                                            <Avatar size=\"large\" src={avatarUrl} /> :\r\n                                            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n                                    }\r\n                                </Dropdown>\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Layout className=\"comm-main\">\r\n                    <Layout.Content style={{ margin: '10px 5%' }}>\r\n                        <div style={{ padding: 24, minHeight: 360 }}>\r\n                            here\r\n                        </div>\r\n                    </Layout.Content>\r\n                </Layout>\r\n                <Divider />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerIndex;\r\n\r\n/*\r\n\r\n</span>\r\n\r\n\r\n\r\n*/\r\n","const IP_URL = \"http://144.34.175.242/api/manager_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/manager_food_shop_api/\";\r\nconst IP_URL_FOOD_ITEM = \"http://144.34.175.242/api/manager_food_item_api/\";\r\n\r\n// const IP_URL = \"http://localhost:7000/manager_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/manager_food_shop_api/\";\r\n// const IP_URL_FOOD_ITEM = \"http://localhost:7000/manager_food_item_api/\";\r\nconst MANAGER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    REGISTER_URL: IP_URL + \"manager_register/\",\r\n    LOGIN_URL: IP_URL + \"manager_login/\",\r\n    LOGOUT_URL: IP_URL + \"manager_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"manager_password_reset/\",\r\n    GET_MANAGER_DETAIL: IP_URL + \"manager_detail\",\r\n    UPDATE_MANAGER_ACCOUNT: IP_URL + \"manager_update_account\",\r\n    UPDATE_MANAGER_PROFILE: IP_URL + \"manager_update_profile\",\r\n    MANAGER_UPLOAD_AVATAR: IP_URL + \"manager_upload_avatar\",\r\n\r\n    ADD_FOOD_SHOP_URL: IP_URL_FOOD_SHOP + \"add_food_shop\",\r\n    ADD_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"add_food_category\",\r\n    GET_FOOD_SHOP_LIST: IP_URL_FOOD_SHOP + \"get_food_shops_by_manager\",\r\n    GET_FOOD_SHOP_DETAIL: IP_URL_FOOD_SHOP + \"get_food_shops_by_food_shop\",\r\n    GET_FOOD_SHOP_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_all_food_shop_category\",\r\n    GET_ALL_MATCH_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"get_match_food_category\",\r\n    UPDATE_FOOD_SHOP_ACTIVE: IP_URL_FOOD_SHOP + \"update_food_shop_active\",\r\n    UPDATE_FOOD_SHOP: IP_URL_FOOD_SHOP + \"update_food_shop\",\r\n    UPLOAD_FOOD_SHOP_IMAGE: IP_URL_FOOD_SHOP + \"upload_food_shop_image\",\r\n\r\n    ADD_FOOD_ITEM_URL: IP_URL_FOOD_ITEM + \"add_food_item\",\r\n    GET_FOOD_ITEM_LIST: IP_URL_FOOD_ITEM + \"get_all_food_item_by_category\",\r\n    GET_FOOD_ITEM_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_food_category_by_food_shop\",\r\n    GET_FOOD_ITEM_DETAIL: IP_URL_FOOD_ITEM + \"get_food_item_by_food_item_id\",\r\n    UPDATE_FOOD_ITEM: IP_URL_FOOD_ITEM + \"update_food_item\",\r\n    UPLOAD_FOOD_ITEM_IMAGE: IP_URL_FOOD_ITEM + \"upload_food_item_image\"\r\n}\r\n\r\nexport default MANAGER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/manager_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: MANAGER_SERVICE_PATH.DEFAULT_URL }} target=\"_blank\">\r\n                Charlie's Food Shop for Managers\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('sessionId')) {\r\n            return props.history.push('/manager');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('sessionId', res.data.sessionId);\r\n                    localStorage.setItem('managerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/manager');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop for Managers\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/manager/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/manager/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerLogIn;","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Manager Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/manager/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/manager/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPassword;","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopList = (props) => {\r\n\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            let first_name = managetDetail.data.data.first_name;\r\n            let last_name = managetDetail.data.data.last_name\r\n            let manager_id = managetDetail.data.data.manager_id;\r\n            setManagerId(manager_id);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + first_name + \" \" + last_name);\r\n\r\n            let list_result = await getFoodShopList(manager_id);\r\n            setFoodShopList(list_result.data.data);\r\n\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    const handleAddFoodShop = () => {\r\n        if (managerId) {\r\n            return props.history.push('/manager/add_food_shop/' + managerId);\r\n        } else {\r\n            return message.error('Manager ID not exist.');\r\n        }\r\n    }\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result;\r\n    }\r\n\r\n    const getFoodShopList = async (manager_id) => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_LIST + \"?manager_id=\" + manager_id });\r\n        return results;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        {helloTitle}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'right' }} type=\"primary\" onClick={handleAddFoodShop}>ADD NEW FOOD SHOP</Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            {\r\n\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/manager/food_shop_detail/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={item.food_shop_description} />\r\n                            </Card>\r\n\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst AddFoodShop = (props) => {\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const foodShopName = useRef();\r\n    const description = useRef();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            getLocation();\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            try {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    setLat(position.coords.latitude);\r\n                    setLon(position.coords.longitude);\r\n                    updateAddressByCoord(position.coords.latitude, position.coords.longitude);\r\n                }, e => {\r\n                    return message.error(e.message);\r\n                });\r\n            } catch (e) {\r\n                return message.error('Sorry, something wrong happened when getting location.');\r\n            }\r\n        } else {\r\n            return message.error('Sorry, your location can not be get.');\r\n        }\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateAddressByCoord = async (lat, lon) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: `http://dev.virtualearth.net/REST/v1/Locations/${lat},${lon}?key=${KEY.BingMap_key}` });\r\n            let _results = results.data.resourceSets[0].resources;\r\n            if (_results.length === 1) {\r\n                setWorkingAddress(_results[0].name);\r\n            } else {\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodShopName.current.state.value &&\r\n                description.current.resizableTextArea.props.value &&\r\n                shopCategoryId &&\r\n                imageFile &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime) {\r\n\r\n                let data = {\r\n                    manager_id: props.match.params.manager_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName.current.state.value,\r\n                    food_shop_description: description.current.resizableTextArea.props.value,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_SHOP_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + axios_1.data.food_shop_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Shop Successful!');\r\n                    return props.history.push('/manager/');\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Please Add New Food Shop Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            ref={foodShopName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            defaultValue={1}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        ref={description}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodShop;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Switch, Radio, Table, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopDetail = (props) => {\r\n\r\n    const [foodCategoryList, setFoodCategoryList] = useState([]);\r\n    const [itemDataList, setItemDataList] = useState([]);\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [closeTime, setCloseTime] = useState('');\r\n    const [openTime, setOpenTime] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodShopCategory, setFoodShopCategory] = useState('');\r\n    const [foodShopDescription, setFoodShopDescription] = useState('');\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [foodShopRating, setFoodShopRating] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [workingAddress, setWorkingAddress] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodShopDetail(props.match.params.food_shop_id);\r\n            let listResult = await getFoodCategoryList(props.match.params.food_shop_id)\r\n\r\n            setImageUrl(result.image_url);\r\n            setActive(result.active);\r\n            setCloseTime(result.close_time);\r\n            setOpenTime(result.open_time);\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodShopCategory(result.food_shop_category_name);\r\n            setFoodShopDescription(result.food_shop_description);\r\n            setFoodShopName(result.food_shop_name);\r\n            setFoodShopRating(result.food_shop_rating);\r\n            setWorkingAddress(result.working_address);\r\n            setFoodCategoryList(listResult);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodShopDetail = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getFoodCategoryList = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleFoodItemTableChange = async (food_category_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_LIST + \"?food_category_id=\" + food_category_id });\r\n        let _result = result.data.data;\r\n\r\n        let data = [];\r\n        for (let i = 0; i < _result.length; i++) {\r\n            data.push({\r\n                key: i,\r\n                food_name: _result[i].food_name,\r\n                food_description: _result[i].food_description,\r\n                food_item_id: _result[i].food_item_id,\r\n                image_url: _result[i].image_url\r\n            });\r\n        }\r\n        return setItemDataList(data);\r\n    }\r\n\r\n    const handleOnActiveChange = async (checked) => {\r\n        try {\r\n            await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP_ACTIVE,\r\n                data: {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    active: checked\r\n                }\r\n            });\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to update active status');\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    const handleAddItemCategory = () => {\r\n        return props.history.push('/manager/add_food_item_category/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAddFoodItem = () => {\r\n        return props.history.push('/manager/add_food_item/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleFoodItemDetail = (food_item_id) => {\r\n        return props.history.push('/manager/food_item_detail/' + food_item_id);\r\n    }\r\n\r\n    const handleEditFoodShop = () => {\r\n        return props.history.push('/manager/edit_food_shop/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                <img alt=\"shop-image\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n            </div>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={3} >{foodShopName}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={4} >{workingAddress}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider />\r\n            <Typography.Text>\r\n                Description: {foodShopDescription}\r\n            </Typography.Text>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Open At: {openTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Close At: {closeTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        On Active:\r\n                        <Switch key={foodShopName} style={{ marginLeft: '5%' }} defaultChecked={active} onChange={handleOnActiveChange} />\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Created At: {createdAt}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Updated At: {updatedAt ? updatedAt : 'No Updation Record'}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Rating: {foodShopRating ? foodShopRating : 'Not Available'}</Typography.Title>\r\n                    <Rate\r\n                        disabled\r\n                        defaultValue={foodShopRating ? foodShopRating : 0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} >Shop Category: {foodShopCategory}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodShop}>Edit Food Shop Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\" onClick={handleAddItemCategory}>Add Item Category</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleAddFoodItem}>Add New Food Item</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <div>\r\n                <Typography.Text>Food Item Category: </Typography.Text>\r\n                <Radio.Group\r\n                    onChange={e => handleFoodItemTableChange(e.target.value)}\r\n                >\r\n                    {\r\n                        foodCategoryList.map((item, index) => (\r\n                            <Radio.Button\r\n                                value={item.food_category_id}\r\n                                key={index}\r\n                            >\r\n                                {item.food_category_name}\r\n                            </Radio.Button>\r\n                        ))\r\n                    }\r\n                </Radio.Group>\r\n                <br />\r\n                <Table\r\n                    bordered\r\n                    columns={[\r\n                        {\r\n                            title: 'Food Name',\r\n                            dataIndex: 'food_name'\r\n                        },\r\n                        {\r\n                            title: 'Food Description',\r\n                            dataIndex: 'food_description'\r\n                        },\r\n                        {\r\n                            title: 'Food Image',\r\n                            dataIndex: 'image_url',\r\n                            render: image_url => <img alt=\"food_img\" src={image_url} style={{ width: '100px' }} />\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            dataIndex: 'food_item_id',\r\n                            render: food_item_id => <Button type=\"primary\" onClick={() => handleFoodItemDetail(food_item_id)}>Detail</Button>\r\n                        }\r\n                    ]}\r\n                    dataSource={itemDataList}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodItemDetail = (props) => {\r\n\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodAverageRating, setFoodAverageRating] = useState(0);\r\n    const [foodCategoryName, setFoodCategoryName] = useState('');\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodItemDetail(props.match.params.food_item_id);\r\n\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodAverageRating(result.food_average_rating);\r\n            setFoodCategoryName(result.food_category_name);\r\n            setFoodDescription(result.food_description);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodShopId(result.food_shop_id);\r\n            setImageUrl(result.image_url);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + foodShopId);\r\n    }\r\n\r\n    const handleEditFoodItem = () => {\r\n        return props.history.push('/manager/edit_food_item/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>{foodName}</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <img\r\n                        alt=\"food_image\"\r\n                        src={imageUrl}\r\n                        style={{ width: '80%' }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Text>\r\n                        Description: {foodDescription}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Food Category: {foodCategoryName}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Created At: {createdAt}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Last Updated At: {updatedAt ? updatedAt : 'Not Available'}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        Price: ${foodPrice}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div\r\n                        style={{ float: 'right' }}\r\n                    >\r\n                        <Typography.Title level={5}>\r\n                            Rating: {foodAverageRating ? foodAverageRating : 'Not Available'}\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodAverageRating ? foodAverageRating : 0}\r\n                            />\r\n                        </Typography.Title>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\">See Comments</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodItem}>Edit Food Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItemDetail;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        let resultList = await getItemCategoryList(props.match.params.food_shop_id);\r\n        setItemCategoryList(resultList);\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageFile\r\n            ) {\r\n                let data = {\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_ITEM_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + axios_1.data.food_item_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Item Successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Add New Food Item</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Add New Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItem;\r\n","import React, { useState } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItemCategory = (props) => {\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const getCategoryList = async (text) => {\r\n        try {\r\n            if (text) {\r\n                let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_ALL_MATCH_FOOD_CATEGORY + \"?content=\" + text });\r\n                let _results = results.data.data;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].food_category_example_name, key: i });\r\n                }\r\n                setCategoryList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAdd = async () => {\r\n        console.log(text);\r\n        try {\r\n            if (text) {\r\n                let result = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.ADD_FOOD_CATEGORY,\r\n                    data: {\r\n                        food_shop_id: props.match.params.food_shop_id,\r\n                        food_category_name: text\r\n                    }\r\n                });\r\n\r\n                if (result.data.success) {\r\n                    message.success('Add food category successful!');\r\n                    return props.history.push(\"/manager/food_shop_detail/\" + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Fail to add item category, please try again');\r\n                }\r\n            } else {\r\n                return message.error('Please complete the information');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Fail to add item category, please try again');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>Add New Food Category</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <AutoComplete\r\n                        style={{ width: '80%' }}\r\n                        id=\"categoryText\"\r\n                        options={categoryList}\r\n                        onSearch={getCategoryList}\r\n                        onChange={(text) => setText(text)}\r\n                        onSelect={(text) => setText(text)}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button\r\n                        style={{ width: '50%' }}\r\n                        type=\"primary\"\r\n                        onClick={handleAdd}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItemCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst EditFoodShop = (props) => {\r\n\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldData(props.match.params.food_shop_id);\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            setShopCategoryId(result.food_shop_category_id);\r\n            setImageUrl(result.image_url);\r\n            setOpenTime(result.open_time);\r\n            setCloseTime(result.close_time);\r\n            setWorkingAddress(result.working_address);\r\n            setLat(result.lat);\r\n            setLon(result.lon);\r\n            setFoodShopName(result.food_shop_name);\r\n            setDescription(result.food_shop_description);\r\n\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getOldData = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + props.match.params.food_shop_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                shopCategoryId &&\r\n                foodShopName &&\r\n                description &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName,\r\n                    food_shop_description: description,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food shop successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Edit Food Shop</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            value={foodShopName}\r\n                            onChange={e => setFoodShopName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            value={shopCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img alt=\"img\" src={imageUrl} style={{ width: '60%' }} />\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            value={moment(openTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            value={moment(closeTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodShop;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldDate(props.match.params.food_item_id);\r\n\r\n            setFoodCategoryId(result.food_category_id);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodDescription(result.food_description);\r\n            setImageUrl(result.image_url);\r\n\r\n            let listResult = await getItemCategoryList(result.food_shop_id);\r\n            setItemCategoryList(listResult);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const getOldDate = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + props.match.params.food_item_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_item_id: props.match.params.food_item_id,\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_ITEM, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food item successful!');\r\n                    return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Edit Food Item Profile</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            value={foodName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            value={foodPrice}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            value={foodCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    value={foodDescription}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img src={imageUrl} alt=\"img\" style={{ width: '60%' }} />\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Edit Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Input, Button, Typography, Form, Divider, message } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst SettingAccount = () => {\r\n\r\n    const [clientId, setClientId] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(null);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            setClientId(managetDetail.client_id);\r\n            setClientSecret(managetDetail.client_secret);\r\n            setManagerId(managetDetail.manager_id);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            if (\r\n                clientId &&\r\n                clientSecret &&\r\n                managerId\r\n            ) {\r\n\r\n                let data = {\r\n                    client_id: clientId,\r\n                    client_secret: clientSecret,\r\n                    manager_id: managerId\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_ACCOUNT, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update account successful!');\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Paypal Detail Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client ID\r\n                </Typography.Title>\r\n                <Input\r\n                    size=\"large\"\r\n                    style={{ width: '80%' }}\r\n                    id=\"clientId\"\r\n                    value={clientId}\r\n                    onChange={e => setClientId(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client Secret\r\n                </Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"clientSecret\"\r\n                    rows={5}\r\n                    value={clientSecret}\r\n                    onChange={e => setClientSecret(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingAccount;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditProfile = () => {\r\n\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n\r\n    const [oldEmailAddress, setOldEmailAddress] = useState(null);\r\n    const [newEmailAddress, setNewEmailAddress] = useState(null);\r\n\r\n    const [oldPhone, setOldPhone] = useState(null);\r\n    const [newPhone, setNewPhone] = useState(null);\r\n\r\n    const [newPassword, setNewPassword] = useState(null);\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(null);\r\n\r\n    const [managerId, setManagerId] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managerDetail = await getManagerDetail();\r\n\r\n            setFirstName(managerDetail.first_name);\r\n            setLastName(managerDetail.last_name);\r\n\r\n            setOldEmailAddress(managerDetail.email_address);\r\n            setNewEmailAddress(managerDetail.email_address);\r\n\r\n            setOldPhone(managerDetail.phone);\r\n            setNewPhone(managerDetail.phone);\r\n\r\n            setManagerId(managerDetail.manager_id);\r\n            setAvatarUrl(managerDetail.avatar_url);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleChangeAvatar = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.MANAGER_UPLOAD_AVATAR + \"?id=\" + managerId,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Avatar Successful');\r\n                return setAvatarUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Avatar fail, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                firstName &&\r\n                lastName &&\r\n                oldEmailAddress &&\r\n                newEmailAddress &&\r\n                oldPhone &&\r\n                newPhone &&\r\n                newPassword &&\r\n                confirmNewPassword &&\r\n                managerId\r\n            ) {\r\n                if (newPassword !== confirmNewPassword) {\r\n                    return message.error(\"Confirm password is not same as the new password you set. Please try again!\");\r\n                } else {\r\n\r\n                    let data = {\r\n                        first_name: firstName,\r\n                        last_name: lastName,\r\n                        old_email_address: oldEmailAddress,\r\n                        new_email_address: newEmailAddress,\r\n                        old_phone: oldPhone,\r\n                        new_phone: newPhone,\r\n                        password: newPassword,\r\n                        manager_id: managerId,\r\n                        avatar_url: avatarUrl\r\n                    }\r\n\r\n                    let result = await axios({\r\n                        method: 'post',\r\n                        url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_PROFILE,\r\n                        data: data\r\n                    });\r\n                    if (result.data.success) {\r\n                        return message.success('Update profile successful!');\r\n                    } else {\r\n                        return message.error('Update fail, pleaes try again!');\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.response.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Profile Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5}>Set Avatar</Typography.Title>\r\n                <div style={{ textAlign: 'center' }}>\r\n\r\n                    {\r\n                        avatarUrl ?\r\n                            <Avatar size={128} src={avatarUrl} /> :\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                    }\r\n                    <br /><br />\r\n                    <Input\r\n                        required\r\n                        size=\"large\"\r\n                        style={{ width: '90%' }}\r\n                        type=\"file\"\r\n                        accept=\"image/jpeg,image/jpg,image/png\"\r\n                        id=\"imageFile\"\r\n                        onChange={handleChangeAvatar}\r\n                    />\r\n\r\n                </div>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>First Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                            value={firstName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Last Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                            value={lastName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Email Address</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            placeholder=\"abc@abc.com\"\r\n                            id=\"emailAddress\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewEmailAddress(e.target.value)}\r\n                            value={newEmailAddress}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Phone Number</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"tel\"\r\n                            pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                            placeholder=\"(111) 111-1111\"\r\n                            id=\"phone\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewPhone(e.target.value)}\r\n                            value={newPhone}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            New Password\r\n                        </Typography.Title>\r\n                        <Input.Password\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"newPassword\"\r\n                            placeholder=\"New Password\"\r\n                            value={newPassword}\r\n                            onChange={e => setNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Confirm Your Password\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"password\"\r\n                            id=\"confirmNewPassword\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            value={confirmNewPassword}\r\n                            onChange={e => setConfirmNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, message, Spin } from 'antd';\r\nimport {\r\n    UserOutlined, CoffeeOutlined,\r\n    MailOutlined, BellOutlined, CalendarOutlined, SettingOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport Footer from './components/Footer';\r\nimport FoodShopList from './components/FoodShopList';\r\nimport AddFoodShop from './components/AddFoodShop';\r\nimport FoodShopDetail from './components/FoodShopDetail';\r\nimport FoodItemDetail from './components/FoodItemDetail';\r\nimport AddFoodItem from './components/AddFoodItem';\r\nimport AddFoodItemCategory from './components/AddFoodItemCategory';\r\nimport EditFoodShop from './components/EditFoodShop';\r\nimport EditFoodItem from './components/EditFoodItem';\r\nimport SettingAccount from './components/SettingAccount';\r\nimport EditProfile from './components/EditProfile';\r\n\r\nconst ManagerIndex = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!(localStorage.getItem('sessionId') &&\r\n            localStorage.getItem('managerEmail'))) {\r\n            props.history.push('/manager/login');\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('sessionId');\r\n                localStorage.removeItem('managerEmail');\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '1':\r\n                props.history.push('/manager/');\r\n                break;\r\n            case '5':\r\n                props.history.push('/manager/setting_account');\r\n                break;\r\n            case '6':\r\n                props.history.push('/manager/edit_profile');\r\n                break;\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <Layout.Sider collapsible>\r\n                        <Menu mode=\"inline\" theme=\"dark\" onClick={handleMenuClick}>\r\n                            <Menu.Item key=\"1\" icon={<CoffeeOutlined />}>Food Shops</Menu.Item>\r\n                            <Menu.Item key=\"2\" icon={<MailOutlined />}>Message</Menu.Item>\r\n                            <Menu.Item key=\"3\" icon={<BellOutlined />}>Current Order</Menu.Item>\r\n                            <Menu.Item key=\"4\" icon={<CalendarOutlined />}>Order History</Menu.Item>\r\n                            <Menu.Item key=\"5\" icon={<SettingOutlined />}>Setting Account</Menu.Item>\r\n                            <Menu.SubMenu title=\"Account\" key=\"sub1\" icon={<UserOutlined />}>\r\n                                <Menu.Item key=\"6\">Edit Profile</Menu.Item>\r\n                                <Menu.Item key=\"7\">Logout</Menu.Item>\r\n                            </Menu.SubMenu>\r\n                        </Menu>\r\n                    </Layout.Sider>\r\n                    <Layout className=\"site-layout\">\r\n                        <Layout.Content style={{ margin: '0 16px' }}>\r\n                            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                                <Route path=\"/manager/\" exact component={FoodShopList} />\r\n                                <Route path=\"/manager/add_food_shop/:manager_id\" exact component={AddFoodShop} />\r\n                                <Route path=\"/manager/food_shop_detail/:food_shop_id\" exact component={FoodShopDetail} />\r\n                                <Route path=\"/manager/food_item_detail/:food_item_id\" exact component={FoodItemDetail} />\r\n                                <Route path=\"/manager/add_food_item/:food_shop_id\" exact component={AddFoodItem} />\r\n                                <Route path=\"/manager/add_food_item_category/:food_shop_id\" exact component={AddFoodItemCategory} />\r\n                                <Route path=\"/manager/edit_food_shop/:food_shop_id\" exact component={EditFoodShop} />\r\n                                <Route path=\"/manager/edit_food_item/:food_item_id\" exact component={EditFoodItem} />\r\n                                <Route path=\"/manager/setting_account\" exact component={SettingAccount} />\r\n                                <Route path=\"/manager/edit_profile\" exact component={EditProfile} />\r\n                            </div>\r\n                        </Layout.Content>\r\n                        <Footer />\r\n                    </Layout>\r\n                </Layout>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerIndex;\r\n\r\n//<Redirect to=\"/manager/\" />","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport CustomerLogIn from './pages/customer_pages/CustomerLogIn';\nimport CustomerRegister from './pages/customer_pages/CustomerRegister';\nimport CustomerResetPassword from './pages/customer_pages/CustomerResetPassword';\nimport CustomerResetPasswordToken from './pages/customer_pages/CustomerResetPasswordToken';\nimport CustomerIndex from './pages/customer_pages/CustomerIndex';\n\nimport ManagerLogIn from './pages/manager_pages/ManagerLogIn'\nimport ManagerRegister from './pages/manager_pages/ManagerRegister';\nimport ManagerResetPassword from './pages/manager_pages/ManagerResetPassword';\nimport ManagerResetPasswordToken from './pages/manager_pages/ManagerResetPasswordToken';\nimport ManagerIndex from './pages/manager_pages/ManagerIndex';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/customer/login\" exact component={CustomerLogIn} />\n        <Route path=\"/customer/register\" exact component={CustomerRegister} />\n        <Route path=\"/customer/reset-password/\" exact component={CustomerResetPassword} />\n        <Route path=\"/customer/reset-password/:token\" exact component={CustomerResetPasswordToken} />\n        <Route path=\"/customer/\" component={CustomerIndex} />\n\n        <Route path=\"/manager/login\" exact component={ManagerLogIn} />\n        <Route path=\"/manager/register\" exact component={ManagerRegister} />\n        <Route path=\"/manager/reset-password/\" exact component={ManagerResetPassword} />\n        <Route path=\"/manager/reset-password/:token\" exact component={ManagerResetPasswordToken} />\n        <Route path=\"/manager/\" component={ManagerIndex} />\n        <Redirect to=\"/manager/login\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}