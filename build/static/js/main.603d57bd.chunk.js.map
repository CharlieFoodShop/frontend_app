{"version":3,"sources":["config/CUSTOMER_API_URL.js","pages/customer_pages/components/Footer.js","config/KEY.js","pages/customer_pages/CustomerLogIn.js","pages/customer_pages/CustomerRegister.js","pages/customer_pages/CustomerResetPassword.js","pages/customer_pages/CustomerResetPasswordToken.js","pages/customer_pages/components/Home.js","pages/customer_pages/CustomerIndex.js","config/MANAGER_API_URL.js","pages/manager_pages/components/Footer.js","pages/manager_pages/ManagerLogIn.js","pages/manager_pages/ManagerRegister.js","pages/manager_pages/ManagerResetPassword.js","pages/manager_pages/ManagerResetPasswordToken.js","pages/manager_pages/components/FoodShopList.js","pages/manager_pages/components/AddFoodShop.js","pages/manager_pages/components/FoodShopDetail.js","pages/manager_pages/components/FoodItemDetail.js","pages/manager_pages/components/AddFoodItem.js","pages/manager_pages/components/AddFoodItemCategory.js","pages/manager_pages/components/EditFoodShop.js","pages/manager_pages/components/EditFoodItem.js","pages/manager_pages/components/SettingAccount.js","pages/manager_pages/components/EditProfile.js","pages/manager_pages/ManagerIndex.js","App.js","index.js"],"names":["IP_URL","CUSTOMER_SERVICE_PATH","DEFAULT_URL","REGISTER_URL","LOGIN_URL","LOGOUT_URL","RESET_PASSWORD","GET_CUSTOMER_DETAIL","UPDATE_CUSTOMER_PROFILE","CUSTOMER_UPLOAD_AVATAR","RANDOM_FOOD_SHOP_POP_UP","IP_URL_FOOD_SHOP","Footer","className","to","pathname","target","Date","getFullYear","KEY","reCAPTCHA_site_key","BingMap_key","CustomerLogIn","props","useState","loading","setLoading","emailAddress","useRef","password","rememberMe","recaptcha","useEffect","localStorage","getItem","history","push","handleLogin","captcha","data","email_address","current","state","value","axios","method","url","withCredentials","then","res","success","checked","setItem","customerSessionId","message","error","catch","e","response","tip","spinning","title","style","width","bordered","id","size","type","prefix","UserOutlined","color","placeholder","autoFocus","defaultValue","ref","required","Password","KeyOutlined","block","htmlType","onClick","preventDefault","execute","action","span","textAlign","sitekey","onResolved","console","log","CustomerRegister","firstName","lastName","phoneNumber","confirmPassword","handleRegister","first_name","last_name","phone","Title","level","marginLeft","pattern","Text","CustomerResetPassword","handleResetPassword","MailOutlined","CustomerResetPasswordToken","handleResetPasswordFinal","match","params","token","Home","foodShopList","setFoodShopList","a","getRandomFoodShops","result","results","map","item","index","float","margin","food_shop_id","hoverable","cover","height","alt","src","image_url","Meta","food_shop_name","description","working_address","food_shop_category_name","CustomerIndex","helloTitle","setHelloTitle","setCustomerId","setFirstName","setLastName","setEmailAddress","setPhone","avatarUrl","setAvatarUrl","setCreatedAt","setUpdatedAt","getCustomerDetail","customerDetail","customer_id","avatar_url","created_at","updated_at","timeTitle","getTimeTitle","hour","getHours","menu","key","removeItem","Item","borderBottom","justify","xs","sm","md","lg","xl","Search","allowClear","enterButton","onSearch","text","cursor","icon","ShoppingCartOutlined","overlay","placement","Content","padding","minHeight","path","exact","component","IP_URL_FOOD_ITEM","MANAGER_SERVICE_PATH","GET_MANAGER_DETAIL","UPDATE_MANAGER_ACCOUNT","UPDATE_MANAGER_PROFILE","MANAGER_UPLOAD_AVATAR","ADD_FOOD_SHOP_URL","ADD_FOOD_CATEGORY","GET_FOOD_SHOP_LIST","GET_FOOD_SHOP_DETAIL","GET_FOOD_SHOP_CATEGORY_LIST","GET_ALL_MATCH_FOOD_CATEGORY","UPDATE_FOOD_SHOP_ACTIVE","UPDATE_FOOD_SHOP","UPLOAD_FOOD_SHOP_IMAGE","ADD_FOOD_ITEM_URL","GET_FOOD_ITEM_LIST","GET_FOOD_ITEM_CATEGORY_LIST","GET_FOOD_ITEM_DETAIL","UPDATE_FOOD_ITEM","UPLOAD_FOOD_ITEM_IMAGE","ManagerLogIn","sessionId","ManagerRegister","ManagerResetPassword","ManagerResetPasswordToken","FoodShopList","managerId","setManagerId","getManagerDetail","managetDetail","manager_id","getFoodShopList","list_result","food_shop_description","AddFoodShop","shopCategory","setShopCategory","possibleAddressList","setPossibleAddressList","shopCategoryId","setShopCategoryId","imageFile","setImageFile","openTime","setOpenTime","closeTime","setCloseTime","workingAddress","setWorkingAddress","lat","setLat","lon","setLon","foodShopName","getShopCategory","category_list","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","updateAddressByCoord","getPossibleAddressList","length","_text","replace","_results","resourceSets","resources","i","name","updateCoord","address","_address","point","coordinates","handleSubmit","resizableTextArea","food_shop_category_id","open_time","close_time","axios_1","headers","onChange","Option","options","onSelect","TextArea","rows","accept","file","files","formdata","FormData","append","time","timeString","FoodShopDetail","foodCategoryList","setFoodCategoryList","itemDataList","setItemDataList","active","setActive","createdAt","updatedAt","foodShopCategory","setFoodShopCategory","foodShopDescription","setFoodShopDescription","setFoodShopName","foodShopRating","setFoodShopRating","imageUrl","setImageUrl","getFoodShopDetail","getFoodCategoryList","listResult","food_shop_rating","handleFoodItemTableChange","food_category_id","_result","food_name","food_description","food_item_id","handleOnActiveChange","overflow","marginTop","defaultChecked","disabled","Group","Button","food_category_name","columns","dataIndex","render","handleFoodItemDetail","dataSource","FoodItemDetail","foodAverageRating","setFoodAverageRating","foodCategoryName","setFoodCategoryName","foodDescription","setFoodDescription","foodName","setFoodName","foodPrice","setFoodPrice","foodShopId","setFoodShopId","getFoodItemDetail","food_average_rating","food_price","AddFoodItem","itemCategoryList","setItemCategoryList","foodCategoryId","setFoodCategoryId","getItemCategoryList","resultList","AddFoodItemCategory","categoryList","setCategoryList","setText","getCategoryList","food_category_example_name","handleAdd","EditFoodShop","setDescription","getOldData","handleImageUpload","moment","EditFoodItem","getOldDate","SettingAccount","clientId","setClientId","clientSecret","setClientSecret","client_id","client_secret","EditProfile","oldEmailAddress","setOldEmailAddress","newEmailAddress","setNewEmailAddress","oldPhone","setOldPhone","newPhone","setNewPhone","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","managerDetail","handleChangeAvatar","old_email_address","new_email_address","old_phone","new_phone","ManagerIndex","Sider","collapsible","mode","theme","CoffeeOutlined","BellOutlined","CalendarOutlined","SettingOutlined","SubMenu","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.603d57bd.chunk.js","sourcesContent":["const IP_URL = \"http://144.34.175.242/api/customer_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/customer_food_shop_api/\";\r\n\r\n// const IP_URL = \"http://localhost:7000/customer_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/customer_food_shop_api/\";\r\n\r\nconst CUSTOMER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    REGISTER_URL: IP_URL + \"customer_register/\",\r\n    LOGIN_URL: IP_URL + \"customer_login/\",\r\n    LOGOUT_URL: IP_URL + \"customer_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"customer_password_reset/\",\r\n    GET_CUSTOMER_DETAIL: IP_URL + \"customer_detail\",\r\n    UPDATE_CUSTOMER_PROFILE: IP_URL + \"customer_update_profile\",\r\n    CUSTOMER_UPLOAD_AVATAR: IP_URL + \"customer_upload_avatar\",\r\n\r\n    RANDOM_FOOD_SHOP_POP_UP: IP_URL_FOOD_SHOP + \"get_random_food_shops\"\r\n};\r\n\r\nexport default CUSTOMER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/customer_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: CUSTOMER_SERVICE_PATH.DEFAULT_URL }} target=\"_blank\">\r\n                Charlie's Food Shop\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","const KEY = {\r\n    reCAPTCHA_site_key: '6LcaKtIZAAAAAK6RCXm1AoJfpgWNWo7wUzwzUZA-',\r\n    BingMap_key: 'AiJHkuJR5r6HBFPmJ7tu1mxwEGVWLymQ1CmIVRwXBTdpvx5ImKJMOVDr2_qRfgro'\r\n}\r\n\r\nexport default KEY;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('customerSessionId')) {\r\n            return props.history.push('/customer');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('customerSessionId', res.data.customerSessionId);\r\n                    localStorage.setItem('customerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/customer');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/customer/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/customer/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerLogIn;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Customer Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/customer/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/customer/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPassword;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Home = () => {\r\n\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getRandomFoodShops();\r\n            console.log(result);\r\n            setFoodShopList(result);\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    const getRandomFoodShops = async () => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.RANDOM_FOOD_SHOP_POP_UP });\r\n        return results.data.data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/customer/food_shop/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={item.working_address + \"\\n\" + item.food_shop_category_name} />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, message, Spin, Input, Avatar, Row, Col, Divider, Menu, Dropdown } from 'antd';\r\nimport { ShoppingCartOutlined, UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport '../../static/css/customer_css/header.css';\r\nimport '../../static/css/customer_css/content.css';\r\n\r\nimport Footer from './components/Footer';\r\nimport Home from './components/Home';\r\n\r\nconst CustomerIndex = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n\r\n    const [customerId, setCustomerId] = useState(null);\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [emailAddress, setEmailAddress] = useState(null);\r\n    const [phone, setPhone] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n    const [createdAt, setCreatedAt] = useState(null);\r\n    const [updatedAt, setUpdatedAt] = useState(null);\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            if (!(localStorage.getItem('customerSessionId') &&\r\n                localStorage.getItem('customerEmail'))) {\r\n                return props.history.push('/customer/login');\r\n            }\r\n\r\n            let customerDetail = await getCustomerDetail(localStorage.getItem('customerEmail'));\r\n            setCustomerId(customerDetail.customer_id);\r\n            setFirstName(customerDetail.first_name);\r\n            setLastName(customerDetail.last_name);\r\n            setEmailAddress(customerDetail.email_address);\r\n            setPhone(customerDetail.phone);\r\n            setAvatarUrl(customerDetail.avatar_url);\r\n            setCreatedAt(customerDetail.created_at);\r\n            setUpdatedAt(customerDetail.updated_at);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + customerDetail.first_name + \" \" + customerDetail.last_name);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getCustomerDetail = async (email_address) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_CUSTOMER_DETAIL + \"?email_address=\" + email_address });\r\n        return result.data.data;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('customerSessionId');\r\n                localStorage.removeItem('customerEmail');\r\n                message.success(res.data.message);\r\n                return props.history.push('/customer/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleSearch = (text) => {\r\n        console.log(text);\r\n    }\r\n\r\n    const handleCartOnclick = () => {\r\n        console.log('Cart clicked');\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={handleMenuClick}>\r\n            <Menu.Item key=\"1\" style={{ borderBottom: '1px solid black' }}>Current Order</Menu.Item>\r\n            <Menu.Item key=\"2\">Order History</Menu.Item>\r\n            <Menu.Item key=\"3\">Profile</Menu.Item>\r\n            <Menu.Item key=\"4\">My Favourite</Menu.Item>\r\n            <Menu.Item key=\"5\">Message</Menu.Item>\r\n            <Menu.Item key=\"6\">Help</Menu.Item>\r\n            <Menu.Item key=\"7\">Log Out</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <div className=\"header\">\r\n                    <Row type=\"flex\" justify=\"center\">\r\n                        <Col xs={24} sm={24} md={8} lg={12} xl={12}>\r\n                            <Link to=\"/customer/\">\r\n                                <span className=\"header-logo\">{helloTitle}</span>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={16} lg={10} xl={8}>\r\n                            <Input.Search\r\n                                allowClear\r\n                                enterButton\r\n                                style={{ width: '60%', margin: '1% auto' }}\r\n                                placeholder=\"Search what you want\"\r\n                                onSearch={handleSearch}\r\n                            />\r\n                            <span\r\n                                onClick={handleCartOnclick}\r\n                                style={{ cursor: 'pointer', margin: '3%' }}\r\n                            >\r\n                                <Avatar\r\n                                    size=\"large\"\r\n                                    icon={<ShoppingCartOutlined />}\r\n\r\n                                />\r\n                            </span>\r\n                            <span\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                                <Dropdown\r\n                                    overlay={menu}\r\n                                    placement=\"bottomCenter\"\r\n                                >\r\n                                    {\r\n                                        avatarUrl ?\r\n                                            <Avatar size=\"large\" src={avatarUrl} /> :\r\n                                            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n                                    }\r\n                                </Dropdown>\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Layout className=\"comm-main\">\r\n                    <Layout.Content style={{ margin: '10px 5%' }}>\r\n                        <div style={{ padding: 24, minHeight: 360 }}>\r\n                            <Route path=\"/customer/\" exact component={Home} />\r\n                        </div>\r\n                    </Layout.Content>\r\n                </Layout>\r\n                <Divider />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerIndex;\r\n\r\n/*\r\n\r\n</span>\r\n\r\n\r\n\r\n*/\r\n","const IP_URL = \"http://144.34.175.242/api/manager_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/manager_food_shop_api/\";\r\nconst IP_URL_FOOD_ITEM = \"http://144.34.175.242/api/manager_food_item_api/\";\r\n\r\n// const IP_URL = \"http://localhost:7000/manager_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/manager_food_shop_api/\";\r\n// const IP_URL_FOOD_ITEM = \"http://localhost:7000/manager_food_item_api/\";\r\n\r\nconst MANAGER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    REGISTER_URL: IP_URL + \"manager_register/\",\r\n    LOGIN_URL: IP_URL + \"manager_login/\",\r\n    LOGOUT_URL: IP_URL + \"manager_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"manager_password_reset/\",\r\n    GET_MANAGER_DETAIL: IP_URL + \"manager_detail\",\r\n    UPDATE_MANAGER_ACCOUNT: IP_URL + \"manager_update_account\",\r\n    UPDATE_MANAGER_PROFILE: IP_URL + \"manager_update_profile\",\r\n    MANAGER_UPLOAD_AVATAR: IP_URL + \"manager_upload_avatar\",\r\n\r\n    ADD_FOOD_SHOP_URL: IP_URL_FOOD_SHOP + \"add_food_shop\",\r\n    ADD_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"add_food_category\",\r\n    GET_FOOD_SHOP_LIST: IP_URL_FOOD_SHOP + \"get_food_shops_by_manager\",\r\n    GET_FOOD_SHOP_DETAIL: IP_URL_FOOD_SHOP + \"get_food_shops_by_food_shop\",\r\n    GET_FOOD_SHOP_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_all_food_shop_category\",\r\n    GET_ALL_MATCH_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"get_match_food_category\",\r\n    UPDATE_FOOD_SHOP_ACTIVE: IP_URL_FOOD_SHOP + \"update_food_shop_active\",\r\n    UPDATE_FOOD_SHOP: IP_URL_FOOD_SHOP + \"update_food_shop\",\r\n    UPLOAD_FOOD_SHOP_IMAGE: IP_URL_FOOD_SHOP + \"upload_food_shop_image\",\r\n\r\n    ADD_FOOD_ITEM_URL: IP_URL_FOOD_ITEM + \"add_food_item\",\r\n    GET_FOOD_ITEM_LIST: IP_URL_FOOD_ITEM + \"get_all_food_item_by_category\",\r\n    GET_FOOD_ITEM_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_food_category_by_food_shop\",\r\n    GET_FOOD_ITEM_DETAIL: IP_URL_FOOD_ITEM + \"get_food_item_by_food_item_id\",\r\n    UPDATE_FOOD_ITEM: IP_URL_FOOD_ITEM + \"update_food_item\",\r\n    UPLOAD_FOOD_ITEM_IMAGE: IP_URL_FOOD_ITEM + \"upload_food_item_image\"\r\n}\r\n\r\nexport default MANAGER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/manager_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: MANAGER_SERVICE_PATH.DEFAULT_URL }} target=\"_blank\">\r\n                Charlie's Food Shop for Managers\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('sessionId')) {\r\n            return props.history.push('/manager');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('sessionId', res.data.sessionId);\r\n                    localStorage.setItem('managerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/manager');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop for Managers\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/manager/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/manager/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerLogIn;","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Manager Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/manager/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/manager/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPassword;","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopList = (props) => {\r\n\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            let first_name = managetDetail.data.data.first_name;\r\n            let last_name = managetDetail.data.data.last_name\r\n            let manager_id = managetDetail.data.data.manager_id;\r\n            setManagerId(manager_id);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + first_name + \" \" + last_name);\r\n\r\n            let list_result = await getFoodShopList(manager_id);\r\n            setFoodShopList(list_result.data.data);\r\n\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    const handleAddFoodShop = () => {\r\n        if (managerId) {\r\n            return props.history.push('/manager/add_food_shop/' + managerId);\r\n        } else {\r\n            return message.error('Manager ID not exist.');\r\n        }\r\n    }\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result;\r\n    }\r\n\r\n    const getFoodShopList = async (manager_id) => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_LIST + \"?manager_id=\" + manager_id });\r\n        return results;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        {helloTitle}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'right' }} type=\"primary\" onClick={handleAddFoodShop}>ADD NEW FOOD SHOP</Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            {\r\n\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/manager/food_shop_detail/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={item.food_shop_description} />\r\n                            </Card>\r\n\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst AddFoodShop = (props) => {\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const foodShopName = useRef();\r\n    const description = useRef();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            getLocation();\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            try {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    setLat(position.coords.latitude);\r\n                    setLon(position.coords.longitude);\r\n                    updateAddressByCoord(position.coords.latitude, position.coords.longitude);\r\n                }, e => {\r\n                    return message.error(e.message);\r\n                });\r\n            } catch (e) {\r\n                return message.error('Sorry, something wrong happened when getting location.');\r\n            }\r\n        } else {\r\n            return message.error('Sorry, your location can not be get.');\r\n        }\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateAddressByCoord = async (lat, lon) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: `http://dev.virtualearth.net/REST/v1/Locations/${lat},${lon}?key=${KEY.BingMap_key}` });\r\n            let _results = results.data.resourceSets[0].resources;\r\n            if (_results.length === 1) {\r\n                setWorkingAddress(_results[0].name);\r\n            } else {\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodShopName.current.state.value &&\r\n                description.current.resizableTextArea.props.value &&\r\n                shopCategoryId &&\r\n                imageFile &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime) {\r\n\r\n                let data = {\r\n                    manager_id: props.match.params.manager_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName.current.state.value,\r\n                    food_shop_description: description.current.resizableTextArea.props.value,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_SHOP_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + axios_1.data.food_shop_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Shop Successful!');\r\n                    return props.history.push('/manager/');\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Please Add New Food Shop Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            ref={foodShopName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            defaultValue={1}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        ref={description}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodShop;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Switch, Radio, Table, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopDetail = (props) => {\r\n\r\n    const [foodCategoryList, setFoodCategoryList] = useState([]);\r\n    const [itemDataList, setItemDataList] = useState([]);\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [closeTime, setCloseTime] = useState('');\r\n    const [openTime, setOpenTime] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodShopCategory, setFoodShopCategory] = useState('');\r\n    const [foodShopDescription, setFoodShopDescription] = useState('');\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [foodShopRating, setFoodShopRating] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [workingAddress, setWorkingAddress] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodShopDetail(props.match.params.food_shop_id);\r\n            let listResult = await getFoodCategoryList(props.match.params.food_shop_id)\r\n\r\n            setImageUrl(result.image_url);\r\n            setActive(result.active);\r\n            setCloseTime(result.close_time);\r\n            setOpenTime(result.open_time);\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodShopCategory(result.food_shop_category_name);\r\n            setFoodShopDescription(result.food_shop_description);\r\n            setFoodShopName(result.food_shop_name);\r\n            setFoodShopRating(result.food_shop_rating);\r\n            setWorkingAddress(result.working_address);\r\n            setFoodCategoryList(listResult);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodShopDetail = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getFoodCategoryList = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleFoodItemTableChange = async (food_category_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_LIST + \"?food_category_id=\" + food_category_id });\r\n        let _result = result.data.data;\r\n\r\n        let data = [];\r\n        for (let i = 0; i < _result.length; i++) {\r\n            data.push({\r\n                key: i,\r\n                food_name: _result[i].food_name,\r\n                food_description: _result[i].food_description,\r\n                food_item_id: _result[i].food_item_id,\r\n                image_url: _result[i].image_url\r\n            });\r\n        }\r\n        return setItemDataList(data);\r\n    }\r\n\r\n    const handleOnActiveChange = async (checked) => {\r\n        try {\r\n            await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP_ACTIVE,\r\n                data: {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    active: checked\r\n                }\r\n            });\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to update active status');\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    const handleAddItemCategory = () => {\r\n        return props.history.push('/manager/add_food_item_category/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAddFoodItem = () => {\r\n        return props.history.push('/manager/add_food_item/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleFoodItemDetail = (food_item_id) => {\r\n        return props.history.push('/manager/food_item_detail/' + food_item_id);\r\n    }\r\n\r\n    const handleEditFoodShop = () => {\r\n        return props.history.push('/manager/edit_food_shop/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                <img alt=\"shop-image\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n            </div>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={3} >{foodShopName}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={4} >{workingAddress}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider />\r\n            <Typography.Text>\r\n                Description: {foodShopDescription}\r\n            </Typography.Text>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Open At: {openTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Close At: {closeTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        On Active:\r\n                        <Switch key={foodShopName} style={{ marginLeft: '5%' }} defaultChecked={active} onChange={handleOnActiveChange} />\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Created At: {createdAt}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Updated At: {updatedAt ? updatedAt : 'No Updation Record'}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Rating: {foodShopRating ? foodShopRating : 'Not Available'}</Typography.Title>\r\n                    <Rate\r\n                        disabled\r\n                        defaultValue={foodShopRating ? foodShopRating : 0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} >Shop Category: {foodShopCategory}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodShop}>Edit Food Shop Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\" onClick={handleAddItemCategory}>Add Item Category</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleAddFoodItem}>Add New Food Item</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <div>\r\n                <Typography.Text>Food Item Category: </Typography.Text>\r\n                <Radio.Group\r\n                    onChange={e => handleFoodItemTableChange(e.target.value)}\r\n                >\r\n                    {\r\n                        foodCategoryList.map((item, index) => (\r\n                            <Radio.Button\r\n                                value={item.food_category_id}\r\n                                key={index}\r\n                            >\r\n                                {item.food_category_name}\r\n                            </Radio.Button>\r\n                        ))\r\n                    }\r\n                </Radio.Group>\r\n                <br />\r\n                <Table\r\n                    bordered\r\n                    columns={[\r\n                        {\r\n                            title: 'Food Name',\r\n                            dataIndex: 'food_name'\r\n                        },\r\n                        {\r\n                            title: 'Food Description',\r\n                            dataIndex: 'food_description'\r\n                        },\r\n                        {\r\n                            title: 'Food Image',\r\n                            dataIndex: 'image_url',\r\n                            render: image_url => <img alt=\"food_img\" src={image_url} style={{ width: '100px' }} />\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            dataIndex: 'food_item_id',\r\n                            render: food_item_id => <Button type=\"primary\" onClick={() => handleFoodItemDetail(food_item_id)}>Detail</Button>\r\n                        }\r\n                    ]}\r\n                    dataSource={itemDataList}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodItemDetail = (props) => {\r\n\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodAverageRating, setFoodAverageRating] = useState(0);\r\n    const [foodCategoryName, setFoodCategoryName] = useState('');\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodItemDetail(props.match.params.food_item_id);\r\n\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodAverageRating(result.food_average_rating);\r\n            setFoodCategoryName(result.food_category_name);\r\n            setFoodDescription(result.food_description);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodShopId(result.food_shop_id);\r\n            setImageUrl(result.image_url);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + foodShopId);\r\n    }\r\n\r\n    const handleEditFoodItem = () => {\r\n        return props.history.push('/manager/edit_food_item/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>{foodName}</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <img\r\n                        alt=\"food_image\"\r\n                        src={imageUrl}\r\n                        style={{ width: '80%' }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Text>\r\n                        Description: {foodDescription}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Food Category: {foodCategoryName}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Created At: {createdAt}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Last Updated At: {updatedAt ? updatedAt : 'Not Available'}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        Price: ${foodPrice}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div\r\n                        style={{ float: 'right' }}\r\n                    >\r\n                        <Typography.Title level={5}>\r\n                            Rating: {foodAverageRating ? foodAverageRating : 'Not Available'}\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodAverageRating ? foodAverageRating : 0}\r\n                            />\r\n                        </Typography.Title>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\">See Comments</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodItem}>Edit Food Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItemDetail;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        let resultList = await getItemCategoryList(props.match.params.food_shop_id);\r\n        setItemCategoryList(resultList);\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageFile\r\n            ) {\r\n                let data = {\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_ITEM_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + axios_1.data.food_item_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Item Successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Add New Food Item</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Add New Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItem;\r\n","import React, { useState } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItemCategory = (props) => {\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const getCategoryList = async (text) => {\r\n        try {\r\n            if (text) {\r\n                let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_ALL_MATCH_FOOD_CATEGORY + \"?content=\" + text });\r\n                let _results = results.data.data;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].food_category_example_name, key: i });\r\n                }\r\n                setCategoryList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAdd = async () => {\r\n        console.log(text);\r\n        try {\r\n            if (text) {\r\n                let result = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.ADD_FOOD_CATEGORY,\r\n                    data: {\r\n                        food_shop_id: props.match.params.food_shop_id,\r\n                        food_category_name: text\r\n                    }\r\n                });\r\n\r\n                if (result.data.success) {\r\n                    message.success('Add food category successful!');\r\n                    return props.history.push(\"/manager/food_shop_detail/\" + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Fail to add item category, please try again');\r\n                }\r\n            } else {\r\n                return message.error('Please complete the information');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Fail to add item category, please try again');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>Add New Food Category</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <AutoComplete\r\n                        style={{ width: '80%' }}\r\n                        id=\"categoryText\"\r\n                        options={categoryList}\r\n                        onSearch={getCategoryList}\r\n                        onChange={(text) => setText(text)}\r\n                        onSelect={(text) => setText(text)}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button\r\n                        style={{ width: '50%' }}\r\n                        type=\"primary\"\r\n                        onClick={handleAdd}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItemCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst EditFoodShop = (props) => {\r\n\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldData(props.match.params.food_shop_id);\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            setShopCategoryId(result.food_shop_category_id);\r\n            setImageUrl(result.image_url);\r\n            setOpenTime(result.open_time);\r\n            setCloseTime(result.close_time);\r\n            setWorkingAddress(result.working_address);\r\n            setLat(result.lat);\r\n            setLon(result.lon);\r\n            setFoodShopName(result.food_shop_name);\r\n            setDescription(result.food_shop_description);\r\n\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getOldData = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + props.match.params.food_shop_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                shopCategoryId &&\r\n                foodShopName &&\r\n                description &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName,\r\n                    food_shop_description: description,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food shop successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Edit Food Shop</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            value={foodShopName}\r\n                            onChange={e => setFoodShopName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            value={shopCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img alt=\"img\" src={imageUrl} style={{ width: '60%' }} />\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            value={moment(openTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            value={moment(closeTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodShop;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldDate(props.match.params.food_item_id);\r\n\r\n            setFoodCategoryId(result.food_category_id);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodDescription(result.food_description);\r\n            setImageUrl(result.image_url);\r\n\r\n            let listResult = await getItemCategoryList(result.food_shop_id);\r\n            setItemCategoryList(listResult);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const getOldDate = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + props.match.params.food_item_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_item_id: props.match.params.food_item_id,\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_ITEM, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food item successful!');\r\n                    return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Edit Food Item Profile</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            value={foodName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            value={foodPrice}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            value={foodCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    value={foodDescription}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img src={imageUrl} alt=\"img\" style={{ width: '60%' }} />\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Edit Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Input, Button, Typography, Form, Divider, message } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst SettingAccount = () => {\r\n\r\n    const [clientId, setClientId] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(null);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            setClientId(managetDetail.client_id);\r\n            setClientSecret(managetDetail.client_secret);\r\n            setManagerId(managetDetail.manager_id);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            if (\r\n                clientId &&\r\n                clientSecret &&\r\n                managerId\r\n            ) {\r\n\r\n                let data = {\r\n                    client_id: clientId,\r\n                    client_secret: clientSecret,\r\n                    manager_id: managerId\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_ACCOUNT, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update account successful!');\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Paypal Detail Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client ID\r\n                </Typography.Title>\r\n                <Input\r\n                    size=\"large\"\r\n                    style={{ width: '80%' }}\r\n                    id=\"clientId\"\r\n                    value={clientId}\r\n                    onChange={e => setClientId(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client Secret\r\n                </Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"clientSecret\"\r\n                    rows={5}\r\n                    value={clientSecret}\r\n                    onChange={e => setClientSecret(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingAccount;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditProfile = () => {\r\n\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n\r\n    const [oldEmailAddress, setOldEmailAddress] = useState(null);\r\n    const [newEmailAddress, setNewEmailAddress] = useState(null);\r\n\r\n    const [oldPhone, setOldPhone] = useState(null);\r\n    const [newPhone, setNewPhone] = useState(null);\r\n\r\n    const [newPassword, setNewPassword] = useState(null);\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(null);\r\n\r\n    const [managerId, setManagerId] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managerDetail = await getManagerDetail();\r\n\r\n            setFirstName(managerDetail.first_name);\r\n            setLastName(managerDetail.last_name);\r\n\r\n            setOldEmailAddress(managerDetail.email_address);\r\n            setNewEmailAddress(managerDetail.email_address);\r\n\r\n            setOldPhone(managerDetail.phone);\r\n            setNewPhone(managerDetail.phone);\r\n\r\n            setManagerId(managerDetail.manager_id);\r\n            setAvatarUrl(managerDetail.avatar_url);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleChangeAvatar = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.MANAGER_UPLOAD_AVATAR + \"?id=\" + managerId,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Avatar Successful');\r\n                return setAvatarUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Avatar fail, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                firstName &&\r\n                lastName &&\r\n                oldEmailAddress &&\r\n                newEmailAddress &&\r\n                oldPhone &&\r\n                newPhone &&\r\n                newPassword &&\r\n                confirmNewPassword &&\r\n                managerId\r\n            ) {\r\n                if (newPassword !== confirmNewPassword) {\r\n                    return message.error(\"Confirm password is not same as the new password you set. Please try again!\");\r\n                } else {\r\n\r\n                    let data = {\r\n                        first_name: firstName,\r\n                        last_name: lastName,\r\n                        old_email_address: oldEmailAddress,\r\n                        new_email_address: newEmailAddress,\r\n                        old_phone: oldPhone,\r\n                        new_phone: newPhone,\r\n                        password: newPassword,\r\n                        manager_id: managerId,\r\n                        avatar_url: avatarUrl\r\n                    }\r\n\r\n                    let result = await axios({\r\n                        method: 'post',\r\n                        url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_PROFILE,\r\n                        data: data\r\n                    });\r\n                    if (result.data.success) {\r\n                        return message.success('Update profile successful!');\r\n                    } else {\r\n                        return message.error('Update fail, pleaes try again!');\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.response.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Profile Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5}>Set Avatar</Typography.Title>\r\n                <div style={{ textAlign: 'center' }}>\r\n\r\n                    {\r\n                        avatarUrl ?\r\n                            <Avatar size={128} src={avatarUrl} /> :\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                    }\r\n                    <br /><br />\r\n                    <Input\r\n                        required\r\n                        size=\"large\"\r\n                        style={{ width: '90%' }}\r\n                        type=\"file\"\r\n                        accept=\"image/jpeg,image/jpg,image/png\"\r\n                        id=\"imageFile\"\r\n                        onChange={handleChangeAvatar}\r\n                    />\r\n\r\n                </div>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>First Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                            value={firstName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Last Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                            value={lastName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Email Address</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            placeholder=\"abc@abc.com\"\r\n                            id=\"emailAddress\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewEmailAddress(e.target.value)}\r\n                            value={newEmailAddress}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Phone Number</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"tel\"\r\n                            pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                            placeholder=\"(111) 111-1111\"\r\n                            id=\"phone\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewPhone(e.target.value)}\r\n                            value={newPhone}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            New Password\r\n                        </Typography.Title>\r\n                        <Input.Password\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"newPassword\"\r\n                            placeholder=\"New Password\"\r\n                            value={newPassword}\r\n                            onChange={e => setNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Confirm Your Password\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"password\"\r\n                            id=\"confirmNewPassword\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            value={confirmNewPassword}\r\n                            onChange={e => setConfirmNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, message, Spin } from 'antd';\r\nimport {\r\n    UserOutlined, CoffeeOutlined,\r\n    MailOutlined, BellOutlined, CalendarOutlined, SettingOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport Footer from './components/Footer';\r\nimport FoodShopList from './components/FoodShopList';\r\nimport AddFoodShop from './components/AddFoodShop';\r\nimport FoodShopDetail from './components/FoodShopDetail';\r\nimport FoodItemDetail from './components/FoodItemDetail';\r\nimport AddFoodItem from './components/AddFoodItem';\r\nimport AddFoodItemCategory from './components/AddFoodItemCategory';\r\nimport EditFoodShop from './components/EditFoodShop';\r\nimport EditFoodItem from './components/EditFoodItem';\r\nimport SettingAccount from './components/SettingAccount';\r\nimport EditProfile from './components/EditProfile';\r\n\r\nconst ManagerIndex = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!(localStorage.getItem('sessionId') &&\r\n            localStorage.getItem('managerEmail'))) {\r\n            props.history.push('/manager/login');\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('sessionId');\r\n                localStorage.removeItem('managerEmail');\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '1':\r\n                props.history.push('/manager/');\r\n                break;\r\n            case '5':\r\n                props.history.push('/manager/setting_account');\r\n                break;\r\n            case '6':\r\n                props.history.push('/manager/edit_profile');\r\n                break;\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <Layout.Sider collapsible>\r\n                        <Menu mode=\"inline\" theme=\"dark\" onClick={handleMenuClick}>\r\n                            <Menu.Item key=\"1\" icon={<CoffeeOutlined />}>Food Shops</Menu.Item>\r\n                            <Menu.Item key=\"2\" icon={<MailOutlined />}>Message</Menu.Item>\r\n                            <Menu.Item key=\"3\" icon={<BellOutlined />}>Current Order</Menu.Item>\r\n                            <Menu.Item key=\"4\" icon={<CalendarOutlined />}>Order History</Menu.Item>\r\n                            <Menu.Item key=\"5\" icon={<SettingOutlined />}>Setting Account</Menu.Item>\r\n                            <Menu.SubMenu title=\"Account\" key=\"sub1\" icon={<UserOutlined />}>\r\n                                <Menu.Item key=\"6\">Edit Profile</Menu.Item>\r\n                                <Menu.Item key=\"7\">Logout</Menu.Item>\r\n                            </Menu.SubMenu>\r\n                        </Menu>\r\n                    </Layout.Sider>\r\n                    <Layout className=\"site-layout\">\r\n                        <Layout.Content style={{ margin: '0 16px' }}>\r\n                            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                                <Route path=\"/manager/\" exact component={FoodShopList} />\r\n                                <Route path=\"/manager/add_food_shop/:manager_id\" exact component={AddFoodShop} />\r\n                                <Route path=\"/manager/food_shop_detail/:food_shop_id\" exact component={FoodShopDetail} />\r\n                                <Route path=\"/manager/food_item_detail/:food_item_id\" exact component={FoodItemDetail} />\r\n                                <Route path=\"/manager/add_food_item/:food_shop_id\" exact component={AddFoodItem} />\r\n                                <Route path=\"/manager/add_food_item_category/:food_shop_id\" exact component={AddFoodItemCategory} />\r\n                                <Route path=\"/manager/edit_food_shop/:food_shop_id\" exact component={EditFoodShop} />\r\n                                <Route path=\"/manager/edit_food_item/:food_item_id\" exact component={EditFoodItem} />\r\n                                <Route path=\"/manager/setting_account\" exact component={SettingAccount} />\r\n                                <Route path=\"/manager/edit_profile\" exact component={EditProfile} />\r\n                            </div>\r\n                        </Layout.Content>\r\n                        <Footer />\r\n                    </Layout>\r\n                </Layout>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerIndex;\r\n\r\n//<Redirect to=\"/manager/\" />","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport CustomerLogIn from './pages/customer_pages/CustomerLogIn';\nimport CustomerRegister from './pages/customer_pages/CustomerRegister';\nimport CustomerResetPassword from './pages/customer_pages/CustomerResetPassword';\nimport CustomerResetPasswordToken from './pages/customer_pages/CustomerResetPasswordToken';\nimport CustomerIndex from './pages/customer_pages/CustomerIndex';\n\nimport ManagerLogIn from './pages/manager_pages/ManagerLogIn'\nimport ManagerRegister from './pages/manager_pages/ManagerRegister';\nimport ManagerResetPassword from './pages/manager_pages/ManagerResetPassword';\nimport ManagerResetPasswordToken from './pages/manager_pages/ManagerResetPasswordToken';\nimport ManagerIndex from './pages/manager_pages/ManagerIndex';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/customer/login\" exact component={CustomerLogIn} />\n        <Route path=\"/customer/register\" exact component={CustomerRegister} />\n        <Route path=\"/customer/reset-password/\" exact component={CustomerResetPassword} />\n        <Route path=\"/customer/reset-password/:token\" exact component={CustomerResetPasswordToken} />\n        <Route path=\"/customer/\" component={CustomerIndex} />\n\n        <Route path=\"/manager/login\" exact component={ManagerLogIn} />\n        <Route path=\"/manager/register\" exact component={ManagerRegister} />\n        <Route path=\"/manager/reset-password/\" exact component={ManagerResetPassword} />\n        <Route path=\"/manager/reset-password/:token\" exact component={ManagerResetPasswordToken} />\n        <Route path=\"/manager/\" component={ManagerIndex} />\n        <Redirect to=\"/manager/login\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}