{"version":3,"sources":["config/CUSTOMER_API_URL.js","pages/customer_pages/components/Footer.js","config/KEY.js","pages/customer_pages/CustomerLogIn.js","pages/customer_pages/CustomerRegister.js","pages/customer_pages/CustomerResetPassword.js","pages/customer_pages/CustomerResetPasswordToken.js","pages/customer_pages/components/Home.js","pages/customer_pages/components/FoodShop.js","context/ShopContext.js","pages/customer_pages/components/FoodItem.js","pages/customer_pages/components/Paypal.js","pages/customer_pages/components/Cart.js","pages/customer_pages/components/EditProfile.js","pages/customer_pages/components/MyFavourite.js","pages/customer_pages/components/SearchResults.js","pages/customer_pages/components/CurrentOrder.js","pages/customer_pages/components/OrderHistory.js","pages/customer_pages/components/OrderDetail.js","pages/customer_pages/components/FoodAddComment.js","pages/customer_pages/components/FoodSeeComments.js","pages/customer_pages/components/FoodEditComment.js","pages/customer_pages/components/Help.js","pages/customer_pages/CustomerIndex.js","config/MANAGER_API_URL.js","pages/manager_pages/components/Footer.js","pages/manager_pages/ManagerLogIn.js","pages/manager_pages/ManagerRegister.js","pages/manager_pages/ManagerResetPassword.js","pages/manager_pages/ManagerResetPasswordToken.js","pages/manager_pages/components/FoodShopList.js","pages/manager_pages/components/AddFoodShop.js","pages/manager_pages/components/FoodShopDetail.js","pages/manager_pages/components/FoodItemDetail.js","pages/manager_pages/components/AddFoodItem.js","pages/manager_pages/components/AddFoodItemCategory.js","pages/manager_pages/components/EditFoodShop.js","pages/manager_pages/components/EditFoodItem.js","pages/manager_pages/components/SettingAccount.js","pages/manager_pages/components/EditProfile.js","pages/manager_pages/components/CurrentOrders.js","pages/manager_pages/components/OrderHistory.js","pages/manager_pages/components/OrderDetail.js","pages/manager_pages/components/FoodComments.js","pages/manager_pages/components/Report.js","pages/manager_pages/ManagerIndex.js","context/reducer.js","context/GlobalState.js","App.js","index.js"],"names":["IP_URL","IP_URL_FOOD_SHOP","IP_URL_FOOD_ITEM","IP_URL_ORDER","IP_URL_COMMENT","CUSTOMER_SERVICE_PATH","DEFAULT_URL","APPLICATION_URL","REGISTER_URL","LOGIN_URL","LOGOUT_URL","RESET_PASSWORD","GET_CUSTOMER_DETAIL","UPDATE_CUSTOMER_PROFILE","CUSTOMER_UPLOAD_AVATAR","RANDOM_FOOD_SHOP_POP_UP","GET_FAVOURITE_FOOD_SHOPS","GET_FOOD_SHOP_DETAIL","GET_FOOD_CATEGORIES","GET_SEARCH_RESULTS","UPDATE_FAVOURITE_FOOD_SHOP","ADD_RATING_FOR_FOOD_SHOP","GET_FOOD_ITEMS_BY_SHOP_ID","GET_FOOD_ITEMS_BY_CATEGORY_ID","GET_FOOD_ITEMS_BY_SEARCH_TEXT","GET_FOOD_ITEM_DETAIL_BY_ID","GET_ALL_DRIVER_DETAIL","IP_URL_DELIVER_DRIVER","GET_QUESTION_ANSWER","IP_URL_HELP","CREATE_ORDER","GET_CURRENT_ORDERS","GET_ORDER_HISTORY","GET_ORDER_DETAIL","ADD_ORDER_TO_DATABASE","GET_COMMENT_LIST","GET_COMMENT_DETAIL","ADD_NEW_COMMENT","EDIT_COMMENT","DELETE_COMMENT","Footer","className","to","pathname","target","Date","getFullYear","KEY","reCAPTCHA_site_key","BingMap_key","CustomerLogIn","props","useState","loading","setLoading","emailAddress","useRef","password","rememberMe","recaptcha","useEffect","localStorage","getItem","history","push","handleLogin","captcha","data","email_address","current","state","value","axios","method","url","withCredentials","then","res","success","checked","setItem","customerSessionId","message","error","catch","e","response","tip","spinning","title","style","width","bordered","id","size","type","prefix","UserOutlined","color","placeholder","autoFocus","defaultValue","ref","required","Password","KeyOutlined","block","htmlType","onClick","preventDefault","execute","action","span","textAlign","sitekey","onResolved","console","log","CustomerRegister","firstName","lastName","phoneNumber","confirmPassword","handleRegister","first_name","last_name","phone","Title","level","marginLeft","pattern","Text","CustomerResetPassword","handleResetPassword","MailOutlined","CustomerResetPasswordToken","handleResetPasswordFinal","match","params","token","Home","foodShopList","setFoodShopList","a","getRandomFoodShops","result","results","map","item","index","float","margin","food_shop_id","hoverable","height","cover","alt","src","image_url","Meta","food_shop_name","description","working_address","food_shop_category_name","on_favourite","StarOutlined","FoodShop","foodShopId","setFoodShopId","foodShopName","setFoodShopName","foodShopCategoryName","setFoodShopCategoryName","foodShopDescription","setFoodShopDescription","foodShopRating","setFoodShopRating","imageUrl","setImageUrl","active","setActive","onFavourite","setOnFavourite","openTime","setOpenTime","workingAddress","setWorkingAddress","foodCategoryList","setFoodCategoryList","foodItemList","setFoodItemList","rating","setRating","ratingDisabled","setRatingDisabled","getFoodShopDetail","food_shop_detail","food_shop_description","food_shop_rating","open_time","getFoodCategories","food_category_list","getFoodItemByShopId","food_item_list","getFoodItemByCategoryId","food_category_id","handleFoodItemListChange","handleEditMyFavourite","pre","handleAddRating","warn","handleSearch","text","overflow","marginTop","disabled","backgroundColor","padding","onChange","Search","allowClear","enterButton","onSearch","Group","Button","food_category_name","length","food_item_id","food_name","food_price","food_average_rating","React","createContext","cart","addProductToCart","product","addProductToCartByOne","deleteProductFromCartByOne","removeProductFromCart","clearCart","FoodItem","context","useContext","ShopContext","foodItemId","setFoodItemId","foodAverageRating","setFoodAverageRating","foodCategoryName","setFoodCategoryName","foodDescription","setFoodDescription","foodName","setFoodName","foodPrice","setFoodPrice","quantity","setQuantity","getFoodItemDetail","food_item_detail","food_description","marginRight","shape","icon","MinusOutlined","PlusOutlined","Paypal","paypal","window","Buttons","createOrder","item_list","hst","note","onApprove","actions","order","capture","render","Cart","setNote","foodTotal","setFoodTotal","setHst","checkout","setCheckout","totalAccount","getFoodTotal","total","i","Math","floor","danger","TextArea","rows","EditProfile","setFirstName","setLastName","oldEmailAddress","setOldEmailAddress","newEmailAddress","setNewEmailAddress","oldPhone","setOldPhone","newPhone","setNewPhone","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","address","setAddress","lat","setLat","lon","setLon","customerId","setCustomerId","avatarUrl","setAvatarUrl","possibleAddressList","setPossibleAddressList","getCustomerDetail","customerDetail","customer_id","avatar_url","getPossibleAddressList","_text","replace","_results","resourceSets","resources","name","key","updateCoord","_address","point","coordinates","handleChangeAvatar","file","files","formdata","FormData","append","headers","handleSubmit","old_email_address","new_email_address","old_phone","new_phone","accept","options","onSelect","MyFavourite","getFavouriteFoodShops","SearchResults","getSearchResults","CurrentOrder","orderList","setOrderList","getCurrentOrders","paddingLeft","order_id","created_at","order_status_name","OrderHistory","getOrderHistory","fontWeight","OrderDetail","completedAt","setCompletedAt","createdAt","setCreatedAt","setTotal","orderId","setOrderId","orderItems","setOrderItems","orderStatusName","setOrderStatusName","getOrderDetail","completed_at","order_items","sub_total","FoodAddComment","comment","setComment","FoodSeeComments","commentList","setCommentList","getCommentList","comment_list","handleDeleteComment","food_comment_id","dataSource","columns","dataIndex","handleEditComment","FoodEditComment","foodCommentId","setFoodCommentId","getCommentDetail","handleEdit","Help","helpList","setHelpList","getHelpList","question_content","answer_content","CustomerIndex","helloTitle","setHelloTitle","timeTitle","getTimeTitle","hour","getHours","menu","removeItem","Item","borderBottom","justify","xs","sm","md","lg","xl","cursor","count","ShoppingCartOutlined","overlay","placement","Content","minHeight","path","exact","component","IP_URL_REPORT","MANAGER_SERVICE_PATH","GET_MANAGER_DETAIL","UPDATE_MANAGER_ACCOUNT","UPDATE_MANAGER_PROFILE","MANAGER_UPLOAD_AVATAR","ADD_FOOD_SHOP_URL","ADD_FOOD_CATEGORY","GET_FOOD_SHOP_LIST","GET_FOOD_SHOP_CATEGORY_LIST","GET_ALL_MATCH_FOOD_CATEGORY","UPDATE_FOOD_SHOP_ACTIVE","UPDATE_FOOD_SHOP","UPLOAD_FOOD_SHOP_IMAGE","ADD_FOOD_ITEM_URL","GET_FOOD_ITEM_LIST","GET_FOOD_ITEM_CATEGORY_LIST","GET_FOOD_ITEM_DETAIL","UPDATE_FOOD_ITEM","UPLOAD_FOOD_ITEM_IMAGE","DELETE_FOOD_ITEM","COMPLETE_ORDER","GET_REPORT_INITIAL_STATE","GET_SALES_BY_TIME_PERIOD","GET_SALES_BY_REGION","GET_SALES_BY_USER_ID","ManagerLogIn","sessionId","ManagerRegister","ManagerResetPassword","ManagerResetPasswordToken","FoodShopList","managerId","setManagerId","getManagerDetail","managetDetail","manager_id","getFoodShopList","list_result","AddFoodShop","shopCategory","setShopCategory","shopCategoryId","setShopCategoryId","imageFile","setImageFile","closeTime","setCloseTime","getShopCategory","category_list","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","updateAddressByCoord","resizableTextArea","food_shop_category_id","close_time","axios_1","Option","time","timeString","FoodShopDetail","itemDataList","setItemDataList","updatedAt","setUpdatedAt","foodShopCategory","setFoodShopCategory","getFoodCategoryList","listResult","updated_at","handleFoodItemTableChange","_result","handleOnActiveChange","defaultChecked","handleFoodItemDetail","FoodItemDetail","handleGoBack","handleDeleteFoodItem","AddFoodItem","itemCategoryList","setItemCategoryList","foodCategoryId","setFoodCategoryId","getItemCategoryList","resultList","AddFoodItemCategory","categoryList","setCategoryList","setText","getCategoryList","food_category_example_name","handleAdd","EditFoodShop","setDescription","getOldData","handleImageUpload","moment","EditFoodItem","getOldDate","SettingAccount","clientId","setClientId","clientSecret","setClientSecret","client_id","client_secret","managerDetail","CurrentOrders","MANAGER_API_URL","handleSendMessage","handleCompleteOrder","order_detail","order_index","border","items","item_index","handleSeeDetail","setItems","FoodComments","getComments","Report","recentSalesList","setRecentSalesList","recentFoodTotal","setRecentFoodTotal","recentHstTotal","setRecentHstTotal","recentTotal","setRecentTotal","mostProlificShop","setMostProlificShop","mostProlificSeller","setMostProlificSeller","start_time","end_time","timePeriod","regionList","setRegionList","userList","setUserList","text1","setText1","text2","setText2","text3","setText3","getInitialState","initial_state","recent_sales_list","recent_food_total","recent_hst_total","recent_total","most_prolific_seller","region_list","user_list","handleTimePeriod","food_total","hst_total","handleRegion","handleUser","ManagerIndex","Sider","collapsible","mode","theme","CoffeeOutlined","CarryOutOutlined","BellOutlined","CalendarOutlined","SettingOutlined","SubMenu","ADD_PRODUCT","REMOVE_PRODUCT","ADD_PRODUCT_BY_ONE","DELETE_PRODUCT_BY_ONE","CLEAR_CART","shopReducer","updatedCart","updatedItemIndex","findIndex","updatedItem","splice","GlobalState","useReducer","cartState","dispatch","Provider","children","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe726eb9.chunk.js","sourcesContent":["const IP_URL = \"http://144.34.175.242/api/customer_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/customer_food_shop_api/\";\r\nconst IP_URL_FOOD_ITEM = \"http://144.34.175.242/api/customer_food_item_api/\";\r\nconst IP_URL_DELIVER_DRIVER = \"http://144.34.175.242/api/deliver_driver_api/\";\r\nconst IP_URL_ORDER = \"http://144.34.175.242/api/customer_order_api/\";\r\nconst IP_URL_COMMENT = \"http://144.34.175.242/api/customer_comment_api/\";\r\nconst IP_URL_HELP = \"http://144.34.175.242/api/customer_help_api/\";\r\nconst APPLICATION_URL = 'http://144.34.175.242/customer/';\r\n\r\n// const IP_URL = \"http://localhost:7000/customer_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/customer_food_shop_api/\";\r\n// const IP_URL_FOOD_ITEM = \"http://localhost:7000/customer_food_item_api/\";\r\n// const IP_URL_DELIVER_DRIVER = \"http://localhost:7000/deliver_driver_api/\";\r\n// const IP_URL_ORDER = \"http://localhost:7000/customer_order_api/\";\r\n// const IP_URL_COMMENT = \"http://localhost:7000/customer_comment_api/\";\r\n// const IP_URL_HELP = \"http://localhost:7000/customer_help_api/\";\r\n// const APPLICATION_URL = 'http://localhost:3000/customer/';\r\n\r\nconst CUSTOMER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    APPLICATION_URL: APPLICATION_URL,\r\n    REGISTER_URL: IP_URL + \"customer_register/\",\r\n    LOGIN_URL: IP_URL + \"customer_login/\",\r\n    LOGOUT_URL: IP_URL + \"customer_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"customer_password_reset/\",\r\n    GET_CUSTOMER_DETAIL: IP_URL + \"customer_detail\",\r\n    UPDATE_CUSTOMER_PROFILE: IP_URL + \"customer_update_profile\",\r\n    CUSTOMER_UPLOAD_AVATAR: IP_URL + \"customer_upload_avatar\",\r\n\r\n    RANDOM_FOOD_SHOP_POP_UP: IP_URL_FOOD_SHOP + \"get_random_food_shops\",\r\n    GET_FAVOURITE_FOOD_SHOPS: IP_URL_FOOD_SHOP + \"get_favourite_food_shops\",\r\n    GET_FOOD_SHOP_DETAIL: IP_URL_FOOD_SHOP + \"get_food_shop_detail\",\r\n    GET_FOOD_CATEGORIES: IP_URL_FOOD_SHOP + \"get_food_category_by_food_shop_id\",\r\n    GET_SEARCH_RESULTS: IP_URL_FOOD_SHOP + \"get_search_results\",\r\n    UPDATE_FAVOURITE_FOOD_SHOP: IP_URL_FOOD_SHOP + \"update_favourite_food_shop\",\r\n    ADD_RATING_FOR_FOOD_SHOP: IP_URL_FOOD_SHOP + \"add_rating_for_food_shop\",\r\n\r\n    GET_FOOD_ITEMS_BY_SHOP_ID: IP_URL_FOOD_ITEM + \"get_food_items_by_shop_id\",\r\n    GET_FOOD_ITEMS_BY_CATEGORY_ID: IP_URL_FOOD_ITEM + \"get_food_items_by_category_id\",\r\n    GET_FOOD_ITEMS_BY_SEARCH_TEXT: IP_URL_FOOD_ITEM + \"get_food_items_by_search_text\",\r\n    GET_FOOD_ITEM_DETAIL_BY_ID: IP_URL_FOOD_ITEM + \"get_food_item_by_id\",\r\n\r\n    GET_ALL_DRIVER_DETAIL: IP_URL_DELIVER_DRIVER + \"get_all_driver_detail\",\r\n    GET_QUESTION_ANSWER: IP_URL_HELP + \"get_question_answer\",\r\n\r\n    CREATE_ORDER: IP_URL_ORDER + \"create_order\",\r\n    GET_CURRENT_ORDERS: IP_URL_ORDER + \"get_current_orders\",\r\n    GET_ORDER_HISTORY: IP_URL_ORDER + \"get_order_history\",\r\n    GET_ORDER_DETAIL: IP_URL_ORDER + \"get_order_detail_by_order_id\",\r\n    ADD_ORDER_TO_DATABASE: IP_URL_ORDER + \"add_order_to_database\",\r\n\r\n    GET_COMMENT_LIST: IP_URL_COMMENT + \"get_comment_list_by_item_id\",\r\n    GET_COMMENT_DETAIL: IP_URL_COMMENT + \"get_comment_detail_by_id\",\r\n    ADD_NEW_COMMENT: IP_URL_COMMENT + \"add_new_comment\",\r\n    EDIT_COMMENT: IP_URL_COMMENT + \"edit_comment\",\r\n    DELETE_COMMENT: IP_URL_COMMENT + \"delete_comment\"\r\n};\r\n\r\nexport default CUSTOMER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/customer_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: CUSTOMER_SERVICE_PATH.APPLICATION_URL }} target=\"_blank\">\r\n                Charlie's Food Shop\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","const KEY = {\r\n    reCAPTCHA_site_key: '6LcaKtIZAAAAAK6RCXm1AoJfpgWNWo7wUzwzUZA-',\r\n    BingMap_key: 'AiJHkuJR5r6HBFPmJ7tu1mxwEGVWLymQ1CmIVRwXBTdpvx5ImKJMOVDr2_qRfgro'\r\n}\r\n\r\nexport default KEY;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('customerSessionId')) {\r\n            return props.history.push('/customer');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('customerSessionId', res.data.customerSessionId);\r\n                    localStorage.setItem('customerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/customer');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/customer/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/customer/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerLogIn;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Customer Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/customer/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/customer/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPassword;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/customer_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst CustomerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/customer/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/customer/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Card } from 'antd';\r\nimport { StarOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Home = () => {\r\n\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getRandomFoodShops(localStorage.getItem('customerEmail'));\r\n            setFoodShopList(result);\r\n        } catch (e) {\r\n            return message.error('Sorry, could not get food shops!');\r\n        }\r\n    }, []);\r\n\r\n    const getRandomFoodShops = async (email_address) => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.RANDOM_FOOD_SHOP_POP_UP + \"?email_address=\" + email_address });\r\n        return results.data.data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/customer/food_shop/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                style={{ height: 400 }}\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={\r\n                                    <div>\r\n                                        <p>{item.working_address}</p>\r\n                                        <p>{item.food_shop_category_name}\r\n                                            {\r\n                                                item.on_favourite ?\r\n                                                    <span style={{ float: 'right' }}><StarOutlined /></span> :\r\n                                                    <></>\r\n                                            }\r\n                                        </p>\r\n\r\n                                    </div>\r\n                                } />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider, Rate, Radio, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\n\r\nconst FoodShop = (props) => {\r\n\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [foodShopCategoryName, setFoodShopCategoryName] = useState('');\r\n    const [foodShopDescription, setFoodShopDescription] = useState('');\r\n    const [foodShopRating, setFoodShopRating] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [active, setActive] = useState(false);\r\n    const [onFavourite, setOnFavourite] = useState(false);\r\n    const [openTime, setOpenTime] = useState('');\r\n    const [workingAddress, setWorkingAddress] = useState('');\r\n\r\n    const [foodCategoryList, setFoodCategoryList] = useState([]);\r\n    const [foodItemList, setFoodItemList] = useState([]);\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [ratingDisabled, setRatingDisabled] = useState(false);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let food_shop_detail = await getFoodShopDetail(localStorage.getItem('customerEmail'), props.match.params.food_shop_id);\r\n            setFoodShopId(food_shop_detail.food_shop_id);\r\n            setFoodShopName(food_shop_detail.food_shop_name);\r\n            setFoodShopCategoryName(food_shop_detail.food_shop_category_name);\r\n            setFoodShopDescription(food_shop_detail.food_shop_description);\r\n            setFoodShopRating(food_shop_detail.food_shop_rating);\r\n            setImageUrl(food_shop_detail.image_url);\r\n            setActive(food_shop_detail.active);\r\n            setOnFavourite(food_shop_detail.on_favourite);\r\n            setOpenTime(food_shop_detail.open_time);\r\n            setWorkingAddress(food_shop_detail.working_address);\r\n\r\n            let food_category_list = await getFoodCategories(props.match.params.food_shop_id);\r\n            setFoodCategoryList(food_category_list);\r\n\r\n            let food_item_list = await getFoodItemByShopId(props.match.params.food_shop_id);\r\n            setFoodItemList(food_item_list);\r\n\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food shop detail!');\r\n        }\r\n    }, []);\r\n\r\n    const getFoodShopDetail = async (email_address, food_shop_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?email_address=\" + email_address + \"&&food_shop_id=\" + food_shop_id\r\n        });\r\n        return result.data.data;\r\n    }\r\n\r\n    const getFoodCategories = async (food_shop_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_CATEGORIES + \"?food_shop_id=\" + food_shop_id\r\n        });\r\n        return results.data.data;\r\n    }\r\n\r\n    const getFoodItemByShopId = async (food_shop_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEMS_BY_SHOP_ID + \"?food_shop_id=\" + food_shop_id\r\n        });\r\n        return results.data.data;\r\n    }\r\n\r\n    const getFoodItemByCategoryId = async (food_category_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEMS_BY_CATEGORY_ID + \"?food_category_id=\" + food_category_id\r\n        });\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleFoodItemListChange = async (food_category_id) => {\r\n        try {\r\n            let food_item_list = await getFoodItemByCategoryId(food_category_id);\r\n            setFoodItemList(food_item_list);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food list');\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/customer/');\r\n    }\r\n\r\n    const handleEditMyFavourite = async () => {\r\n        try {\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.UPDATE_FAVOURITE_FOOD_SHOP,\r\n                data: {\r\n                    email_address: localStorage.getItem('customerEmail'),\r\n                    food_shop_id: foodShopId,\r\n                    on_favourite: onFavourite\r\n                }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                setOnFavourite(pre => !pre);\r\n            } else {\r\n                return message.error('Error occured, please try again');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Error occured, please try again');\r\n        }\r\n    }\r\n\r\n    const handleAddRating = async () => {\r\n        try {\r\n            if (!rating)\r\n                return message.warn('Sorry, rating can not be blank!');\r\n\r\n\r\n            let data = {\r\n                food_shop_id: props.match.params.food_shop_id,\r\n                rating: rating\r\n            };\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.ADD_RATING_FOR_FOOD_SHOP,\r\n                data: data\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Thanks for your feedback!');\r\n                return setRatingDisabled(true);\r\n            } else {\r\n                return message.error('Action failed, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Action failed, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSearch = async (text) => {\r\n        try {\r\n            if (!text) {\r\n                return message.warn('Search text can not be blank!');\r\n            }\r\n\r\n            let result = await axios({\r\n                method: 'get',\r\n                url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEMS_BY_SEARCH_TEXT\r\n                    + \"?food_shop_id=\" + props.match.params.food_shop_id + \"&&search_text=\" + text\r\n            });\r\n\r\n            if (result.data.success) {\r\n                return setFoodItemList(result.data.data);\r\n            } else {\r\n                return message.error('Action failed, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Action Failed, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                <img alt=\"shop-image\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n            </div>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'left' }} type=\"primary\" onClick={handleGoBack}>Go Back</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'right' }} type=\"primary\" onClick={handleEditMyFavourite}>\r\n                        {\r\n                            onFavourite ?\r\n                                'Remove from My Favoruite' :\r\n                                'Add to My Favoruite'\r\n                        }\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Typography.Title level={2}>{foodShopName}</Typography.Title>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Type: {foodShopCategoryName}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Rating:\r\n                        {foodShopRating ?\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodShopRating}\r\n                            /> :\r\n                            '   Not Available'}\r\n\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>Address: {workingAddress}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Typography.Text>Description: {foodShopDescription}</Typography.Text>\r\n            <br /><br />\r\n            <Typography.Title level={5}>\r\n                Status:\r\n                {\r\n                    active ?\r\n                        <span style={{ color: 'green' }}>   Opening</span> :\r\n                        <span>\r\n                            <span style={{ color: 'red' }}>    Closed</span>\r\n                            (Will be open at {openTime})\r\n                        </span>\r\n                }\r\n            </Typography.Title>\r\n            <Divider />\r\n            <br />\r\n            <Rate\r\n                style={{ backgroundColor: 'white', padding: '1%' }}\r\n                onChange={value => setRating(value)}\r\n                disabled={ratingDisabled}\r\n                value={rating}\r\n            />\r\n            <br /><br />\r\n            <Button type=\"primary\" onClick={handleAddRating} disabled={ratingDisabled}>Add Rate For Food Shop</Button>\r\n            <br />\r\n            <Divider />\r\n            <Input.Search\r\n                allowClear\r\n                enterButton\r\n                style={{ width: '50%' }}\r\n                placeholder=\"Search for food\"\r\n                onSearch={handleSearch}\r\n            />\r\n            <br /><br />\r\n            <div>\r\n                <Typography.Text>Category Filter: </Typography.Text>\r\n                <Radio.Group\r\n                    onChange={e => handleFoodItemListChange(e.target.value)}\r\n                >\r\n                    {\r\n                        foodCategoryList.map((item, index) => (\r\n                            <Radio.Button\r\n                                value={item.food_category_id}\r\n                                key={index}\r\n                            >\r\n                                {item.food_category_name}\r\n                            </Radio.Button>\r\n                        ))\r\n                    }\r\n                </Radio.Group>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                {\r\n                    foodItemList.length === 0 ?\r\n                        <Typography.Title level={3}>Sorry, no food items found</Typography.Title> :\r\n                        <></>\r\n                }\r\n                {\r\n                    foodItemList.map((item, index) => (\r\n                        <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                            <Link to={\"/customer/food_item/\" + item.food_item_id} >\r\n                                <Card\r\n                                    hoverable\r\n                                    cover={<img style={{ height: 200 }} alt=\"food_item\" src={item.image_url} />}\r\n                                    bordered={false}>\r\n                                    <Card.Meta title={item.food_name} description={\r\n                                        <div>\r\n                                            <p>{item.food_category_name}</p>\r\n                                            <p>$ {item.food_price}</p>\r\n                                            {\r\n                                                item.food_average_rating ?\r\n                                                    <Rate disabled defaultValue={item.food_average_rating} /> :\r\n                                                    <Rate disabled defaultValue={0} />\r\n                                            }\r\n                                        </div>\r\n                                    } />\r\n                                </Card>\r\n                            </Link>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShop;\r\n","import React from \"react\";\r\n\r\nexport default React.createContext({\r\n    cart: [],\r\n    addProductToCart: product => { },\r\n    addProductToCartByOne: product => { },\r\n    deleteProductFromCartByOne: product => { },\r\n    removeProductFromCart: product => { },\r\n    clearCart: () => { }\r\n});\r\n\r\n/*\r\n\r\n\r\n*/","import React, { useState, useEffect, useContext } from 'react';\r\nimport { message, Row, Col, Typography, Button, Divider, Rate } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nimport ShopContext from '../../../context/ShopContext';\r\n\r\nconst FoodItem = (props) => {\r\n\r\n    const context = useContext(ShopContext);\r\n\r\n    const [foodItemId, setFoodItemId] = useState(0);\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [active, setActive] = useState(false);\r\n    const [foodAverageRating, setFoodAverageRating] = useState(null);\r\n    const [foodCategoryName, setFoodCategoryName] = useState('');\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    const [quantity, setQuantity] = useState(0);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let food_item_detail = await getFoodItemDetail(props.match.params.food_item_id);\r\n            setFoodItemId(food_item_detail.food_item_id);\r\n            setFoodShopId(food_item_detail.food_shop_id);\r\n            setActive(food_item_detail.active);\r\n            setFoodAverageRating(food_item_detail.food_average_rating);\r\n            setFoodCategoryName(food_item_detail.food_category_name);\r\n            setFoodDescription(food_item_detail.food_description);\r\n            setFoodName(food_item_detail.food_name);\r\n            setFoodPrice(food_item_detail.food_price);\r\n            setImageUrl(food_item_detail.image_url);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food item detail!');\r\n        }\r\n\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL_BY_ID + \"?food_item_id=\" + food_item_id\r\n        });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/customer/food_shop/' + foodShopId);\r\n    }\r\n\r\n    const handleAddItemToCart = () => {\r\n        if (quantity <= 0) {\r\n            return message.error('Sorry, quantity can not be zero!');\r\n        }\r\n\r\n        context.addProductToCart({\r\n            food_item_id: foodItemId,\r\n            food_name: foodName,\r\n            food_price: foodPrice,\r\n            quantity: quantity\r\n        });\r\n\r\n        return props.history.push('/customer/food_shop/' + foodShopId);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button style={{ float: 'left' }} type=\"primary\" onClick={handleGoBack}>Go Back</Button>\r\n            <br />\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <img\r\n                        alt=\"food_item\"\r\n                        src={imageUrl}\r\n                        style={{ width: '80%' }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={2}>{foodName}</Typography.Title>\r\n                    <Typography.Text>Description: {foodDescription}</Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>Price: ${foodPrice}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>Category: {foodCategoryName}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Rating:\r\n                        {foodAverageRating ?\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodAverageRating}\r\n                            /> :\r\n                            '   Not Available'}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title\r\n                        level={5}\r\n                        style={{ marginTop: '2%', marginRight: '2%', float: 'left' }}>\r\n                        Quantity:\r\n                    </Typography.Title>\r\n                    <Button\r\n                        shape=\"circle\"\r\n                        size=\"small\"\r\n                        icon={<MinusOutlined />}\r\n                        style={{ margin: '2%' }}\r\n                        disabled={active ? false : true}\r\n                        onClick={() => {\r\n                            if (quantity >= 1) {\r\n                                setQuantity(pre => pre - 1);\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Typography.Text>{quantity}</Typography.Text>\r\n                    <Button\r\n                        shape=\"circle\"\r\n                        size=\"small\"\r\n                        icon={<PlusOutlined />}\r\n                        style={{ margin: '2%' }}\r\n                        disabled={active ? false : true}\r\n                        onClick={() => {\r\n                            setQuantity(pre => pre + 1);\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        style={{ width: '80%', float: 'right' }}\r\n                        disabled={active ? false : true}\r\n                        onClick={handleAddItemToCart}\r\n                    >\r\n                        Add to Cart\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItem;\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport { message } from 'antd';\r\nimport ShopContext from '../../../context/ShopContext';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Paypal = (props) => {\r\n\r\n    const context = useContext(ShopContext);\r\n    const paypal = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        window.paypal.Buttons({\r\n            createOrder: () => {\r\n                return axios({\r\n                    method: 'post',\r\n                    url: CUSTOMER_SERVICE_PATH.CREATE_ORDER,\r\n                    data: {\r\n                        email_address: localStorage.getItem('customerEmail'),\r\n                        item_list: context.cart,\r\n                        hst: props.hst,\r\n                        note: props.note\r\n                    }\r\n                }).then((res) => {\r\n                    if (res.data.success) {\r\n                        return res.data.id\r\n                    } else {\r\n                        return message.error(res.data.message);\r\n                    }\r\n                }).catch(e => {\r\n                    return message.error(e.message);\r\n                });\r\n            },\r\n            onApprove: function (data, actions) {\r\n                return actions.order.capture().then(() => {\r\n\r\n                    axios({\r\n                        method: 'post',\r\n                        url: CUSTOMER_SERVICE_PATH.ADD_ORDER_TO_DATABASE,\r\n                        data: {\r\n                            email_address: localStorage.getItem('customerEmail'),\r\n                            item_list: context.cart,\r\n                            hst: props.hst,\r\n                            note: props.note\r\n                        }\r\n                    }).then((res) => {\r\n                        if (res.data.success) {\r\n                            context.clearCart();\r\n                            return message.success('Purchase Complete');\r\n                        } else {\r\n                            return message.error(res.data.message);\r\n                        }\r\n                    }).catch(e => {\r\n                        return message.error(e.message);\r\n                    });\r\n\r\n                })\r\n            }\r\n        }).render(paypal.current);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paypal;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Input, Row, Col, Divider, Button, Typography } from 'antd';\r\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\r\nimport Paypal from './Paypal';\r\n\r\nimport ShopContext from '../../../context/ShopContext';\r\n\r\nconst Cart = () => {\r\n\r\n    const context = useContext(ShopContext);\r\n\r\n    const [note, setNote] = useState('');\r\n    const [foodTotal, setFoodTotal] = useState(0);\r\n    const [hst, setHst] = useState(0);\r\n    const [checkout, setCheckout] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        let totalAccount = getFoodTotal();\r\n        setFoodTotal(totalAccount);\r\n        setHst(totalAccount * 0.05 + totalAccount * 0.08)\r\n    }, [context.cart]);\r\n\r\n\r\n    const getFoodTotal = () => {\r\n        let total = 0;\r\n        for (let i = 0; i < context.cart.length; i++) {\r\n            total += context.cart[i].food_price * context.cart[i].quantity;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    const handleItemDecrement = (product) => {\r\n        context.deleteProductFromCartByOne(product);\r\n    }\r\n\r\n    const handleItemIncrement = (product) => {\r\n        context.addProductToCartByOne(product);\r\n    }\r\n\r\n    const handleRemoveItem = (product) => {\r\n        context.removeProductFromCart(product);\r\n    }\r\n\r\n    const handlePurchase = () => {\r\n        setCheckout(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                context.cart.length === 0 ?\r\n                    <Typography.Title level={3}>Nothing in the cart</Typography.Title> :\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Quantity</Typography.Title>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Name</Typography.Title>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Price</Typography.Title>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Title level={4}>Sub Total</Typography.Title>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Typography.Title level={4}>Action</Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        {\r\n                            context.cart.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <Row>\r\n                                        <Col span={5}>\r\n                                            <Button\r\n                                                shape=\"circle\"\r\n                                                size=\"small\"\r\n                                                icon={<MinusOutlined />}\r\n                                                style={{ margin: '2%' }}\r\n                                                onClick={() => handleItemDecrement(item)}\r\n                                            />\r\n                                            <Typography.Text>{item.quantity}</Typography.Text>\r\n                                            <Button\r\n                                                shape=\"circle\"\r\n                                                size=\"small\"\r\n                                                icon={<PlusOutlined />}\r\n                                                style={{ margin: '2%' }}\r\n                                                onClick={() => handleItemIncrement(item)}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col span={5}>\r\n                                            <Typography.Text>{item.food_name}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={5}>\r\n                                            <Typography.Text>${item.food_price}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={5}>\r\n                                            <Typography.Text>${Math.floor(item.food_price * item.quantity * 100) / 100}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={4}>\r\n                                            <Button\r\n                                                danger\r\n                                                onClick={() => handleRemoveItem(item)}\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <Divider />\r\n                        <Typography.Title level={5} >\r\n                            Please add note for your order\r\n                        </Typography.Title>\r\n                        <br />\r\n                        <Input.TextArea\r\n                            rows={5}\r\n                            value={note}\r\n                            onChange={e => setNote(e.target.value)}\r\n                            placeholder=\"eg. please add ketchup\"\r\n                        />\r\n                        <Divider />\r\n                        <div>\r\n                            {\r\n                                checkout ?\r\n                                    <Paypal\r\n                                        hst={hst}\r\n                                        note={note}\r\n                                    /> :\r\n                                    <></>\r\n                            }\r\n                        </div>\r\n\r\n                        <Typography.Title level={5} >Foods: ${Math.floor((foodTotal) * 100) / 100}</Typography.Title>\r\n                        <Typography.Title level={5} >HST: ${Math.floor((hst) * 100) / 100}</Typography.Title>\r\n                        <Typography.Title level={3} >Total: ${Math.floor((foodTotal + hst) * 100) / 100}</Typography.Title>\r\n                        <br />\r\n                        <Button\r\n                            onClick={handlePurchase}\r\n                            type=\"primary\"\r\n                            block\r\n                            style={{ float: 'right' }}\r\n                        >\r\n                            Purchase\r\n                        </Button>\r\n\r\n\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Divider, message, Avatar, AutoComplete } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\n\r\nconst EditProfile = () => {\r\n\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n\r\n    const [oldEmailAddress, setOldEmailAddress] = useState(null);\r\n    const [newEmailAddress, setNewEmailAddress] = useState(null);\r\n\r\n    const [oldPhone, setOldPhone] = useState(null);\r\n    const [newPhone, setNewPhone] = useState(null);\r\n\r\n    const [newPassword, setNewPassword] = useState(null);\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(null);\r\n\r\n    const [address, setAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n\r\n    const [customerId, setCustomerId] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let customerDetail = await getCustomerDetail(localStorage.getItem('customerEmail'));\r\n\r\n            setFirstName(customerDetail.first_name);\r\n            setLastName(customerDetail.last_name);\r\n\r\n            setOldEmailAddress(customerDetail.email_address);\r\n            setNewEmailAddress(customerDetail.email_address);\r\n\r\n            setOldPhone(customerDetail.phone);\r\n            setNewPhone(customerDetail.phone);\r\n\r\n            setCustomerId(customerDetail.customer_id);\r\n            setAvatarUrl(customerDetail.avatar_url);\r\n\r\n            setAddress(customerDetail.address);\r\n            setLat(customerDetail.lat);\r\n            setLon(customerDetail.lon);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const getCustomerDetail = async (email_address) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_CUSTOMER_DETAIL + \"?email_address=\" + email_address });\r\n        return result.data.data;\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleChangeAvatar = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.CUSTOMER_UPLOAD_AVATAR + \"?id=\" + customerId,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Avatar Successful');\r\n                return setAvatarUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Avatar fail, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (firstName &&\r\n                lastName &&\r\n                oldEmailAddress &&\r\n                newEmailAddress &&\r\n                oldPhone &&\r\n                newPhone &&\r\n                newPassword &&\r\n                confirmNewPassword &&\r\n                customerId &&\r\n                address &&\r\n                lat &&\r\n                lon) {\r\n\r\n                if (newPassword !== confirmNewPassword) {\r\n                    return message.error(\"Confirm password is not same as the new password you set. Please try again!\");\r\n                } else {\r\n\r\n                    let data = {\r\n                        first_name: firstName,\r\n                        last_name: lastName,\r\n                        old_email_address: oldEmailAddress,\r\n                        new_email_address: newEmailAddress,\r\n                        old_phone: oldPhone,\r\n                        new_phone: newPhone,\r\n                        password: newPassword,\r\n                        customer_id: customerId,\r\n                        address: address,\r\n                        lat: lat,\r\n                        lon: lon,\r\n                        avatar_url: avatarUrl\r\n                    };\r\n\r\n                    let result = await axios({\r\n                        method: 'post',\r\n                        url: CUSTOMER_SERVICE_PATH.UPDATE_CUSTOMER_PROFILE,\r\n                        data: data\r\n                    });\r\n                    if (result.data.success) {\r\n                        return message.success('Update profile successful!');\r\n                    } else {\r\n                        return message.error('Update fail, pleaes try again!');\r\n                    }\r\n\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.response.data.message);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <div style={{ marginLeft: '40%' }}>\r\n                    {\r\n                        avatarUrl ?\r\n                            <Avatar size={128} src={avatarUrl} /> :\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                    }\r\n                </div>\r\n                <br /><br />\r\n                <Input\r\n                    size=\"large\"\r\n                    style={{ width: '90%' }}\r\n                    type=\"file\"\r\n                    accept=\"image/jpeg,image/jpg,image/png\"\r\n                    id=\"imageFile\"\r\n                    onChange={handleChangeAvatar}\r\n                />\r\n            </div>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>First Name</Typography.Title>\r\n                    <Input\r\n                        size=\"large\"\r\n                        type=\"text\"\r\n                        id=\"firstName\"\r\n                        style={{ width: '80%' }}\r\n                        onChange={e => setFirstName(e.target.value)}\r\n                        value={firstName}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>Last Name</Typography.Title>\r\n                    <Input\r\n                        size=\"large\"\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                        style={{ width: '80%' }}\r\n                        onChange={e => setLastName(e.target.value)}\r\n                        value={lastName}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>Email Address</Typography.Title>\r\n                    <Input\r\n                        size=\"large\"\r\n                        type=\"email\"\r\n                        placeholder=\"abc@abc.com\"\r\n                        id=\"emailAddress\"\r\n                        style={{ width: '80%' }}\r\n                        onChange={e => setNewEmailAddress(e.target.value)}\r\n                        value={newEmailAddress}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>Phone Number</Typography.Title>\r\n                    <Input\r\n                        size=\"large\"\r\n                        type=\"tel\"\r\n                        pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                        placeholder=\"(111) 111-1111\"\r\n                        id=\"phone\"\r\n                        style={{ width: '80%' }}\r\n                        onChange={e => setNewPhone(e.target.value)}\r\n                        value={newPhone}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        New Password\r\n                    </Typography.Title>\r\n                    <Input.Password\r\n                        size=\"large\"\r\n                        style={{ width: '80%' }}\r\n                        id=\"newPassword\"\r\n                        placeholder=\"New Password\"\r\n                        value={newPassword}\r\n                        onChange={e => setNewPassword(e.target.value)}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Confirm Your Password\r\n                    </Typography.Title>\r\n                    <Input\r\n                        size=\"large\"\r\n                        style={{ width: '80%' }}\r\n                        type=\"password\"\r\n                        id=\"confirmNewPassword\"\r\n                        placeholder=\"Confirm New Password\"\r\n                        value={confirmNewPassword}\r\n                        onChange={e => setConfirmNewPassword(e.target.value)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Typography.Title level={5} >\r\n                Configure Your Address for Shopping Here\r\n            </Typography.Title>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    {\r\n                        lat && lon &&\r\n                        <img\r\n                            style={{ width: '90%' }}\r\n                            src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                            alt=\"map\"\r\n                        />\r\n                    }\r\n                </Col>\r\n                <Col span={12}>\r\n                    <AutoComplete\r\n                        size=\"large\"\r\n                        style={{ width: '80%' }}\r\n                        id=\"addressText\"\r\n                        options={possibleAddressList}\r\n                        onSearch={getPossibleAddressList}\r\n                        onSelect={updateCoord}\r\n                        required\r\n                    />\r\n                    <br /><br />\r\n                    <Typography.Title level={5} style={{ marginLeft: '20px' }}>Address: {address ? address : ''}</Typography.Title>\r\n                    <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                    <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Button type=\"primary\" size=\"large\" block onClick={handleSubmit}>\r\n                Edit Profile\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Card, Typography } from 'antd';\r\nimport { StarOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst MyFavourite = () => {\r\n\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFavouriteFoodShops(localStorage.getItem('customerEmail'));\r\n            setFoodShopList(result);\r\n        } catch (e) {\r\n            return message.error('Sorry, could not get favourite food shops!');\r\n        }\r\n    }, []);\r\n\r\n    const getFavouriteFoodShops = async (email_address) => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_FAVOURITE_FOOD_SHOPS + \"?email_address=\" + email_address });\r\n        return results.data.data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                foodShopList.length === 0 ?\r\n                    <Typography.Title level={3}>No Favourite Shops in List</Typography.Title> :\r\n                    <></>\r\n            }\r\n            {\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/customer/food_shop/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={\r\n                                    <div>\r\n                                        <p>{item.working_address}</p>\r\n                                        <p>{item.food_shop_category_name}\r\n                                            <span style={{ float: 'right' }}><StarOutlined /></span>\r\n                                        </p>\r\n\r\n                                    </div>\r\n                                } />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyFavourite;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Card, Typography } from 'antd';\r\nimport { StarOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst SearchResults = (props) => {\r\n\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getSearchResults(props.match.params.text, localStorage.getItem('customerEmail'));\r\n            setFoodShopList(result);\r\n        } catch (e) {\r\n            return message.error('Sorry, could not get search reaults!');\r\n        }\r\n    }, [props.match.params.text]);\r\n\r\n    const getSearchResults = async (text, email_address) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_SEARCH_RESULTS + \"?text=\" + text + \"&&email_address=\" + email_address\r\n        });\r\n\r\n        return results.data.data;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                foodShopList.length === 0 ?\r\n                    <Typography.Title level={3}>No result found</Typography.Title> :\r\n                    <></>\r\n            }\r\n            {\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/customer/food_shop/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                style={{ height: 400 }}\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={\r\n                                    <div>\r\n                                        <p>{item.working_address}</p>\r\n                                        <p>{item.food_shop_category_name}\r\n                                            {\r\n                                                item.on_favourite ?\r\n                                                    <span style={{ float: 'right' }}><StarOutlined /></span> :\r\n                                                    <></>\r\n                                            }\r\n                                        </p>\r\n\r\n                                    </div>\r\n                                } />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button, Typography, message } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst CurrentOrder = (props) => {\r\n\r\n    const [orderList, setOrderList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let results = await getCurrentOrders(localStorage.getItem('customerEmail'));\r\n            setOrderList(results);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get current orders!');\r\n        }\r\n    }, []);\r\n\r\n    const getCurrentOrders = async (email_address) => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_CURRENT_ORDERS + \"?email_address=\" + email_address });\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleSeeDetail = (order_id) => {\r\n        return props.history.push('/customer/order_detail/' + order_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                orderList.length === 0 ?\r\n                    <Typography.Title level={3}>You have no current orders yet</Typography.Title> :\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Order ID</Typography.Title>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Created At</Typography.Title>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Status</Typography.Title>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Action</Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        {\r\n                            orderList.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <Row>\r\n                                        <Col span={6}>\r\n                                            <Typography.Text style={{ paddingLeft: '10%' }}>{item.order_id}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Typography.Text>{item.created_at}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Typography.Text>{item.order_status_name}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Button type=\"primary\" onClick={() => handleSeeDetail(item.order_id)}>See Detail</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button, Typography, message } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst OrderHistory = (props) => {\r\n\r\n    const [orderList, setOrderList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let results = await getOrderHistory(localStorage.getItem('customerEmail'));\r\n            setOrderList(results);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get order history!');\r\n        }\r\n    }, []);\r\n\r\n    const getOrderHistory = async (email_address) => {\r\n        let results = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_ORDER_HISTORY + \"?email_address=\" + email_address });\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleSeeDetail = (order_id) => {\r\n        return props.history.push('/customer/order_detail/' + order_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                orderList.length === 0 ?\r\n                    <Typography.Title level={3}>You have no orders in history</Typography.Title> :\r\n                    <div>\r\n                        <Row>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Order ID</Typography.Title>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Created At</Typography.Title>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Status</Typography.Title>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Typography.Title level={4}>Action</Typography.Title>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        {\r\n                            orderList.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <Row>\r\n                                        <Col span={6}>\r\n                                            <Typography.Text style={{ paddingLeft: '10%' }}>{item.order_id}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Typography.Text>{item.created_at}</Typography.Text>\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            {\r\n                                                item.order_status_name === 'COMPLETE' ?\r\n                                                    <Typography.Text style={{ color: 'green', fontWeight: 'bold' }}>{item.order_status_name}</Typography.Text> :\r\n                                                    <Typography.Text>{item.order_status_name}</Typography.Text>\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={6}>\r\n                                            <Button type=\"primary\" onClick={() => handleSeeDetail(item.order_id)}>See Detail</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { message, Row, Col, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst OrderDetail = (props) => {\r\n\r\n    const [completedAt, setCompletedAt] = useState(null);\r\n    const [createdAt, setCreatedAt] = useState(null);\r\n    const [hst, setHst] = useState(0);\r\n    const [note, setNote] = useState('');\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const [orderId, setOrderId] = useState(0);\r\n    const [orderItems, setOrderItems] = useState([]);\r\n    const [orderStatusName, setOrderStatusName] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOrderDetail(props.match.params.order_id);\r\n\r\n            setCompletedAt(result.completed_at);\r\n            setCreatedAt(result.created_at);\r\n            setHst(result.hst);\r\n            setNote(result.note);\r\n            setTotal(result.total);\r\n\r\n            setOrderId(result.order_id);\r\n            setOrderItems(result.order_items);\r\n            setOrderStatusName(result.order_status_name);\r\n        } catch (e) {\r\n            message.error('Sorry, fail to get order detail!');\r\n            return props.history.push('/customer/');\r\n        }\r\n    }, []);\r\n\r\n    const getOrderDetail = async (order_id) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_ORDER_DETAIL + \"?order_id=\" + order_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleSeeComments = (food_item_id) => {\r\n        return props.history.push(\"/customer/food_see_comments/\" + food_item_id);\r\n    }\r\n\r\n    const handleAddComment = (food_item_id) => {\r\n        return props.history.push('/customer/food_add_comment/' + food_item_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={2}>Order ID: {orderId}</Typography.Title>\r\n            <Typography.Title level={4}>Created At: {createdAt}</Typography.Title>\r\n            <Typography.Title level={4}>Completed At: {completedAt ? completedAt : 'Not Available'}</Typography.Title>\r\n            <Typography.Title level={4}>Status: {orderStatusName === 'COMPLETE' ? (<span style={{ color: 'green', fontWeight: 'bold' }}>{orderStatusName}</span>) : (<span>{orderStatusName}</span>)}</Typography.Title>\r\n            <br />\r\n            <Typography.Text>Note: {note}</Typography.Text>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Typography.Title level={4}>Food Name</Typography.Title>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Typography.Title level={4}>Food Price</Typography.Title>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Typography.Title level={4}>Quantity</Typography.Title>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Typography.Title level={4}>Sub Total</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={4} style={{ paddingLeft: '30%' }}>Action</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                orderItems.map((item, index) => (\r\n                    <div key={index}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Typography.Text>{item.food_name}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Typography.Text>$ {Math.floor(item.food_price * 100) / 100}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Typography.Text>{item.quantity}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Typography.Text>$ {Math.floor(item.sub_total * 100) / 100}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Button disabled={orderStatusName === 'PREPARING'} style={{ marginRight: '3%' }} type=\"primary\" onClick={() => handleSeeComments(item.food_item_id)}>See My Comments</Button>\r\n                                <Button disabled={orderStatusName === 'PREPARING'} type=\"primary\" onClick={() => handleAddComment(item.food_item_id)}>Add New Comment</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                    </div>\r\n                ))\r\n            }\r\n            <Divider />\r\n            <Typography.Title level={5}>Food Total: $ {Math.floor(total * 100) / 100}</Typography.Title>\r\n            <Typography.Title level={5}>HST: $ {Math.floor(hst * 100) / 100}</Typography.Title>\r\n            <Typography.Title level={4}>Total: $ {Math.floor((total + hst) * 100) / 100}</Typography.Title>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetail;","import React, { useState, useEffect } from 'react';\r\nimport { message, Row, Col, Typography, Button, Rate, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst FoodAddComment = (props) => {\r\n\r\n    const [foodItemId, setFoodItemId] = useState(0);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n\r\n    const [rating, setRating] = useState(null);\r\n    const [comment, setComment] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let food_item_detail = await getFoodItemDetail(props.match.params.food_item_id);\r\n\r\n            setFoodItemId(food_item_detail.food_item_id);\r\n            setFoodName(food_item_detail.food_name);\r\n            setImageUrl(food_item_detail.image_url);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get food item detail!');\r\n        }\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL_BY_ID + \"?food_item_id=\" + food_item_id\r\n        });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (!rating) {\r\n                return message.error('You must provide your rating!');\r\n            }\r\n\r\n            let data = {\r\n                food_item_id: foodItemId,\r\n                email_address: localStorage.getItem('customerEmail'),\r\n                comment: comment,\r\n                rating: rating\r\n            };\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.ADD_NEW_COMMENT,\r\n                data: data\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Thank you for your feedback!');\r\n                return props.history.push('/customer/');\r\n            } else {\r\n                return message.error('Sorry, fail to add comment, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to submit comment!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    {\r\n                        imageUrl && <img src={imageUrl} alt=\"food\" style={{ width: '70%' }} />\r\n                    }\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={3}>{foodName}</Typography.Title>\r\n                    <br />\r\n                    <Typography.Title level={5}>Provide your rating here</Typography.Title>\r\n                    <Rate\r\n                        style={{ backgroundColor: 'white', padding: '1%' }}\r\n                        value={rating}\r\n                        onChange={(value) => setRating(value)}\r\n                    />\r\n                    <br /><br />\r\n                    <Typography.Title level={5}>Provide your comment here (Optional)</Typography.Title>\r\n                    <Input.TextArea\r\n                        rows={5}\r\n                        value={comment}\r\n                        onChange={e => setComment(e.target.value)}\r\n                    />\r\n                    <br /><br />\r\n                    <Button type=\"primary\" block onClick={handleSubmit}>Submit</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodAddComment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { message, Typography, Button, Rate, Divider, Table } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst FoodSeeComments = (props) => {\r\n\r\n    const [foodName, setFoodName] = useState('');\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [commentList, setCommentList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getCommentList(localStorage.getItem('customerEmail'), props.match.params.food_item_id);\r\n\r\n            setFoodName(result.food_name);\r\n            setImageUrl(result.image_url);\r\n\r\n            let comment_list = result.comment_list;\r\n            for (let i = 0; i < comment_list.length; i++) {\r\n                comment_list[i].key = i;\r\n            }\r\n\r\n            setCommentList(comment_list);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get comment list!');\r\n        }\r\n    }, []);\r\n\r\n    const getCommentList = async (email_address, food_item_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_COMMENT_LIST + \"?email_address=\" + email_address + \"&&food_item_id=\" + food_item_id\r\n        });\r\n\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleEditComment = (food_comment_id) => {\r\n        return props.history.push(\"/customer/food_edit_comment/\" + food_comment_id);\r\n    }\r\n\r\n    const handleDeleteComment = async (food_comment_id) => {\r\n        console.log(\"delete \" + food_comment_id);\r\n        try {\r\n            let data = {\r\n                food_comment_id: food_comment_id\r\n            };\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.DELETE_COMMENT,\r\n                data: data\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Delete comment successful!');\r\n\r\n                let result = await getCommentList(localStorage.getItem('customerEmail'), props.match.params.food_item_id);\r\n                let comment_list = result.comment_list;\r\n                for (let i = 0; i < comment_list.length; i++) {\r\n                    comment_list[i].key = i;\r\n                }\r\n                setCommentList(comment_list);\r\n\r\n            } else {\r\n                return message.error('Fail to delete comment, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Fail to delete comment, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                imageUrl &&\r\n                <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                    <img alt=\"food\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n                </div>\r\n            }\r\n            <br />\r\n            <Typography.Title level={3}>Your Comments for {foodName}</Typography.Title>\r\n            <Divider />\r\n            <Table\r\n                bordered\r\n                dataSource={commentList}\r\n                columns={[\r\n                    {\r\n                        title: 'Comment ID',\r\n                        dataIndex: 'food_comment_id'\r\n                    },\r\n                    {\r\n                        title: 'Created At',\r\n                        dataIndex: 'created_at'\r\n                    },\r\n                    {\r\n                        title: 'Rating',\r\n                        dataIndex: 'rating',\r\n                        render: rating => <Rate disabled value={rating} />\r\n                    },\r\n                    {\r\n                        title: 'Comment',\r\n                        dataIndex: 'comment',\r\n                    },\r\n                    {\r\n                        title: 'Action',\r\n                        dataIndex: 'food_comment_id',\r\n                        render: food_comment_id =>\r\n                            <div>\r\n                                <Button type=\"primary\" style={{ marginRight: '5%' }} onClick={() => handleEditComment(food_comment_id)}>Edit</Button>\r\n                                <Button type=\"primary\" onClick={() => handleDeleteComment(food_comment_id)}>Delete</Button>\r\n                            </div>\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodSeeComments;\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n","import React, { useState, useEffect } from 'react';\r\nimport { message, Row, Col, Typography, Button, Rate, Input } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst FoodEditComment = (props) => {\r\n\r\n    const [foodCommentId, setFoodCommentId] = useState(0);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [comment, setComment] = useState('');\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [rating, setRating] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getCommentDetail(props.match.params.food_comment_id);\r\n\r\n            setFoodCommentId(result.food_comment_id);\r\n            setFoodName(result.food_name);\r\n            setComment(result.comment);\r\n            setImageUrl(result.image_url);\r\n            setRating(result.rating);\r\n\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get comment detail!');\r\n        }\r\n    }, []);\r\n\r\n    const getCommentDetail = async (food_comment_id) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_COMMENT_DETAIL + \"?food_comment_id=\" + food_comment_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleEdit = async () => {\r\n        try {\r\n\r\n            let data = {\r\n                comment: comment,\r\n                rating: rating,\r\n                food_comment_id: foodCommentId\r\n            };\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: CUSTOMER_SERVICE_PATH.EDIT_COMMENT,\r\n                data: data\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Edit feedback successful!');\r\n                return props.history.push('/customer/');\r\n            } else {\r\n                return message.error('Sorry, fail to edit comment, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to edit comment!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    {\r\n                        imageUrl && <img src={imageUrl} alt=\"food\" style={{ width: '70%' }} />\r\n                    }\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={3}>{foodName}</Typography.Title>\r\n                    <br />\r\n                    <Typography.Title level={5}>Edit your rating here</Typography.Title>\r\n                    <Rate\r\n                        style={{ backgroundColor: 'white', padding: '1%' }}\r\n                        value={rating ? rating : 0}\r\n                        onChange={(value) => setRating(value)}\r\n                    />\r\n                    <br /><br />\r\n\r\n                    <Typography.Title level={5}>Edit your comment here</Typography.Title>\r\n                    <Input.TextArea\r\n                        rows={5}\r\n                        value={comment}\r\n                        onChange={e => setComment(e.target.value)}\r\n                    />\r\n                    <br /><br />\r\n                    <Button type=\"primary\" block onClick={handleEdit}>Edit</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodEditComment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { message, Typography, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport CUSTOMER_SERVICE_PATH from '../../../config/CUSTOMER_API_URL';\r\n\r\nconst Help = () => {\r\n\r\n    const [helpList, setHelpList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let results = await getHelpList();\r\n            setHelpList(results);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get data');\r\n        }\r\n    }, []);\r\n\r\n    const getHelpList = async () => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: CUSTOMER_SERVICE_PATH.GET_QUESTION_ANSWER\r\n        });\r\n\r\n        return results.data.data;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                helpList.map((item, index) => (\r\n                    <div key={index}>\r\n                        <Typography.Title level={3}>{item.question_content}</Typography.Title>\r\n                        <Typography.Text>{item.answer_content}</Typography.Text>\r\n                        <br />\r\n                        <Divider />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Help;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Layout, message, Spin, Input, Avatar, Row, Col, Divider, Menu, Dropdown, Badge } from 'antd';\r\nimport { ShoppingCartOutlined, UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CUSTOMER_SERVICE_PATH from '../../config/CUSTOMER_API_URL';\r\nimport '../../static/css/customer_css/header.css';\r\nimport '../../static/css/customer_css/content.css';\r\n\r\nimport Footer from './components/Footer';\r\nimport Home from './components/Home';\r\nimport FoodShop from './components/FoodShop';\r\nimport FoodItem from './components/FoodItem';\r\nimport Cart from './components/Cart';\r\nimport EditProfile from './components/EditProfile';\r\nimport MyFavourite from './components/MyFavourite';\r\nimport SearchResults from './components/SearchResults';\r\nimport CurrentOrder from './components/CurrentOrder';\r\nimport OrderHistory from './components/OrderHistory';\r\nimport OrderDetail from './components/OrderDetail';\r\nimport FoodAddComment from './components/FoodAddComment';\r\nimport FoodSeeComments from './components/FoodSeeComments';\r\nimport FoodEditComment from './components/FoodEditComment';\r\nimport Help from './components/Help';\r\n\r\nimport ShopContext from '../../context/ShopContext';\r\n\r\nconst CustomerIndex = (props) => {\r\n\r\n    const context = useContext(ShopContext);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            if (!(localStorage.getItem('customerSessionId') &&\r\n                localStorage.getItem('customerEmail'))) {\r\n                return props.history.push('/customer/login');\r\n            }\r\n\r\n            let customerDetail = await getCustomerDetail(localStorage.getItem('customerEmail'));\r\n            setAvatarUrl(customerDetail.avatar_url);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + customerDetail.first_name + \" \" + customerDetail.last_name);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getCustomerDetail = async (email_address) => {\r\n        let result = await axios({ method: 'get', url: CUSTOMER_SERVICE_PATH.GET_CUSTOMER_DETAIL + \"?email_address=\" + email_address });\r\n        return result.data.data;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: CUSTOMER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('customerSessionId');\r\n                localStorage.removeItem('customerEmail');\r\n                message.success(res.data.message);\r\n\r\n                context.clearCart();\r\n                return props.history.push('/customer/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleSearch = (text) => {\r\n        if (!text) {\r\n            return message.warn('Search text can not be blank!');\r\n        }\r\n        return props.history.push('/customer/search_results/' + text);\r\n    }\r\n\r\n    const handleCartOnclick = () => {\r\n        return props.history.push('/customer/cart');\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '1':\r\n                props.history.push('/customer/current_order');\r\n                break;\r\n            case '2':\r\n                props.history.push('/customer/order_history');\r\n                break;\r\n            case '3':\r\n                props.history.push('/customer/edit_profile');\r\n                break;\r\n            case '4':\r\n                props.history.push('/customer/my_favourite');\r\n                break;\r\n            case '6':\r\n                props.history.push('/customer/help');\r\n                break;\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    const menu = (\r\n        <Menu onClick={handleMenuClick}>\r\n            <Menu.Item key=\"1\" style={{ borderBottom: '1px solid black' }}>Current Order</Menu.Item>\r\n            <Menu.Item key=\"2\">Order History</Menu.Item>\r\n            <Menu.Item key=\"3\">Profile</Menu.Item>\r\n            <Menu.Item key=\"4\">My Favourite</Menu.Item>\r\n            <Menu.Item key=\"6\">Help</Menu.Item>\r\n            <Menu.Item key=\"7\">Log Out</Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <div className=\"header\">\r\n                    <Row type=\"flex\" justify=\"center\">\r\n                        <Col xs={24} sm={24} md={8} lg={12} xl={12}>\r\n                            <Link to=\"/customer/\">\r\n                                <span className=\"header-logo\">{helloTitle}</span>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={16} lg={10} xl={8}>\r\n                            <Input.Search\r\n                                allowClear\r\n                                enterButton\r\n                                style={{ width: '60%', margin: '1% auto' }}\r\n                                placeholder=\"Search what you want\"\r\n                                onSearch={handleSearch}\r\n                            />\r\n                            <span\r\n                                onClick={handleCartOnclick}\r\n                                style={{ cursor: 'pointer', margin: '3%' }}\r\n                            >\r\n                                <Badge count={context.cart.length}>\r\n                                    <Avatar\r\n                                        size=\"large\"\r\n                                        icon={<ShoppingCartOutlined />}\r\n                                    />\r\n                                </Badge>\r\n                            </span>\r\n                            <span\r\n                                style={{ cursor: 'pointer' }}\r\n                            >\r\n                                <Dropdown\r\n                                    overlay={menu}\r\n                                    placement=\"bottomCenter\"\r\n                                >\r\n                                    {\r\n                                        avatarUrl ?\r\n                                            <Avatar size=\"large\" src={avatarUrl} /> :\r\n                                            <Avatar size=\"large\" icon={<UserOutlined />} />\r\n                                    }\r\n                                </Dropdown>\r\n                            </span>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Layout className=\"comm-main\">\r\n                    <Layout.Content style={{ margin: '10px 5%' }}>\r\n                        <div style={{ padding: 24, minHeight: 360 }}>\r\n                            <Route path=\"/customer/\" exact component={Home} />\r\n                            <Route path=\"/customer/food_shop/:food_shop_id\" exact component={FoodShop} />\r\n                            <Route path=\"/customer/food_item/:food_item_id\" exact component={FoodItem} />\r\n                            <Route path=\"/customer/cart\" exact component={Cart} />\r\n                            <Route path=\"/customer/edit_profile\" exact component={EditProfile} />\r\n                            <Route path=\"/customer/my_favourite\" exact component={MyFavourite} />\r\n                            <Route path=\"/customer/search_results/:text\" exact component={SearchResults} />\r\n                            <Route path=\"/customer/current_order\" exact component={CurrentOrder} />\r\n                            <Route path=\"/customer/order_history\" exact component={OrderHistory} />\r\n                            <Route path=\"/customer/order_detail/:order_id\" exact component={OrderDetail} />\r\n                            <Route path=\"/customer/food_add_comment/:food_item_id\" exact component={FoodAddComment} />\r\n                            <Route path=\"/customer/food_see_comments/:food_item_id\" exact component={FoodSeeComments} />\r\n                            <Route path=\"/customer/food_edit_comment/:food_comment_id\" exact component={FoodEditComment} />\r\n                            <Route path=\"/customer/help\" exact component={Help} />\r\n                        </div>\r\n                    </Layout.Content>\r\n                </Layout>\r\n                <Divider />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerIndex;\r\n\r\n/*\r\n\r\n, Redirect\r\n\r\n<Menu.Item key=\"5\">Message</Menu.Item>\r\n\r\n*/\r\n","const IP_URL = \"http://144.34.175.242/api/manager_api/\";\r\nconst IP_URL_FOOD_SHOP = \"http://144.34.175.242/api/manager_food_shop_api/\";\r\nconst IP_URL_FOOD_ITEM = \"http://144.34.175.242/api/manager_food_item_api/\";\r\nconst IP_URL_ORDER = \"http://144.34.175.242/api/manager_order_api/\";\r\nconst IP_URL_COMMENT = \"http://144.34.175.242/api/manager_comment_api/\";\r\nconst IP_URL_REPORT = \"http://144.34.175.242/api/manager_report_api/\";\r\nconst APPLICATION_URL = 'http://144.34.175.242/manager/';\r\n\r\n// const IP_URL = \"http://localhost:7000/manager_api/\";\r\n// const IP_URL_FOOD_SHOP = \"http://localhost:7000/manager_food_shop_api/\";\r\n// const IP_URL_FOOD_ITEM = \"http://localhost:7000/manager_food_item_api/\";\r\n// const IP_URL_ORDER = \"http://localhost:7000/manager_order_api/\";\r\n// const IP_URL_COMMENT = \"http://localhost:7000/manager_comment_api/\";\r\n// const IP_URL_REPORT = \"http://localhost:7000/manager_report_api/\";\r\n// const APPLICATION_URL = 'http://localhost:3000/manager/';\r\n\r\nconst MANAGER_SERVICE_PATH = {\r\n    DEFAULT_URL: IP_URL,\r\n    APPLICATION_URL: APPLICATION_URL,\r\n    REGISTER_URL: IP_URL + \"manager_register/\",\r\n    LOGIN_URL: IP_URL + \"manager_login/\",\r\n    LOGOUT_URL: IP_URL + \"manager_logout/\",\r\n    RESET_PASSWORD: IP_URL + \"manager_password_reset/\",\r\n    GET_MANAGER_DETAIL: IP_URL + \"manager_detail\",\r\n    UPDATE_MANAGER_ACCOUNT: IP_URL + \"manager_update_account\",\r\n    UPDATE_MANAGER_PROFILE: IP_URL + \"manager_update_profile\",\r\n    MANAGER_UPLOAD_AVATAR: IP_URL + \"manager_upload_avatar\",\r\n\r\n    ADD_FOOD_SHOP_URL: IP_URL_FOOD_SHOP + \"add_food_shop\",\r\n    ADD_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"add_food_category\",\r\n    GET_FOOD_SHOP_LIST: IP_URL_FOOD_SHOP + \"get_food_shops_by_manager\",\r\n    GET_FOOD_SHOP_DETAIL: IP_URL_FOOD_SHOP + \"get_food_shops_by_food_shop\",\r\n    GET_FOOD_SHOP_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_all_food_shop_category\",\r\n    GET_ALL_MATCH_FOOD_CATEGORY: IP_URL_FOOD_SHOP + \"get_match_food_category\",\r\n    UPDATE_FOOD_SHOP_ACTIVE: IP_URL_FOOD_SHOP + \"update_food_shop_active\",\r\n    UPDATE_FOOD_SHOP: IP_URL_FOOD_SHOP + \"update_food_shop\",\r\n    UPLOAD_FOOD_SHOP_IMAGE: IP_URL_FOOD_SHOP + \"upload_food_shop_image\",\r\n\r\n    ADD_FOOD_ITEM_URL: IP_URL_FOOD_ITEM + \"add_food_item\",\r\n    GET_FOOD_ITEM_LIST: IP_URL_FOOD_ITEM + \"get_all_food_item_by_category\",\r\n    GET_FOOD_ITEM_CATEGORY_LIST: IP_URL_FOOD_SHOP + \"get_food_category_by_food_shop\",\r\n    GET_FOOD_ITEM_DETAIL: IP_URL_FOOD_ITEM + \"get_food_item_by_food_item_id\",\r\n    UPDATE_FOOD_ITEM: IP_URL_FOOD_ITEM + \"update_food_item\",\r\n    UPLOAD_FOOD_ITEM_IMAGE: IP_URL_FOOD_ITEM + \"upload_food_item_image\",\r\n    DELETE_FOOD_ITEM: IP_URL_FOOD_ITEM + \"delete_food_item\",\r\n\r\n    GET_CURRENT_ORDERS: IP_URL_ORDER + \"get_current_orders\",\r\n    GET_ORDER_HISTORY: IP_URL_ORDER + \"get_order_history\",\r\n    GET_ORDER_DETAIL: IP_URL_ORDER + \"get_order_detail\",\r\n    COMPLETE_ORDER: IP_URL_ORDER + \"complete_order\",\r\n\r\n    GET_COMMENT_LIST: IP_URL_COMMENT + \"get_comment_list_by_item_id\",\r\n\r\n    GET_REPORT_INITIAL_STATE: IP_URL_REPORT + \"get_initial_state\",\r\n    GET_SALES_BY_TIME_PERIOD: IP_URL_REPORT + \"get_sales_by_time_period\",\r\n    GET_SALES_BY_REGION: IP_URL_REPORT + \"get_sales_by_region\",\r\n    GET_SALES_BY_USER_ID: IP_URL_REPORT + \"get_sales_by_user_id\"\r\n}\r\n\r\nexport default MANAGER_SERVICE_PATH;","import React from 'react'\r\nimport '../../../static/css/manager_css/footer.css';\r\nimport { Link } from 'react-router-dom';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-div\">\r\n            {'Copyright © '}\r\n            <Link to={{ pathname: MANAGER_SERVICE_PATH.APPLICATION_URL }} target=\"_blank\">\r\n                Charlie's Food Shop for Managers\r\n            </Link>\r\n            <div>{new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Form, Checkbox } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/login.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerLogIn = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const emailAddress = useRef();\r\n    const password = useRef();\r\n    const rememberMe = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('sessionId')) {\r\n            return props.history.push('/manager');\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (emailAddress.current.state.value && password.current.state.value) {\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'login' })\r\n                    .then((captcha) => {\r\n                        handleLogin(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleLogin = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGIN_URL,\r\n            data: data,\r\n            withCredentials: true\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    if (rememberMe.current.state.checked) {\r\n                        localStorage.setItem('rememberEmail', emailAddress.current.state.value);\r\n                        localStorage.setItem('rememberPass', password.current.state.value);\r\n                    };\r\n                    localStorage.setItem('sessionId', res.data.sessionId);\r\n                    localStorage.setItem('managerEmail', emailAddress.current.state.value);\r\n                    message.success(res.data.message);\r\n\r\n                    return props.history.push('/manager');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Welcome to Charlie's Food Shop for Managers\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Enter Your Email Address\"\r\n                            autoFocus\r\n                            defaultValue={localStorage.getItem('rememberEmail') ? localStorage.getItem('rememberEmail') : null}\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input.Password\r\n                            id=\"password\"\r\n                            size=\"large\"\r\n                            placeholder=\"Enter Your Password\"\r\n                            required\r\n                            defaultValue={localStorage.getItem('rememberPass') ? localStorage.getItem('rememberPass') : null}\r\n                            ref={password}\r\n                            prefix={<KeyOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                        />\r\n                        <br /><br />\r\n                        <Checkbox ref={rememberMe}>Remember me</Checkbox>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>LOG IN</Button>\r\n                        <br /><br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Link to=\"/manager/register\" >Do not have account?</Link>\r\n                            </Col>\r\n                            <Col span={12} style={{ textAlign: 'right' }}>\r\n                                <Link to=\"/manager/reset-password\" >Forget password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerLogIn;","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Row, Col, Typography, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/register.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerRegister = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const firstName = useRef();\r\n    const lastName = useRef();\r\n    const emailAddress = useRef();\r\n    const phoneNumber = useRef();\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstName.current.state.value && lastName.current.state.value &&\r\n            emailAddress.current.state.value && phoneNumber.current.state.value &&\r\n            password.current.state.value && confirmPassword.current.state.value) {\r\n\r\n            if (password.current.state.value !== confirmPassword.current.state.value) {\r\n                return message.error(\"Confirm password is not same as the password you set. Please try again!\");\r\n            }\r\n\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'register' })\r\n                    .then((captcha) => {\r\n                        handleRegister(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleRegister = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            first_name: firstName.current.state.value,\r\n            last_name: lastName.current.state.value,\r\n            email_address: emailAddress.current.state.value,\r\n            phone: phoneNumber.current.state.value,\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.REGISTER_URL,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(res.data.message);\r\n                };\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Create Your Own Manager Account\" style={{ width: 600 }} bordered={true}>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    First Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"firstName\"\r\n                                    placeholder=\"Java\"\r\n                                    ref={firstName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Last Name\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"text\"\r\n                                    id=\"lastName\"\r\n                                    placeholder=\"JavaScript\"\r\n                                    ref={lastName}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Email Address\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"email\"\r\n                                    id=\"emailAddress\"\r\n                                    placeholder=\"abc@abc.com\"\r\n                                    ref={emailAddress}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Phone Number\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"tel\"\r\n                                    pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                                    id=\"phone\"\r\n                                    placeholder=\"(111) 111-1111\"\r\n                                    ref={phoneNumber}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Password\r\n                                </Typography.Title>\r\n                                <Input.Password\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    id=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    ref={password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                                    Confirm Your Password\r\n                                </Typography.Title>\r\n                                <Input\r\n                                    size=\"large\"\r\n                                    style={{ width: '90%' }}\r\n                                    type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    ref={confirmPassword}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Typography.Text type=\"danger\" >\r\n                            Note: Password should be at least 8 characters, with 1 Uppercase, 1 Lowercase, 1 Number and 1 Symbol.\r\n                        </Typography.Text>\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                        <br /><br />\r\n                        <div span={12} style={{ textAlign: 'right' }}>\r\n                            <Link to=\"/manager/login\" >Already have account?</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerRegister;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPassword = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const emailAddress = useRef();\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (emailAddress.current.state.value) {\r\n            if (recaptcha) {\r\n                recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password' })\r\n                    .then((captcha) => {\r\n                        handleResetPassword(captcha)\r\n                    });\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPassword = (captcha) => {\r\n\r\n        setLoading(true);\r\n        let data = {\r\n            email_address: emailAddress.current.state.value,\r\n            captcha: captcha\r\n        };\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                return message.error(e.response.data.message);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Give your email address to reset password\"\r\n                    style={{ width: 400 }}\r\n                    bordered={true}>\r\n                    <Form>\r\n                        <Input\r\n                            id=\"emailAddress\"\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            prefix={<MailOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Your Email Address\"\r\n                            ref={emailAddress}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                        <br /><br />\r\n                        <Link to=\"/manager/login\" >Go Back</Link>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPassword;","import React, { useRef, useState } from 'react';\r\nimport { Card, Input, Button, Spin, message, Form } from 'antd';\r\nimport Recaptcha from 'react-google-invisible-recaptcha';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../../static/css/manager_css/reset_password.css'\r\nimport Footer from './components/Footer';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport KEY from '../../config/KEY';\r\n\r\nconst ManagerResetPasswordToken = (props) => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const password = useRef();\r\n    const confirmPassword = useRef();\r\n\r\n    let reCAPTCHA_site_key = KEY.reCAPTCHA_site_key;\r\n    let recaptcha = null;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password.current.state.value && confirmPassword.current.state.value) {\r\n            if (password.current.state.value === confirmPassword.current.state.value) {\r\n                if (recaptcha) {\r\n                    recaptcha.execute(reCAPTCHA_site_key, { action: 'reset-password-final' })\r\n                        .then((captcha) => {\r\n                            handleResetPasswordFinal(captcha)\r\n                        });\r\n                }\r\n            } else {\r\n                return message.error(\"Confirm password is not same to the password you reset, please try again.\");\r\n            }\r\n        } else {\r\n            return message.error(\"Please complete all the information!\");\r\n        }\r\n    }\r\n\r\n    const handleResetPasswordFinal = (captcha) => {\r\n        setLoading(true);\r\n        let data = {\r\n            password: password.current.state.value,\r\n            captcha: captcha\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.RESET_PASSWORD + props.match.params.token,\r\n            data: data\r\n        })\r\n            .then(res => {\r\n                setLoading(false);\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            })\r\n            .catch(e => {\r\n                setLoading(false);\r\n                if (e.response.data.message === 'Invalid link or expired') {\r\n                    message.error(e.response.data.message);\r\n                    return props.history.push('/manager/login');\r\n                } else {\r\n                    return message.error(e.response.data.message);\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"reset-password-div\">\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Card title=\"Reset your password\" style={{ width: 400 }} bordered={true}>\r\n                    <Form>\r\n                        <Input.Password\r\n                            id=\"resetPassword\"\r\n                            size=\"large\"\r\n                            placeholder=\"New Password Here\"\r\n                            ref={password}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Input\r\n                            id=\"confirmResetPassword\"\r\n                            size=\"large\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            ref={confirmPassword}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                </Card>\r\n                <br /><br />\r\n                <br /><br />\r\n                <Recaptcha\r\n                    ref={ref => recaptcha = ref}\r\n                    sitekey={reCAPTCHA_site_key}\r\n                    onResolved={() => console.log('Human detected.')}\r\n                />\r\n                <Footer />\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerResetPasswordToken;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { message, Row, Col, Card, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopList = (props) => {\r\n\r\n    const [helloTitle, setHelloTitle] = useState('');\r\n    const [foodShopList, setFoodShopList] = useState([]);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            let first_name = managetDetail.data.data.first_name;\r\n            let last_name = managetDetail.data.data.last_name\r\n            let manager_id = managetDetail.data.data.manager_id;\r\n            setManagerId(manager_id);\r\n\r\n            let timeTitle = getTimeTitle();\r\n            setHelloTitle(timeTitle + \", \" + first_name + \" \" + last_name);\r\n\r\n            let list_result = await getFoodShopList(manager_id);\r\n            setFoodShopList(list_result.data.data);\r\n\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }, []);\r\n\r\n    const handleAddFoodShop = () => {\r\n        if (managerId) {\r\n            return props.history.push('/manager/add_food_shop/' + managerId);\r\n        } else {\r\n            return message.error('Manager ID not exist.');\r\n        }\r\n    }\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result;\r\n    }\r\n\r\n    const getFoodShopList = async (manager_id) => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_LIST + \"?manager_id=\" + manager_id });\r\n        return results;\r\n    }\r\n\r\n    const getTimeTitle = () => {\r\n        let hour = (new Date()).getHours();\r\n\r\n        if (hour >= 6 && hour <= 12) {\r\n            return \"Good Morning\";\r\n        } else if (hour > 12 && hour <= 18) {\r\n            return \"Good Afternoon\";\r\n        } else {\r\n            return \"Good Night\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        {helloTitle}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button style={{ float: 'right' }} type=\"primary\" onClick={handleAddFoodShop}>ADD NEW FOOD SHOP</Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            {\r\n\r\n                foodShopList.map((item, index) => (\r\n                    <div style={{ width: 220, float: 'left', margin: '2%' }} key={index}>\r\n                        <Link to={\"/manager/food_shop_detail/\" + item.food_shop_id} >\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img style={{ height: 200 }} alt=\"food_shop\" src={item.image_url} />}\r\n                                bordered={false}>\r\n                                <Card.Meta title={item.food_shop_name} description={item.food_shop_description} />\r\n                            </Card>\r\n                        </Link>\r\n                    </div>\r\n                ))\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst AddFoodShop = (props) => {\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const foodShopName = useRef();\r\n    const description = useRef();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            getLocation();\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getLocation = () => {\r\n        if (navigator.geolocation) {\r\n            try {\r\n                navigator.geolocation.getCurrentPosition(position => {\r\n                    setLat(position.coords.latitude);\r\n                    setLon(position.coords.longitude);\r\n                    updateAddressByCoord(position.coords.latitude, position.coords.longitude);\r\n                }, e => {\r\n                    return message.error(e.message);\r\n                });\r\n            } catch (e) {\r\n                return message.error('Sorry, something wrong happened when getting location.');\r\n            }\r\n        } else {\r\n            return message.error('Sorry, your location can not be get.');\r\n        }\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateAddressByCoord = async (lat, lon) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: `http://dev.virtualearth.net/REST/v1/Locations/${lat},${lon}?key=${KEY.BingMap_key}` });\r\n            let _results = results.data.resourceSets[0].resources;\r\n            if (_results.length === 1) {\r\n                setWorkingAddress(_results[0].name);\r\n            } else {\r\n                return;\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodShopName.current.state.value &&\r\n                description.current.resizableTextArea.props.value &&\r\n                shopCategoryId &&\r\n                imageFile &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime) {\r\n\r\n                let data = {\r\n                    manager_id: props.match.params.manager_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName.current.state.value,\r\n                    food_shop_description: description.current.resizableTextArea.props.value,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_SHOP_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + axios_1.data.food_shop_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Shop Successful!');\r\n                    return props.history.push('/manager/');\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Please Add New Food Shop Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            ref={foodShopName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            defaultValue={1}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        ref={description}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodShop;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Switch, Radio, Table, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodShopDetail = (props) => {\r\n\r\n    const [foodCategoryList, setFoodCategoryList] = useState([]);\r\n    const [itemDataList, setItemDataList] = useState([]);\r\n\r\n    const [active, setActive] = useState(false);\r\n    const [closeTime, setCloseTime] = useState('');\r\n    const [openTime, setOpenTime] = useState('');\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodShopCategory, setFoodShopCategory] = useState('');\r\n    const [foodShopDescription, setFoodShopDescription] = useState('');\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [foodShopRating, setFoodShopRating] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [workingAddress, setWorkingAddress] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodShopDetail(props.match.params.food_shop_id);\r\n            let listResult = await getFoodCategoryList(props.match.params.food_shop_id)\r\n\r\n            setImageUrl(result.image_url);\r\n            setActive(result.active);\r\n            setCloseTime(result.close_time);\r\n            setOpenTime(result.open_time);\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodShopCategory(result.food_shop_category_name);\r\n            setFoodShopDescription(result.food_shop_description);\r\n            setFoodShopName(result.food_shop_name);\r\n            setFoodShopRating(result.food_shop_rating);\r\n            setWorkingAddress(result.working_address);\r\n            setFoodCategoryList(listResult);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodShopDetail = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getFoodCategoryList = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleFoodItemTableChange = async (food_category_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_LIST + \"?food_category_id=\" + food_category_id });\r\n        let _result = result.data.data;\r\n\r\n        let data = [];\r\n        for (let i = 0; i < _result.length; i++) {\r\n            data.push({\r\n                key: i,\r\n                food_name: _result[i].food_name,\r\n                food_description: _result[i].food_description,\r\n                food_item_id: _result[i].food_item_id,\r\n                image_url: _result[i].image_url\r\n            });\r\n        }\r\n        return setItemDataList(data);\r\n    }\r\n\r\n    const handleOnActiveChange = async (checked) => {\r\n        try {\r\n            await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP_ACTIVE,\r\n                data: {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    active: checked\r\n                }\r\n            });\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to update active status');\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/');\r\n    }\r\n\r\n    const handleAddItemCategory = () => {\r\n        return props.history.push('/manager/add_food_item_category/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAddFoodItem = () => {\r\n        return props.history.push('/manager/add_food_item/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleFoodItemDetail = (food_item_id) => {\r\n        return props.history.push('/manager/food_item_detail/' + food_item_id);\r\n    }\r\n\r\n    const handleEditFoodShop = () => {\r\n        return props.history.push('/manager/edit_food_shop/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <div style={{ width: '100%', height: '150px', overflow: 'hidden' }}>\r\n                <img alt=\"shop-image\" src={imageUrl} style={{ width: '100%', marginTop: '-50%' }} />\r\n            </div>\r\n            <br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={3} >{foodShopName}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Title level={4} >{workingAddress}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Divider />\r\n            <Typography.Text>\r\n                Description: {foodShopDescription}\r\n            </Typography.Text>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Open At: {openTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Close At: {closeTime}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        On Active:\r\n                        <Switch key={foodShopName} style={{ marginLeft: '5%' }} defaultChecked={active} onChange={handleOnActiveChange} />\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Created At: {createdAt}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Updated At: {updatedAt ? updatedAt : 'No Updation Record'}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5} >Rating: {foodShopRating ? foodShopRating : 'Not Available'}</Typography.Title>\r\n                    <Rate\r\n                        disabled\r\n                        defaultValue={foodShopRating ? foodShopRating : 0}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5} >Shop Category: {foodShopCategory}</Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleEditFoodShop}>Edit Food Shop Profile</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Button type=\"primary\" onClick={handleAddItemCategory}>Add Item Category</Button>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div style={{ float: 'right' }}>\r\n                        <Button type=\"primary\" onClick={handleAddFoodItem}>Add New Food Item</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <div>\r\n                <Typography.Text>Food Item Category: </Typography.Text>\r\n                <Radio.Group\r\n                    onChange={e => handleFoodItemTableChange(e.target.value)}\r\n                >\r\n                    {\r\n                        foodCategoryList.map((item, index) => (\r\n                            <Radio.Button\r\n                                value={item.food_category_id}\r\n                                key={index}\r\n                            >\r\n                                {item.food_category_name}\r\n                            </Radio.Button>\r\n                        ))\r\n                    }\r\n                </Radio.Group>\r\n                <br />\r\n                <Table\r\n                    bordered\r\n                    columns={[\r\n                        {\r\n                            title: 'Food Name',\r\n                            dataIndex: 'food_name'\r\n                        },\r\n                        {\r\n                            title: 'Food Description',\r\n                            dataIndex: 'food_description'\r\n                        },\r\n                        {\r\n                            title: 'Food Image',\r\n                            dataIndex: 'image_url',\r\n                            render: image_url => <img alt=\"food_img\" src={image_url} style={{ width: '100px' }} />\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            dataIndex: 'food_item_id',\r\n                            render: food_item_id => <Button type=\"primary\" onClick={() => handleFoodItemDetail(food_item_id)}>Detail</Button>\r\n                        }\r\n                    ]}\r\n                    dataSource={itemDataList}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodShopDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, Rate } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodItemDetail = (props) => {\r\n\r\n    const [createdAt, setCreatedAt] = useState('');\r\n    const [updatedAt, setUpdatedAt] = useState('');\r\n    const [foodAverageRating, setFoodAverageRating] = useState(0);\r\n    const [foodCategoryName, setFoodCategoryName] = useState('');\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodShopId, setFoodShopId] = useState(0);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getFoodItemDetail(props.match.params.food_item_id);\r\n\r\n            setCreatedAt(result.created_at);\r\n            setUpdatedAt(result.updated_at);\r\n            setFoodAverageRating(result.food_average_rating);\r\n            setFoodCategoryName(result.food_category_name);\r\n            setFoodDescription(result.food_description);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodShopId(result.food_shop_id);\r\n            setImageUrl(result.image_url);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getFoodItemDetail = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + foodShopId);\r\n    }\r\n\r\n    const handleEditFoodItem = () => {\r\n        return props.history.push('/manager/edit_food_item/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    const handleSeeComments = () => {\r\n        return props.history.push('/manager/food_comments/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    const handleDeleteFoodItem = async () => {\r\n        try {\r\n            let data = { food_item_id: props.match.params.food_item_id };\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.DELETE_FOOD_ITEM,\r\n                data: data\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Delete food item successful!');\r\n                return handleGoBack();\r\n            } else {\r\n                return message.error('Sorry, fail to delete item, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Action failed, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>{foodName}</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <img\r\n                        alt=\"food_image\"\r\n                        src={imageUrl}\r\n                        style={{ width: '80%' }}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Typography.Text>\r\n                        Description: {foodDescription}\r\n                    </Typography.Text>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Food Category: {foodCategoryName}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Created At: {createdAt}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={5}>\r\n                        Last Updated At: {updatedAt ? updatedAt : 'Not Available'}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Typography.Title level={5}>\r\n                        Price: ${foodPrice}\r\n                    </Typography.Title>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div\r\n                        style={{ float: 'right' }}\r\n                    >\r\n                        <Typography.Title level={5}>\r\n                            Rating: {foodAverageRating ? foodAverageRating : 'Not Available'}\r\n                            <Rate\r\n                                disabled\r\n                                defaultValue={foodAverageRating ? foodAverageRating : 0}\r\n                            />\r\n                        </Typography.Title>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Button type=\"primary\" onClick={handleSeeComments}>See Comments</Button>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Button type=\"primary\" onClick={handleEditFoodItem}>Edit Food Profile</Button>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Button type=\"primary\" onClick={handleDeleteFoodItem}>Delete Food Item</Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItemDetail;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageFile, setImageFile] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        let resultList = await getItemCategoryList(props.match.params.food_shop_id);\r\n        setItemCategoryList(resultList);\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const handleImageUpload = (e) => {\r\n        let file = e.target.files[0];\r\n        let formdata = new FormData();\r\n        formdata.append('image', file);\r\n        setImageFile(formdata);\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageFile\r\n            ) {\r\n                let data = {\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription\r\n                };\r\n\r\n                let axios_1 = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.ADD_FOOD_ITEM_URL, data: data });\r\n                let axios_2 = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + axios_1.data.food_item_id,\r\n                    data: imageFile,\r\n                    headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n                });\r\n\r\n                if (axios_2.data.success) {\r\n                    message.success('Add Food Item Successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Something wrong happened, please try again!');\r\n                }\r\n            } else {\r\n                return message.error('Please complete all the information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Add New Food Item</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Add New Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItem;\r\n","import React, { useState } from 'react';\r\nimport { Col, Row, Button, Typography, Divider, message, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst AddFoodItemCategory = (props) => {\r\n\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [text, setText] = useState('');\r\n\r\n    const getCategoryList = async (text) => {\r\n        try {\r\n            if (text) {\r\n                let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_ALL_MATCH_FOOD_CATEGORY + \"?content=\" + text });\r\n                let _results = results.data.data;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].food_category_example_name, key: i });\r\n                }\r\n                setCategoryList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleAdd = async () => {\r\n        console.log(text);\r\n        try {\r\n            if (text) {\r\n                let result = await axios({\r\n                    method: 'post',\r\n                    url: MANAGER_SERVICE_PATH.ADD_FOOD_CATEGORY,\r\n                    data: {\r\n                        food_shop_id: props.match.params.food_shop_id,\r\n                        food_category_name: text\r\n                    }\r\n                });\r\n\r\n                if (result.data.success) {\r\n                    message.success('Add food category successful!');\r\n                    return props.history.push(\"/manager/food_shop_detail/\" + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Fail to add item category, please try again');\r\n                }\r\n            } else {\r\n                return message.error('Please complete the information');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Fail to add item category, please try again');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={4}>Add New Food Category</Typography.Title>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={12}>\r\n                    <AutoComplete\r\n                        style={{ width: '80%' }}\r\n                        id=\"categoryText\"\r\n                        options={categoryList}\r\n                        onSearch={getCategoryList}\r\n                        onChange={(text) => setText(text)}\r\n                        onSelect={(text) => setText(text)}\r\n                    />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Button\r\n                        style={{ width: '50%' }}\r\n                        type=\"primary\"\r\n                        onClick={handleAdd}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFoodItemCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select, TimePicker, AutoComplete } from 'antd';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\nimport KEY from '../../../config/KEY';\r\n\r\nconst EditFoodShop = (props) => {\r\n\r\n    // Info List\r\n    const [shopCategory, setShopCategory] = useState([]);\r\n    const [possibleAddressList, setPossibleAddressList] = useState([]);\r\n\r\n    // Variable need to submit\r\n    const [shopCategoryId, setShopCategoryId] = useState(1);\r\n    const [openTime, setOpenTime] = useState(null);\r\n    const [closeTime, setCloseTime] = useState(null);\r\n    const [workingAddress, setWorkingAddress] = useState(null);\r\n    const [lat, setLat] = useState(null);\r\n    const [lon, setLon] = useState(null);\r\n    const [foodShopName, setFoodShopName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldData(props.match.params.food_shop_id);\r\n            let category_list = await getShopCategory();\r\n            setShopCategory(category_list.data.data);\r\n\r\n            setShopCategoryId(result.food_shop_category_id);\r\n            setImageUrl(result.image_url);\r\n            setOpenTime(result.open_time);\r\n            setCloseTime(result.close_time);\r\n            setWorkingAddress(result.working_address);\r\n            setLat(result.lat);\r\n            setLon(result.lon);\r\n            setFoodShopName(result.food_shop_name);\r\n            setDescription(result.food_shop_description);\r\n\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getOldData = async (food_shop_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_DETAIL + \"?food_shop_id=\" + food_shop_id })\r\n        return result.data.data;\r\n    }\r\n\r\n    const getPossibleAddressList = async (text) => {\r\n\r\n        try {\r\n            if (text[text.length - 1] === ' ' || text === '') {\r\n                return;\r\n            } else {\r\n                let _text = text.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _text + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                let data = [];\r\n                for (let i = 0; i < _results.length; i++) {\r\n                    data.push({ value: _results[i].name, key: i })\r\n                }\r\n                setPossibleAddressList(data);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const getShopCategory = async () => {\r\n        let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_SHOP_CATEGORY_LIST });\r\n        return results;\r\n    }\r\n\r\n    const updateCoord = async (address) => {\r\n        try {\r\n            if (address[address.length - 1] === ' ' || address === '') {\r\n                return;\r\n            } else {\r\n                let _address = address.replace(' ', '%20');\r\n                let results = await axios({ method: 'get', url: 'http://dev.virtualearth.net/REST/v1/Locations/' + _address + \"?key=\" + KEY.BingMap_key });\r\n                let _results = results.data.resourceSets[0].resources;\r\n\r\n                if (_results.length === 1) {\r\n                    setWorkingAddress(address);\r\n                    setLat(_results[0].point.coordinates[0]);\r\n                    setLon(_results[0].point.coordinates[1]);\r\n\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_SHOP_IMAGE + \"?id=\" + props.match.params.food_shop_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                shopCategoryId &&\r\n                foodShopName &&\r\n                description &&\r\n                workingAddress &&\r\n                lat &&\r\n                lon &&\r\n                openTime &&\r\n                closeTime &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_shop_id: props.match.params.food_shop_id,\r\n                    food_shop_category_id: shopCategoryId,\r\n                    food_shop_name: foodShopName,\r\n                    food_shop_description: description,\r\n                    working_address: workingAddress,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    open_time: openTime,\r\n                    close_time: closeTime,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_SHOP, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food shop successful!');\r\n                    return props.history.push('/manager/food_shop_detail/' + props.match.params.food_shop_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={5}>Edit Food Shop</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Name\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"foodShopName\"\r\n                            value={foodShopName}\r\n                            onChange={e => setFoodShopName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={7}></Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Category\r\n                        </Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"shopCategoryId\"\r\n                            onChange={value => setShopCategoryId(value)}\r\n                            value={shopCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                shopCategory.map((item, index) => (\r\n                                    <Select.Option value={item.food_shop_category_id} key={index}>\r\n                                        {item.food_shop_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Please Select Your Working Address\r\n                </Typography.Title>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        {\r\n                            lat && lon &&\r\n                            <img\r\n                                style={{ width: '90%' }}\r\n                                src={`https://dev.virtualearth.net/REST/v1/Imagery/Map/Road/${lat},${lon}/15?mapSize=500,300&format=png&pushpin=${lat},${lon};64;&key=${KEY.BingMap_key}`}\r\n                                alt=\"map\"\r\n                            />\r\n                        }\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <AutoComplete\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"workingAddressText\"\r\n                            options={possibleAddressList}\r\n                            onSearch={getPossibleAddressList}\r\n                            onSelect={updateCoord}\r\n                            required\r\n                        />\r\n                        <br /><br />\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Working Address: {workingAddress ? workingAddress : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Latitude: {lat ? lat : ''}</Typography.Title>\r\n                        <Typography.Title level={5} style={{ marginLeft: '20px' }}>Longitude: {lon ? lon : ''}</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                        Food Shop Description\r\n                    </Typography.Title>\r\n                    <Input.TextArea\r\n                        id=\"description\"\r\n                        rows={5}\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                        required\r\n                    />\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img alt=\"img\" src={imageUrl} style={{ width: '60%' }} />\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Food Shop Image\r\n                        </Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Open Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"openTime\"\r\n                            value={moment(openTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setOpenTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Close Time\r\n                        </Typography.Title>\r\n                        <TimePicker\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"closeTime\"\r\n                            value={moment(closeTime, 'HH:mm:ss')}\r\n                            onChange={(time, timeString) => setCloseTime(timeString)}\r\n                        />\r\n                    </ Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodShop;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditFoodItem = (props) => {\r\n\r\n    const [itemCategoryList, setItemCategoryList] = useState([]);\r\n\r\n    const [foodCategoryId, setFoodCategoryId] = useState(null);\r\n    const [foodName, setFoodName] = useState('');\r\n    const [foodPrice, setFoodPrice] = useState(0);\r\n    const [foodDescription, setFoodDescription] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOldDate(props.match.params.food_item_id);\r\n\r\n            setFoodCategoryId(result.food_category_id);\r\n            setFoodName(result.food_name);\r\n            setFoodPrice(result.food_price);\r\n            setFoodDescription(result.food_description);\r\n            setImageUrl(result.image_url);\r\n\r\n            let listResult = await getItemCategoryList(result.food_shop_id);\r\n            setItemCategoryList(listResult);\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getItemCategoryList = async (food_shop_id) => {\r\n        try {\r\n            let results = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_CATEGORY_LIST + \"?food_shop_id=\" + food_shop_id });\r\n            return results.data.data;\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const getOldDate = async (food_item_id) => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_FOOD_ITEM_DETAIL + \"?food_item_id=\" + food_item_id });\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    const handleImageUpload = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.UPLOAD_FOOD_ITEM_IMAGE + \"?id=\" + props.match.params.food_item_id,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Image Successful');\r\n                return setImageUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Image fail, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (foodCategoryId &&\r\n                foodName &&\r\n                foodPrice &&\r\n                foodDescription &&\r\n                imageUrl\r\n            ) {\r\n\r\n                let data = {\r\n                    food_item_id: props.match.params.food_item_id,\r\n                    food_category_id: foodCategoryId,\r\n                    food_name: foodName,\r\n                    food_price: foodPrice,\r\n                    food_description: foodDescription,\r\n                    image_url: imageUrl\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_FOOD_ITEM, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update food item successful!');\r\n                    return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            <Typography.Title level={3}>Edit Food Item Profile</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"foodName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFoodName(e.target.value)}\r\n                            value={foodName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Price</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            prefix=\"$\"\r\n                            type=\"number\"\r\n                            id=\"foodPrice\"\r\n                            style={{ width: '80%', textAlign: 'right' }}\r\n                            onChange={e => setFoodPrice(e.target.value)}\r\n                            value={foodPrice}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Category</Typography.Title>\r\n                        <Select\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"itemCategoryId\"\r\n                            onChange={value => setFoodCategoryId(value)}\r\n                            value={foodCategoryId}\r\n                            required\r\n                        >\r\n                            {\r\n                                itemCategoryList.map((item, index) => (\r\n                                    <Select.Option value={item.food_category_id} key={index}>\r\n                                        {item.food_category_name}\r\n                                    </Select.Option>\r\n                                ))\r\n                            }\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>Food Description</Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"foodDescription\"\r\n                    rows={5}\r\n                    onChange={e => setFoodDescription(e.target.value)}\r\n                    value={foodDescription}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <img src={imageUrl} alt=\"img\" style={{ width: '60%' }} />\r\n                        <Typography.Title level={5}>Food Image</Typography.Title>\r\n                        <Input\r\n                            required\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"file\"\r\n                            accept=\"image/jpeg,image/jpg,image/png\"\r\n                            id=\"imageFile\"\r\n                            onChange={handleImageUpload}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Edit Food Item\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditFoodItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Input, Button, Typography, Form, Divider, message } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst SettingAccount = () => {\r\n\r\n    const [clientId, setClientId] = useState(null);\r\n    const [clientSecret, setClientSecret] = useState(null);\r\n    const [managerId, setManagerId] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managetDetail = await getManagerDetail();\r\n\r\n            setClientId(managetDetail.client_id);\r\n            setClientSecret(managetDetail.client_secret);\r\n            setManagerId(managetDetail.manager_id);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            if (\r\n                clientId &&\r\n                clientSecret &&\r\n                managerId\r\n            ) {\r\n\r\n                let data = {\r\n                    client_id: clientId,\r\n                    client_secret: clientSecret,\r\n                    manager_id: managerId\r\n                };\r\n\r\n                let result = await axios({ method: 'post', url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_ACCOUNT, data: data });\r\n                if (result.data.success) {\r\n                    message.success('Update account successful!');\r\n                } else {\r\n                    return message.error('Update fail, pleaes try again!');\r\n                }\r\n\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Paypal Detail Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client ID\r\n                </Typography.Title>\r\n                <Input\r\n                    size=\"large\"\r\n                    style={{ width: '80%' }}\r\n                    id=\"clientId\"\r\n                    value={clientId}\r\n                    onChange={e => setClientId(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                    Client Secret\r\n                </Typography.Title>\r\n                <Input.TextArea\r\n                    id=\"clientSecret\"\r\n                    rows={5}\r\n                    value={clientSecret}\r\n                    onChange={e => setClientSecret(e.target.value)}\r\n                    required\r\n                />\r\n                <br /><br />\r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"large\"\r\n                    block\r\n                    htmlType=\"submit\"\r\n                    onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingAccount;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Input, Button, Typography, Form, Divider, message, Avatar } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst EditProfile = () => {\r\n\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n\r\n    const [oldEmailAddress, setOldEmailAddress] = useState(null);\r\n    const [newEmailAddress, setNewEmailAddress] = useState(null);\r\n\r\n    const [oldPhone, setOldPhone] = useState(null);\r\n    const [newPhone, setNewPhone] = useState(null);\r\n\r\n    const [newPassword, setNewPassword] = useState(null);\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(null);\r\n\r\n    const [managerId, setManagerId] = useState(null);\r\n    const [avatarUrl, setAvatarUrl] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let managerDetail = await getManagerDetail();\r\n\r\n            setFirstName(managerDetail.first_name);\r\n            setLastName(managerDetail.last_name);\r\n\r\n            setOldEmailAddress(managerDetail.email_address);\r\n            setNewEmailAddress(managerDetail.email_address);\r\n\r\n            setOldPhone(managerDetail.phone);\r\n            setNewPhone(managerDetail.phone);\r\n\r\n            setManagerId(managerDetail.manager_id);\r\n            setAvatarUrl(managerDetail.avatar_url);\r\n\r\n        } catch (e) {\r\n            return message.error(e.message);\r\n        }\r\n    }, []);\r\n\r\n    const getManagerDetail = async () => {\r\n        let result = await axios({ method: 'get', url: MANAGER_SERVICE_PATH.GET_MANAGER_DETAIL + \"?email_address=\" + localStorage.getItem('managerEmail') })\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleChangeAvatar = async (e) => {\r\n        try {\r\n            let file = e.target.files[0];\r\n            let formdata = new FormData();\r\n            formdata.append('image', file);\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_SERVICE_PATH.MANAGER_UPLOAD_AVATAR + \"?id=\" + managerId,\r\n                data: formdata,\r\n                headers: { 'Content-Type': 'multipart/form-data;charset=UTF-8' }\r\n            });\r\n\r\n            if (result.data.success) {\r\n                message.success('Upload Avatar Successful');\r\n                return setAvatarUrl(result.data.message);\r\n            } else {\r\n                return message.error('Upload Avatar fail, please try again!');\r\n            }\r\n\r\n        } catch (e) {\r\n            return message.error('Something wrong happened, please try again!');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            if (\r\n                firstName &&\r\n                lastName &&\r\n                oldEmailAddress &&\r\n                newEmailAddress &&\r\n                oldPhone &&\r\n                newPhone &&\r\n                newPassword &&\r\n                confirmNewPassword &&\r\n                managerId\r\n            ) {\r\n                if (newPassword !== confirmNewPassword) {\r\n                    return message.error(\"Confirm password is not same as the new password you set. Please try again!\");\r\n                } else {\r\n\r\n                    let data = {\r\n                        first_name: firstName,\r\n                        last_name: lastName,\r\n                        old_email_address: oldEmailAddress,\r\n                        new_email_address: newEmailAddress,\r\n                        old_phone: oldPhone,\r\n                        new_phone: newPhone,\r\n                        password: newPassword,\r\n                        manager_id: managerId,\r\n                        avatar_url: avatarUrl\r\n                    }\r\n\r\n                    let result = await axios({\r\n                        method: 'post',\r\n                        url: MANAGER_SERVICE_PATH.UPDATE_MANAGER_PROFILE,\r\n                        data: data\r\n                    });\r\n                    if (result.data.success) {\r\n                        return message.success('Update profile successful!');\r\n                    } else {\r\n                        return message.error('Update fail, pleaes try again!');\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                return message.error('Please complete information!');\r\n            }\r\n        } catch (e) {\r\n            return message.error(e.response.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={5}>Edit Your Profile Here</Typography.Title>\r\n            <Divider />\r\n            <Form>\r\n                <Typography.Title level={5}>Set Avatar</Typography.Title>\r\n                <div style={{ textAlign: 'center' }}>\r\n\r\n                    {\r\n                        avatarUrl ?\r\n                            <Avatar size={128} src={avatarUrl} /> :\r\n                            <Avatar size={128} icon={<UserOutlined />} />\r\n                    }\r\n                    <br /><br />\r\n                    <Input\r\n                        required\r\n                        size=\"large\"\r\n                        style={{ width: '90%' }}\r\n                        type=\"file\"\r\n                        accept=\"image/jpeg,image/jpg,image/png\"\r\n                        id=\"imageFile\"\r\n                        onChange={handleChangeAvatar}\r\n                    />\r\n\r\n                </div>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>First Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setFirstName(e.target.value)}\r\n                            value={firstName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Last Name</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setLastName(e.target.value)}\r\n                            value={lastName}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Email Address</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"email\"\r\n                            placeholder=\"abc@abc.com\"\r\n                            id=\"emailAddress\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewEmailAddress(e.target.value)}\r\n                            value={newEmailAddress}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>Phone Number</Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            type=\"tel\"\r\n                            pattern=\"\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}\"\r\n                            placeholder=\"(111) 111-1111\"\r\n                            id=\"phone\"\r\n                            style={{ width: '80%' }}\r\n                            onChange={e => setNewPhone(e.target.value)}\r\n                            value={newPhone}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            New Password\r\n                        </Typography.Title>\r\n                        <Input.Password\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            id=\"newPassword\"\r\n                            placeholder=\"New Password\"\r\n                            value={newPassword}\r\n                            onChange={e => setNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Typography.Title level={5} style={{ marginLeft: '5px' }}>\r\n                            Confirm Your Password\r\n                        </Typography.Title>\r\n                        <Input\r\n                            size=\"large\"\r\n                            style={{ width: '80%' }}\r\n                            type=\"password\"\r\n                            id=\"confirmNewPassword\"\r\n                            placeholder=\"Confirm New Password\"\r\n                            value={confirmNewPassword}\r\n                            onChange={e => setConfirmNewPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <br /><br />\r\n                <Button type=\"primary\" size=\"large\" block htmlType=\"submit\" onClick={handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button, Typography, message, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_API_URL from '../../../config/MANAGER_API_URL';\r\n\r\nconst CurrentOrders = (props) => {\r\n\r\n    const [orderList, setOrderList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let results = await getCurrentOrders(localStorage.getItem('managerEmail'));\r\n            setOrderList(results);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get current orders!');\r\n        }\r\n    }, []);\r\n\r\n    const getCurrentOrders = async (email_address) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: MANAGER_API_URL.GET_CURRENT_ORDERS + \"?email_address=\" + email_address\r\n        });\r\n\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleSendMessage = () => {\r\n        console.log(\"send message\")\r\n    }\r\n\r\n    const handleCompleteOrder = async (order_id) => {\r\n        try {\r\n\r\n            let data = {\r\n                order_id: order_id\r\n            };\r\n\r\n            let result = await axios({\r\n                method: 'post',\r\n                url: MANAGER_API_URL.COMPLETE_ORDER,\r\n                data: data\r\n            });\r\n\r\n            if (result.data.success) {\r\n                let results = await getCurrentOrders(localStorage.getItem('managerEmail'));\r\n                setOrderList(results);\r\n\r\n                return message.success('Complete order successful!');\r\n            } else {\r\n                return message.error('Action failed, please try again!');\r\n            }\r\n        } catch (e) {\r\n            return message.error('Action failed, please try again!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                orderList.length === 0 ?\r\n                    <Typography.Title level={3}>You don't have new orders yet</Typography.Title> :\r\n                    <div>\r\n                        {\r\n                            orderList.map((order_detail, order_index) => (\r\n                                <div key={order_index}>\r\n                                    <Typography.Title level={4}>Customer: {order_detail.first_name + \" \" + order_detail.last_name}</Typography.Title>\r\n                                    <Typography.Title level={4}>Address: {order_detail.address}</Typography.Title>\r\n                                    <Typography.Title level={4}>Created At: {order_detail.created_at}</Typography.Title>\r\n                                    <br />\r\n                                    <Typography.Text>Note: {order_detail.note}</Typography.Text>\r\n                                    <br /><br />\r\n                                    <div style={{ border: '1px solid black', padding: '2%' }}>\r\n                                        <Row>\r\n                                            <Col span={6}>\r\n                                                <Typography.Title level={4}>Food Name</Typography.Title>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <Typography.Title level={4}>Food Price</Typography.Title>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <Typography.Title level={4}>Quantity</Typography.Title>\r\n                                            </Col>\r\n                                            <Col span={6}>\r\n                                                <Typography.Title level={4}>Sub Total</Typography.Title>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <br />\r\n                                        {\r\n                                            order_detail.items.map((item, item_index) => (\r\n                                                <div key={item_index}>\r\n                                                    <Row>\r\n                                                        <Col span={6}>\r\n                                                            <Typography.Text>{item.food_name}</Typography.Text>\r\n                                                        </Col>\r\n                                                        <Col span={6}>\r\n                                                            <Typography.Text>$ {Math.floor(item.food_price * 100) / 100}</Typography.Text>\r\n                                                        </Col>\r\n                                                        <Col span={6}>\r\n                                                            <Typography.Text>{item.quantity}</Typography.Text>\r\n                                                        </Col>\r\n                                                        <Col span={6}>\r\n                                                            <Typography.Text>$ {Math.floor(item.sub_total * 100) / 100}</Typography.Text>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    <br />\r\n                                                </div>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                    <br />\r\n                                    <Typography.Title level={5}>Food Total: $ {Math.floor(order_detail.total * 100) / 100}</Typography.Title>\r\n                                    <Typography.Title level={5}>HST: $ {Math.floor(order_detail.hst * 100) / 100}</Typography.Title>\r\n                                    <Typography.Title level={4}>Total: $ {Math.floor((order_detail.total + order_detail.hst) * 100) / 100}</Typography.Title>\r\n                                    <br />\r\n                                    <Button type=\"primary\" onClick={handleSendMessage}>Send Message</Button>\r\n                                    <Button style={{ float: 'right' }} type=\"primary\" onClick={() => handleCompleteOrder(order_detail.order_id)}>Complete Order</Button>\r\n                                    <Divider />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentOrders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, message, Table } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_API_URL from '../../../config/MANAGER_API_URL';\r\n\r\nconst OrderHistory = (props) => {\r\n\r\n    const [orderList, setOrderList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let results = await getOrderHistory(localStorage.getItem('managerEmail'));\r\n            for (let i = 0; i < results.length; i++) {\r\n                results[i].key = i;\r\n            }\r\n\r\n            setOrderList(results);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get order history!');\r\n        }\r\n    }, []);\r\n\r\n    const getOrderHistory = async (email_address) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: MANAGER_API_URL.GET_ORDER_HISTORY + \"?email_address=\" + email_address\r\n        });\r\n\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleSeeDetail = (order_id) => {\r\n        return props.history.push('/manager/order_detail/' + order_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                bordered\r\n                dataSource={orderList}\r\n                columns={[\r\n                    {\r\n                        title: 'Customer',\r\n                        dataIndex: 'customer_name'\r\n                    },\r\n                    {\r\n                        title: 'Time',\r\n                        dataIndex: 'created_at'\r\n                    },\r\n                    {\r\n                        title: 'Status',\r\n                        dataIndex: 'order_status_name',\r\n                        render: order_status_name => (\r\n                            order_status_name === 'COMPLETE' ?\r\n                                <span style={{ color: 'green', fontWeight: 'bold' }}>{order_status_name}</span> :\r\n                                <span>{order_status_name}</span>\r\n                        )\r\n                    },\r\n                    {\r\n                        title: 'Action',\r\n                        dataIndex: 'order_id',\r\n                        render: order_id => <Button type=\"primary\" onClick={() => handleSeeDetail(order_id)}>See Detail</Button>\r\n                    }\r\n                ]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderHistory;","import React, { useState, useEffect } from 'react';\r\nimport { message, Row, Col, Typography, Button, Divider } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_API_URL from '../../../config/MANAGER_API_URL';\r\n\r\nconst OrderDetail = (props) => {\r\n\r\n    const [address, setAddress] = useState(null);\r\n    const [createdAt, setCreatedAt] = useState(null);\r\n    const [completedAt, setCompletedAt] = useState(null);\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [hst, setHst] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [items, setItems] = useState([]);\r\n    const [note, setNote] = useState(null);\r\n    const [orderStatusName, setOrderStatusName] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let result = await getOrderDetail(props.match.params.order_id);\r\n\r\n            setAddress(result.address);\r\n            setCreatedAt(result.created_at);\r\n            setCompletedAt(result.completed_at);\r\n            setFirstName(result.first_name);\r\n            setLastName(result.last_name);\r\n            setHst(result.hst);\r\n            setTotal(result.total);\r\n            setItems(result.items);\r\n            setNote(result.note);\r\n            setOrderStatusName(result.order_status_name)\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get order detail!');\r\n        }\r\n    }, []);\r\n\r\n    const getOrderDetail = async (order_id) => {\r\n        let result = await axios({\r\n            method: 'get',\r\n            url: MANAGER_API_URL.GET_ORDER_DETAIL + \"?order_id=\" + order_id\r\n        });\r\n\r\n        return result.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/order_history');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <Divider />\r\n            <Row>\r\n                <Col span={8}>\r\n                    <Typography.Title level={4}>Customer: {firstName + \" \" + lastName}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={4}>Address: {address}</Typography.Title>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <Typography.Title level={4}>Status: {orderStatusName === 'COMPLETE' ? (<span style={{ color: 'green', fontWeight: 'bold' }}>{orderStatusName}</span>) : (<span>{orderStatusName}</span>)}</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br /><br />\r\n            <Typography.Title level={4}>Created At: {createdAt}</Typography.Title>\r\n            <Typography.Title level={4}>Completed At: {completedAt ? completedAt : 'Not Available'}</Typography.Title>\r\n            <br /><br />\r\n            <Typography.Text>Note: {note}</Typography.Text>\r\n            <br /><br />\r\n            <div style={{ border: '1px solid black', padding: '3%' }}>\r\n                <Row>\r\n                    <Col span={6}>\r\n                        <Typography.Title level={4}>Food Name</Typography.Title>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Typography.Title level={4}>Food Price</Typography.Title>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Typography.Title level={4}>Quantity</Typography.Title>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Typography.Title level={4}>Sub Total</Typography.Title>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                {\r\n                    items.map((item, item_index) => (\r\n                        <div key={item_index}>\r\n                            <Row>\r\n                                <Col span={6}>\r\n                                    <Typography.Text>{item.food_name}</Typography.Text>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Typography.Text>$ {Math.floor(item.food_price * 100) / 100}</Typography.Text>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Typography.Text>{item.quantity}</Typography.Text>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Typography.Text>$ {Math.floor(item.sub_total * 100) / 100}</Typography.Text>\r\n                                </Col>\r\n                            </Row>\r\n                            <br />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <br />\r\n            <Typography.Title level={5}>Food Total: $ {Math.floor(total * 100) / 100}</Typography.Title>\r\n            <Typography.Title level={5}>HST: $ {Math.floor(hst * 100) / 100}</Typography.Title>\r\n            <Typography.Title level={4}>Total: $ {Math.floor((total + hst) * 100) / 100}</Typography.Title>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button, Typography, message, Card, Avatar, Rate } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport MANAGER_API_URL from '../../../config/MANAGER_API_URL';\r\n\r\nconst FoodComments = (props) => {\r\n\r\n    const [commentList, setCommentList] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let results = await getComments(props.match.params.food_item_id);\r\n            setCommentList(results);\r\n        } catch (e) {\r\n            return message.error('Sorry, fail to get comment list!');\r\n        }\r\n    }, []);\r\n\r\n    const getComments = async (food_item_id) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: MANAGER_API_URL.GET_COMMENT_LIST + \"?food_item_id=\" + food_item_id\r\n        });\r\n\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        return props.history.push('/manager/food_item_detail/' + props.match.params.food_item_id);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Button type=\"primary\" style={{ float: 'left' }} onClick={handleGoBack}>Go Back</Button>\r\n            </div>\r\n            <br /><br />\r\n            {\r\n                commentList.map((item, index) => (\r\n                    <div key={index}>\r\n                        <Card style={{ width: '80%' }}>\r\n                            <Row>\r\n                                <Col span={6}>\r\n                                    {\r\n                                        item.avatar_url ?\r\n                                            <Avatar style={{ marginLeft: '5%' }} size={64} src={item.avatar_url} /> :\r\n                                            <Avatar style={{ marginLeft: '5%' }} size={64} icon={<UserOutlined />} />\r\n                                    }\r\n                                    <br /><br />\r\n                                    <Typography.Title level={5}>{item.first_name + \" \" + item.last_name}</Typography.Title>\r\n                                </Col>\r\n                                <Col span={18}>\r\n                                    <Typography.Text>{item.created_at}</Typography.Text>\r\n                                    <br />\r\n                                    <Rate disabled value={item.rating} />\r\n                                    <br /><br />\r\n                                    <Typography.Text>Comment: {item.comment ? item.comment : 'No Comment'}</Typography.Text>\r\n                                </Col>\r\n                            </Row>\r\n                            <br />\r\n\r\n                        </Card>\r\n                        <br /><br />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodComments;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Typography, Divider, message, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport MANAGER_SERVICE_PATH from '../../../config/MANAGER_API_URL';\r\n\r\nconst Report = () => {\r\n\r\n    const [recentSalesList, setRecentSalesList] = useState([]);\r\n    const [recentFoodTotal, setRecentFoodTotal] = useState(0);\r\n    const [recentHstTotal, setRecentHstTotal] = useState(0);\r\n    const [recentTotal, setRecentTotal] = useState(0);\r\n\r\n    const [mostProlificShop, setMostProlificShop] = useState('');\r\n    const [mostProlificSeller, setMostProlificSeller] = useState('');\r\n\r\n    const [timePeriod, setTimePeriod] = useState([\r\n        { start_time: '0:00:00', end_time: '1:00:00' },\r\n        { start_time: '1:00:00', end_time: '2:00:00' },\r\n        { start_time: '2:00:00', end_time: '3:00:00' },\r\n        { start_time: '3:00:00', end_time: '4:00:00' },\r\n        { start_time: '4:00:00', end_time: '5:00:00' },\r\n        { start_time: '5:00:00', end_time: '6:00:00' },\r\n        { start_time: '6:00:00', end_time: '7:00:00' },\r\n        { start_time: '7:00:00', end_time: '8:00:00' },\r\n        { start_time: '8:00:00', end_time: '9:00:00' },\r\n        { start_time: '9:00:00', end_time: '10:00:00' },\r\n        { start_time: '10:00:00', end_time: '11:00:00' },\r\n        { start_time: '11:00:00', end_time: '12:00:00' },\r\n        { start_time: '12:00:00', end_time: '13:00:00' },\r\n        { start_time: '13:00:00', end_time: '14:00:00' },\r\n        { start_time: '14:00:00', end_time: '15:00:00' },\r\n        { start_time: '15:00:00', end_time: '16:00:00' },\r\n        { start_time: '16:00:00', end_time: '17:00:00' },\r\n        { start_time: '17:00:00', end_time: '18:00:00' },\r\n        { start_time: '18:00:00', end_time: '19:00:00' },\r\n        { start_time: '19:00:00', end_time: '20:00:00' },\r\n        { start_time: '20:00:00', end_time: '21:00:00' },\r\n        { start_time: '21:00:00', end_time: '22:00:00' },\r\n        { start_time: '22:00:00', end_time: '23:00:00' },\r\n        { start_time: '23:00:00', end_time: '24:00:00' }\r\n    ]);\r\n    const [regionList, setRegionList] = useState([]);\r\n    const [userList, setUserList] = useState([]);\r\n\r\n    const [text1, setText1] = useState('');\r\n    const [text2, setText2] = useState('');\r\n    const [text3, setText3] = useState('');\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            let initial_state = await getInitialState(localStorage.getItem('managerEmail'));\r\n\r\n            setRecentSalesList(initial_state.recent_sales_list);\r\n            setRecentFoodTotal(initial_state.recent_food_total);\r\n            setRecentHstTotal(initial_state.recent_hst_total);\r\n            setRecentTotal(initial_state.recent_total);\r\n\r\n            setMostProlificShop(initial_state.most_prolific_seller.food_shop_name);\r\n            setMostProlificSeller(initial_state.most_prolific_seller.name);\r\n\r\n            setRegionList(initial_state.region_list);\r\n            setUserList(initial_state.user_list);\r\n        } catch (e) {\r\n            return message.error('Sorry, error occured!');\r\n        }\r\n    }, []);\r\n\r\n    const getInitialState = async (email_address) => {\r\n        let results = await axios({\r\n            method: 'get',\r\n            url: MANAGER_SERVICE_PATH.GET_REPORT_INITIAL_STATE + \"?email_address=\" + email_address\r\n        });\r\n\r\n        return results.data.data;\r\n    }\r\n\r\n    const handleTimePeriod = async (index) => {\r\n        try {\r\n            let result = await axios({\r\n                method: 'get',\r\n                url: MANAGER_SERVICE_PATH.GET_SALES_BY_TIME_PERIOD + \"?email_address=\" + localStorage.getItem('managerEmail')\r\n                    + \"&&start_time=\" + timePeriod[index].start_time + \"&&end_time=\" + timePeriod[index].end_time\r\n            });\r\n\r\n            let state = result.data.data;\r\n            setText1(\"Food Total: $ \" + state.food_total + \",    HST Total: $ \" + state.hst_total + \",    Total: $ \" + state.total);\r\n        } catch (e) {\r\n            return message.error('Sorry, action failed!');\r\n        }\r\n    }\r\n\r\n    const handleRegion = async (index) => {\r\n        try {\r\n            let result = await axios({\r\n                method: 'get',\r\n                url: MANAGER_SERVICE_PATH.GET_SALES_BY_REGION + \"?email_address=\" + localStorage.getItem('managerEmail')\r\n                    + \"&&region=\" + regionList[index].address\r\n            });\r\n\r\n            let state = result.data.data\r\n            setText2(\"Food Total: $ \" + state.food_total + \",    HST Total: $ \" + state.hst_total + \",    Total: $ \" + state.total);\r\n        } catch (e) {\r\n            return message.error('Sorry, action failed!');\r\n        }\r\n    }\r\n\r\n    const handleUser = async (index) => {\r\n        try {\r\n            let result = await axios({\r\n                method: 'get',\r\n                url: MANAGER_SERVICE_PATH.GET_SALES_BY_USER_ID + \"?email_address=\" + localStorage.getItem('managerEmail')\r\n                    + \"&&user_id=\" + userList[index].customer_id\r\n            });\r\n\r\n            let state = result.data.data\r\n            setText3(\"Food Total: $ \" + state.food_total + \",    HST Total: $ \" + state.hst_total + \",    Total: $ \" + state.total);\r\n        } catch (e) {\r\n            return message.error('Sorry, action failed!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={3}>Reports and Filters</Typography.Title>\r\n            <Divider />\r\n            <Typography.Title level={4}>Recent Sales (within one week)</Typography.Title>\r\n            <Row>\r\n                <Col span={4}>\r\n                    <Typography.Title level={5}>Order ID</Typography.Title>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Typography.Title level={5}>Completed At</Typography.Title>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Typography.Title level={5}>Food Total</Typography.Title>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Typography.Title level={5}>HST</Typography.Title>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Typography.Title level={5}>Total</Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            {\r\n                recentSalesList.map((item, index) => (\r\n                    <div key={index}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Typography.Text>{item.order_id}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Text>{item.completed_at}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Text>$ {Math.floor(item.total * 100) / 100}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Text>$ {Math.floor(item.hst * 100) / 100}</Typography.Text>\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <Typography.Text>$ {Math.floor((item.total + item.hst) * 100) / 100}</Typography.Text>\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                    </div>\r\n                ))\r\n            }\r\n            <br />\r\n            <Typography.Title level={5}>Recent Food Total: $ {Math.floor(recentFoodTotal * 100) / 100}</Typography.Title>\r\n            <Typography.Title level={5}>Recent HST Total: $ {Math.floor(recentHstTotal * 100) / 100}</Typography.Title>\r\n            <Typography.Title level={4}>Recent Total: $ {Math.floor(recentTotal * 100) / 100}</Typography.Title>\r\n            <Divider />\r\n            <Typography.Title level={4}>Most Prolific Sellers (Food Shop): {mostProlificSeller} ({mostProlificShop})</Typography.Title>\r\n            <Divider />\r\n            <Typography.Title level={4}>Total Sales: </Typography.Title>\r\n            <br />\r\n\r\n            <Select\r\n                placeholder=\"Choose Time Period Here\"\r\n                size=\"large\"\r\n                style={{ width: '40%' }}\r\n                onChange={handleTimePeriod}\r\n            >\r\n                {\r\n                    timePeriod.map((item, index) => (\r\n                        <Select.Option value={index} key={index}>\r\n                            {item.start_time} - {item.end_time}\r\n                        </Select.Option>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <br />\r\n            <Typography.Title level={5}>For Time Period: {text1}</Typography.Title>\r\n            <br /><br />\r\n\r\n            <Select\r\n                placeholder=\"Choose Region Here\"\r\n                size=\"large\"\r\n                style={{ width: '40%' }}\r\n                onChange={handleRegion}\r\n            >\r\n                {\r\n                    regionList.map((item, index) => (\r\n                        <Select.Option value={index} key={index}>\r\n                            {item.address}\r\n                        </Select.Option>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <br />\r\n            <Typography.Title level={5}>For Region: {text2}</Typography.Title>\r\n            <br /><br />\r\n\r\n            <Select\r\n                placeholder=\"Choose User Name Here\"\r\n                size=\"large\"\r\n                style={{ width: '40%' }}\r\n                onChange={handleUser}\r\n            >\r\n                {\r\n                    userList.map((item, index) => (\r\n                        <Select.Option value={index} key={index}>\r\n                            {item.first_name + \" \" + item.last_name}\r\n                        </Select.Option>\r\n                    ))\r\n                }\r\n            </Select>\r\n            <br />\r\n            <Typography.Title level={5}>For User: {text3}</Typography.Title>\r\n            <br /><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report;","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu, message, Spin } from 'antd';\r\nimport {\r\n    UserOutlined, CoffeeOutlined,\r\n    CarryOutOutlined, BellOutlined, CalendarOutlined, SettingOutlined\r\n} from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport MANAGER_SERVICE_PATH from '../../config/MANAGER_API_URL';\r\nimport Footer from './components/Footer';\r\nimport FoodShopList from './components/FoodShopList';\r\nimport AddFoodShop from './components/AddFoodShop';\r\nimport FoodShopDetail from './components/FoodShopDetail';\r\nimport FoodItemDetail from './components/FoodItemDetail';\r\nimport AddFoodItem from './components/AddFoodItem';\r\nimport AddFoodItemCategory from './components/AddFoodItemCategory';\r\nimport EditFoodShop from './components/EditFoodShop';\r\nimport EditFoodItem from './components/EditFoodItem';\r\nimport SettingAccount from './components/SettingAccount';\r\nimport EditProfile from './components/EditProfile';\r\nimport CurrentOrders from './components/CurrentOrders';\r\nimport OrderHistory from './components/OrderHistory';\r\nimport OrderDetail from './components/OrderDetail';\r\nimport FoodComments from './components/FoodComments';\r\nimport Report from './components/Report';\r\n\r\nconst ManagerIndex = (props) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!(localStorage.getItem('sessionId') &&\r\n            localStorage.getItem('managerEmail'))) {\r\n            props.history.push('/manager/login');\r\n        }\r\n    }, []);\r\n\r\n    const handleLogout = () => {\r\n        setLoading(true);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: MANAGER_SERVICE_PATH.LOGOUT_URL,\r\n            withCredentials: true\r\n        }).then(res => {\r\n            setLoading(false);\r\n            if (res.data.success) {\r\n                localStorage.removeItem('sessionId');\r\n                localStorage.removeItem('managerEmail');\r\n                message.success(res.data.message);\r\n                return props.history.push('/manager/login');\r\n            } else {\r\n                return message.error(res.data.message);\r\n            }\r\n\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            return message.error(e.response.data.message);\r\n        });\r\n\r\n    }\r\n\r\n    const handleMenuClick = (e) => {\r\n        switch (e.key) {\r\n            case '1':\r\n                props.history.push('/manager/');\r\n                break;\r\n            case '2':\r\n                props.history.push('/manager/report');\r\n                break;\r\n            case '3':\r\n                props.history.push('/manager/current_orders');\r\n                break;\r\n            case '4':\r\n                props.history.push('/manager/order_history');\r\n                break;\r\n            case '5':\r\n                props.history.push('/manager/setting_account');\r\n                break;\r\n            case '6':\r\n                props.history.push('/manager/edit_profile');\r\n                break;\r\n            case '7':\r\n                handleLogout();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"Loading...\" spinning={loading}>\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <Layout.Sider collapsible>\r\n                        <Menu mode=\"inline\" theme=\"dark\" onClick={handleMenuClick}>\r\n                            <Menu.Item key=\"1\" icon={<CoffeeOutlined />}>Food Shops</Menu.Item>\r\n                            <Menu.Item key=\"2\" icon={<CarryOutOutlined />}>Report</Menu.Item>\r\n                            <Menu.Item key=\"3\" icon={<BellOutlined />}>Current Order</Menu.Item>\r\n                            <Menu.Item key=\"4\" icon={<CalendarOutlined />}>Order History</Menu.Item>\r\n                            <Menu.Item key=\"5\" icon={<SettingOutlined />}>Setting Account</Menu.Item>\r\n                            <Menu.SubMenu title=\"Account\" key=\"sub1\" icon={<UserOutlined />}>\r\n                                <Menu.Item key=\"6\">Edit Profile</Menu.Item>\r\n                                <Menu.Item key=\"7\">Logout</Menu.Item>\r\n                            </Menu.SubMenu>\r\n                        </Menu>\r\n                    </Layout.Sider>\r\n                    <Layout className=\"site-layout\">\r\n                        <Layout.Content style={{ margin: '0 16px' }}>\r\n                            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                                <Route path=\"/manager/\" exact component={FoodShopList} />\r\n                                <Route path=\"/manager/add_food_shop/:manager_id\" exact component={AddFoodShop} />\r\n                                <Route path=\"/manager/food_shop_detail/:food_shop_id\" exact component={FoodShopDetail} />\r\n                                <Route path=\"/manager/food_item_detail/:food_item_id\" exact component={FoodItemDetail} />\r\n                                <Route path=\"/manager/add_food_item/:food_shop_id\" exact component={AddFoodItem} />\r\n                                <Route path=\"/manager/add_food_item_category/:food_shop_id\" exact component={AddFoodItemCategory} />\r\n                                <Route path=\"/manager/edit_food_shop/:food_shop_id\" exact component={EditFoodShop} />\r\n                                <Route path=\"/manager/edit_food_item/:food_item_id\" exact component={EditFoodItem} />\r\n                                <Route path=\"/manager/setting_account\" exact component={SettingAccount} />\r\n                                <Route path=\"/manager/edit_profile\" exact component={EditProfile} />\r\n                                <Route path=\"/manager/current_orders\" exact component={CurrentOrders} />\r\n                                <Route path=\"/manager/order_history\" exact component={OrderHistory} />\r\n                                <Route path=\"/manager/order_detail/:order_id\" exact component={OrderDetail} />\r\n                                <Route path=\"/manager/food_comments/:food_item_id\" exact component={FoodComments} />\r\n                                <Route path=\"/manager/report\" exact component={Report} />\r\n                            </div>\r\n                        </Layout.Content>\r\n                        <Footer />\r\n                    </Layout>\r\n                </Layout>\r\n            </Spin>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerIndex;\r\n\r\n\r\n/*\r\n\r\n, Redirect\r\n<Redirect to=\"/manager/\" />\r\n<Menu.Item key=\"2\" icon={<MailOutlined />}>Message</Menu.Item>\r\n\r\n*/","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const ADD_PRODUCT_BY_ONE = \"ADD_PRODUCT_BY_ONE\";\r\nexport const DELETE_PRODUCT_BY_ONE = \"DELETE_PRODUCT_BY_ONE\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\nconst addProductToCart = (product, state) => {\r\n    console.log(\"adding product\", product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex < 0) {\r\n        updatedCart.push(product);\r\n    } else {\r\n        const updatedItem = updatedCart[updatedItemIndex];\r\n        updatedItem.quantity += product.quantity;\r\n        updatedCart[updatedItemIndex] = updatedItem;\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst addProductToCartByOne = (product, state) => {\r\n    console.log(\"adding product by one\", product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex >= 0) {\r\n        const updatedItem = updatedCart[updatedItemIndex];\r\n        updatedItem.quantity++;\r\n        updatedCart[updatedItemIndex] = updatedItem;\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst deleteProductFromCartByOne = (product, state) => {\r\n    console.log(\"deleting product by one\", product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex >= 0) {\r\n        const updatedItem = updatedCart[updatedItemIndex];\r\n        updatedItem.quantity--;\r\n        if (updatedItem.quantity === 0) {\r\n            updatedCart.splice(updatedItemIndex, 1);\r\n        } else {\r\n            updatedCart[updatedItemIndex] = updatedItem;\r\n        }\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst removeProductFromCart = (product, state) => {\r\n    console.log(\"remove product: \" + product);\r\n\r\n    const updatedCart = [...state.cart];\r\n    const updatedItemIndex = updatedCart.findIndex(\r\n        item => item.food_item_id === product.food_item_id\r\n    );\r\n\r\n    if (updatedItemIndex >= 0) {\r\n        updatedCart.splice(updatedItemIndex, 1);\r\n    }\r\n\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nconst clearCart = (state) => {\r\n    console.log('clear cart');\r\n\r\n    const updatedCart = [];\r\n    return { ...state, cart: updatedCart };\r\n}\r\n\r\nexport const shopReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_PRODUCT:\r\n            return addProductToCart(action.product, state);\r\n\r\n        case ADD_PRODUCT_BY_ONE:\r\n            return addProductToCartByOne(action.product, state);\r\n\r\n        case DELETE_PRODUCT_BY_ONE:\r\n            return deleteProductFromCartByOne(action.product, state);\r\n\r\n        case REMOVE_PRODUCT:\r\n            return removeProductFromCart(action.product, state);\r\n\r\n        case CLEAR_CART:\r\n            return clearCart(state);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import React, { useReducer } from \"react\";\r\nimport ShopContext from \"./ShopContext\";\r\nimport { shopReducer, ADD_PRODUCT, ADD_PRODUCT_BY_ONE, DELETE_PRODUCT_BY_ONE, REMOVE_PRODUCT, CLEAR_CART } from \"./reducer\";\r\n\r\nconst GlobalState = (props) => {\r\n    const [cartState, dispatch] = useReducer(shopReducer, { cart: [] });\r\n\r\n    const addProductToCart = product => {\r\n        dispatch({ type: ADD_PRODUCT, product: product });\r\n    }\r\n\r\n    const addProductToCartByOne = product => {\r\n        dispatch({ type: ADD_PRODUCT_BY_ONE, product: product });\r\n    }\r\n\r\n    const deleteProductFromCartByOne = product => {\r\n        dispatch({ type: DELETE_PRODUCT_BY_ONE, product: product });\r\n    }\r\n\r\n    const removeProductFromCart = product => {\r\n        dispatch({ type: REMOVE_PRODUCT, product: product });\r\n    }\r\n\r\n    const clearCart = () => {\r\n        dispatch({ type: CLEAR_CART });\r\n    }\r\n\r\n    return (\r\n        <ShopContext.Provider\r\n            value={{\r\n                cart: cartState.cart,\r\n                addProductToCart: addProductToCart,\r\n                removeProductFromCart: removeProductFromCart,\r\n                addProductToCartByOne: addProductToCartByOne,\r\n                deleteProductFromCartByOne: deleteProductFromCartByOne,\r\n                clearCart: clearCart\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ShopContext.Provider>\r\n    );\r\n}\r\n\r\nexport default GlobalState;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport CustomerLogIn from './pages/customer_pages/CustomerLogIn';\nimport CustomerRegister from './pages/customer_pages/CustomerRegister';\nimport CustomerResetPassword from './pages/customer_pages/CustomerResetPassword';\nimport CustomerResetPasswordToken from './pages/customer_pages/CustomerResetPasswordToken';\nimport CustomerIndex from './pages/customer_pages/CustomerIndex';\n\nimport ManagerLogIn from './pages/manager_pages/ManagerLogIn'\nimport ManagerRegister from './pages/manager_pages/ManagerRegister';\nimport ManagerResetPassword from './pages/manager_pages/ManagerResetPassword';\nimport ManagerResetPasswordToken from './pages/manager_pages/ManagerResetPasswordToken';\nimport ManagerIndex from './pages/manager_pages/ManagerIndex';\n\nimport GlobalState from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalState>\n      <Router>\n        <Switch>\n          <Route path=\"/customer/login\" exact component={CustomerLogIn} />\n          <Route path=\"/customer/register\" exact component={CustomerRegister} />\n          <Route path=\"/customer/reset-password/\" exact component={CustomerResetPassword} />\n          <Route path=\"/customer/reset-password/:token\" exact component={CustomerResetPasswordToken} />\n          <Route path=\"/customer/\" component={CustomerIndex} />\n\n          <Route path=\"/manager/login\" exact component={ManagerLogIn} />\n          <Route path=\"/manager/register\" exact component={ManagerRegister} />\n          <Route path=\"/manager/reset-password/\" exact component={ManagerResetPassword} />\n          <Route path=\"/manager/reset-password/:token\" exact component={ManagerResetPasswordToken} />\n          <Route path=\"/manager/\" component={ManagerIndex} />\n\n          <Redirect to=\"/customer/login\" />\n        </Switch>\n      </Router>\n    </GlobalState>\n  );\n}\n\nexport default App;\n","/*\n    I, ZiWei Rao (Charlie), 000795435, \n    certify that this work is my own effort and that \n    I have not allowed anyone else to copy from it.\n*/\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}